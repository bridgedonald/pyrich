/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./ClientApp/gridlist.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./ClientApp/Apiconfig.js":
/*!********************************!*\
  !*** ./ClientApp/Apiconfig.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var utils = __webpack_require__(/*! ./modules/utils */ "./ClientApp/modules/utils.js");

/**
 * 获取url参数
 * @param {string} variable 参数名
 */
function getQueryString(variable) {
    try {
        var query = window.location.search.substring(1);
        // var query = window.location.url
        var vars = query.split("&");
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            if (pair[0] == variable) {
                return pair[1];
            }
        }
        return false;
    } catch (error) {
        return false;
    }
}


module.exports = {
    "development":{
        commonApi:"//push2.eastmoney.com/",
        tsApi:"//"+(Math.floor(Math.random() * 99) + 1)+".push2.eastmoney.com/"
    },
    "production":{
        commonApi:"//push2.eastmoney.com/",
        tsApi:"//"+(Math.floor(Math.random() * 99) + 1)+".push2.eastmoney.com/"
    },
    "test":{
        // commonApi:"http://61.129.249.233:18665/",
        // tsApi:"http://61.129.249.233:18665/"
        commonApi:"//push2test.eastmoney.com/",
        tsApi:"//push2test.eastmoney.com/"
    },
    getEnvPath:function(name,value){
        
        //特殊情况设置默认值
        if(!!value){
            return value;
        }
        //防止名称误传
        if(!this.production[name]){
            return this.production.commonApi
        }
        //根据参数hq-env值，来区分环境
        var env = getQueryString("hq-env");
        // console.log("env:"+env)
        if(!env){
            return this.production[name] || "";
        }
        if(env === "development" || env === "production" || env === "test" ){
            return this[env][name]
        }else{
            return  this.production[name] || "";
        }
    }
}

/***/ }),

/***/ "./ClientApp/base.js":
/*!***************************!*\
  !*** ./ClientApp/base.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// require css
__webpack_require__(/*! ./css/common.css */ "./ClientApp/css/common.css");

// require modules
//var adapter = require('./adapter'); // 新老板行情中心页面跳转
var $ = __webpack_require__(/*! jquery */ "jquery");
var merge = _.merge;
var header = __webpack_require__(/*! ./components/qoute-header/header */ "./ClientApp/components/qoute-header/header.js"); // 头部脚本
var sidemenu = __webpack_require__(/*! ./components/quote-sidemenu/sidemenu */ "./ClientApp/components/quote-sidemenu/sidemenu.js"); // 左侧菜单
var sidetoolbox = __webpack_require__(/*! ./components/quote-sidetoolbox/toolbox */ "./ClientApp/components/quote-sidetoolbox/toolbox.js");
var filedsmap = __webpack_require__(/*! ./config/gridlist.fields.map.json */ "./ClientApp/config/gridlist.fields.map.json");
var URI = __webpack_require__(/*! ./modules/uri/main */ "./ClientApp/modules/uri/main.js");
__webpack_require__(/*! ./modules/jquery-plugins/jquery.postfixed */ "./ClientApp/modules/jquery-plugins/jquery.postfixed.js"); // 位置固定插件

var utils = __webpack_require__(/*! ./modules/utils */ "./ClientApp/modules/utils.js");
var qcsrcoll = __webpack_require__(/*! ./modules/qcsroll */ "./ClientApp/modules/qcsroll.js");
var QCScrollNew = __webpack_require__(/*! ./modules/qcsroll_new */ "./ClientApp/modules/qcsroll_new.js");
var template = __webpack_require__(/*! ./modules/template-web */ "./ClientApp/modules/template-web.js");
$.extend(template.defaults.imports, utils);
var noth5 = document.all && !document.addEventListener;
/**
 * 页面基类
 * @param {object} args 参数
 * @param {object} args.sidemenu 菜单边栏
 * @param {boolean} args.sidemenu.disable 是否禁用菜单边栏
 * @param {object} args.sidemenu.args 菜单边栏参数
 * @param {object} args.rightbox 右侧边栏
 * @param {boolean} args.rightbox.disable 是否禁用右侧边栏
 */
function base(args) {
    var options = $.extend({
        sidemenu: {
            disable: false,
            args: {}
        },
        rightbox: {
            disable: false
        }
    }, args);
    this.sidemenu = sidemenu;
    // 加载菜单
    if (!options.sidemenu.disable) {

        // var url = '';
        // if (location.host == 'quote.eastmoney.com') {
        //     url = 'http://quote.eastmoney.com/api/PageConfigs/sidemenus.json';
        // }
        // else if (location.host == 'quotationtest.eastmoney.com') {
        //     url = 'http://quotationtest.eastmoney.com/api/PageConfigs/sidemenus.json';
        // }
        // else if (location.host.indexOf('localhost')>-1) {
        //     url = '/sidemenu.json';
        // }
        // else{
        //     url = 'http://quotetest.eastmoney.com/api/PageConfigs/sidemenus.json';
        // }
        
        var url = '/center/api/sidemenu.json'

        var _opt = $.extend({
            current: this.currentmenu,
            ajax: {
                url: url,
                dataType: 'json',
                cache: true
            },
            onloaded: function (dom, json, data) {
                if (noth5) return;
                setTimeout(function () {
                    $(dom).posfixed({
                        direction: "top-bottom",
                        distance: {
                            top: $('.top-nav-wrap').outerHeight(true) || 0,
                            bottom: ($('.page-footer').outerHeight(true)+$('.pge_box').outerHeight(true)) || 0
                        }
                    });
                }, 1.5 * 1000);
            }
        }, options.sidemenu.args);
        this.menu = new sidemenu($('#sidemenu'), _opt);
    }

    /**
     * 页面脚本加载前
     */
    this.beforeLoading = function (event) {
        header.load();
        //var self = this;
        if (!options.sidemenu.disable) this.menu.load();
        $('#tools .checkNew').click(function () {
            window.location.reload();
        });
        if (typeof event === 'function') event(this);
    }

    /**
     * 页面脚本加载完成后
     */
    this.afterLoaded = function (evt) {
        if (typeof event === 'function') event(this);
        if (options.rightbox && !options.rightbox.disable) {
            this.rightbox = new sidetoolbox({
                gotop: {
                    show: 'while',
                    scrollTop: $('#page-body').offset().top
                }
            });
        }
    }

    /**
     * 获取滚动新闻（栏目）
     * @param {object} args 配置
     * @param {string} args.container 容器
     * @param {string} args.url API地址
     * @param {string} args.tpl 滚动模板
     * @param {number} args.count 加载数量
     * @param {number} args.columnId 栏目号
     * @param {number} args.update 更新时间
     */
    this.getRollingColumnNews = function (args) {
        var _opt = merge({
            container: '#scrollnews-container',
            url: '//cmsdataapi.eastmoney.com/api/CmsNews/QueryCmsNewsByColumn?pageindex=1',
            tpl: '{{each Result}}<span class="time">{{$value.Art_Showtime | formatDate "HH:mm"}}</span><a href="{{$value.Art_UniqueUrl}}">{{$value.Art_Title}}</a>{{/each}}',
            columnId: '',
            count: 20,
            update: 2 * 60 * 1000
        }, args);
        var xhr, qc;
        _load();
        setInterval(_load, 2 * 60 * 1000);

        function _load() {
            if (xhr) xhr.abort();
            xhr = $.ajax({
                url: _opt.url,
                dataType: 'jsonp',
                data: {
                    columns: _opt.columnId,
                    pagesize: _opt.count
                },
                jsonp: 'cb',
                success: function (json) {
                    if('transform' in document.documentElement.style){
                        if (qc instanceof qcsrcoll) {
                            qc.cancel();
                            qc = null;
                        }
                        $(_opt.container).html(template.render(_opt.tpl, json));
                        qc = new QCScrollNew($(_opt.container)[0]).animate();
                    }
                    else{
                        if (qc instanceof qcsrcoll) {
                            qc.cancel();
                            qc = null;
                        }
                        $(_opt.container).html(template.render(_opt.tpl, json));
                        qc = new qcsrcoll($(_opt.container)[0]).animate();
                    }

                    xhr = null;
                }
            });
        }
    }

    this.getFieldsMapping = function (params) {
        if (typeof params === 'string') {
            var query = URI(params).query(true);
            return query.sty ? filedsmap[query.sty] : null;
        } else {
            return filedsmap[params.sty]
        }
    }
}



module.exports = base;

/***/ }),

/***/ "./ClientApp/components/qoute-header/header.css":
/*!******************************************************!*\
  !*** ./ClientApp/components/qoute-header/header.css ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/components/qoute-header/header.js":
/*!*****************************************************!*\
  !*** ./ClientApp/components/qoute-header/header.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./header.css */ "./ClientApp/components/qoute-header/header.css");

var $ = __webpack_require__(/*! jquery */ "jquery");
var merge = _.merge
var QCScroll = __webpack_require__(/*! ../../modules/qcsroll */ "./ClientApp/modules/qcsroll.js");
var QCScrollNew = __webpack_require__(/*! ../../modules/qcsroll_new */ "./ClientApp/modules/qcsroll_new.js");

var utils = __webpack_require__(/*! ../../modules/utils */ "./ClientApp/modules/utils.js");
var template = __webpack_require__(/*! ../../modules/template-web */ "./ClientApp/modules/template-web.js");
//var HistoryView = require('../../modules/historyview');
var vticker = __webpack_require__(/*! ../../modules/jquery-plugins/jquery.vticker */ "./ClientApp/modules/jquery-plugins/jquery.vticker.js");
var asyncLoaders = __webpack_require__(/*! ../../modules/asyncloaders */ "./ClientApp/modules/asyncloaders.js");
var asyncLoaders = __webpack_require__(/*! ../../modules/asyncloaders */ "./ClientApp/modules/asyncloaders.js");
var qqgs = __webpack_require__(/*! ../../config/qqgs.cfg.json */ "./ClientApp/config/qqgs.cfg.json");
var apiBaseUrl = environment === 'production' ? '//quote.eastmoney.com/api' : '//quotationtest.eastmoney.com/api';
var numfBaseUrl = '//nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=CT';

module.exports = {
    load: function () {
        var args = {};
        if ($('meta[name="quote-tag"]', 'head')[0]) {
            args.set = $('meta[name="quote-tag"]', 'head').attr('content');
        }
        asyncLoaders.scriptLoader({
            url: '//emcharts.eastmoney.com/suggest/stocksuggest2017.min.js',
            success: function () {
                if(window.suggest2017){
                    new suggest2017({
                        inputid: 'search_box',
                        width: 310,
                        shownewtips: true,
                        newtipsoffset: {
                            top: -2,
                            left: 0
                        }
                    });                    
                }

            }
        });

        asyncLoaders.scriptLoader({
            url: '/center/js/old/hisacc.js',
            charset: 'gb2312',
            success: function () {
                new HistoryViews('historyest', {
                    def: "",
                    set: "",
                    lns: 0
                });
            }
        });

        // 全球指数
        new globalstocks().load();
        // 资金流
        new capitalflow().load();
        // 头条
        new headlines().load();
        // 投资组合
        new portfolio().load();
    },
    globalstocks: globalstocks,
    capitalflow: capitalflow,
    headlines: headlines,
    portfolio: portfolio
};

/**
 * 全球股指滚动条
 * @param {Object} configs 配置
 */
function globalstocks(configs) {
    var self = this,
        timer, qc;
    var mathNum = Math.floor(Math.random() * 100);//接口加随机数 
    var _url = "//" + mathNum + ".push2.eastmoney.com/api/qt/ulist.np/get?fid=f3&pi=0&pz=40&po=1&ut=bd1d9ddb04089700cf9c27f6f7426281&fltt=2&fields=f14,f12,f13,f2,f3,f4,f6,f104,f105,f106&np=1";
    var $context = false;
    var nameMsg = [{}]
    var secids = [];
    var qqgsMsg = qqgs.qqgsMsg;
    //console.log(qqgs.qqgsMsg,"全球股票")
    //numfBaseUrl + '&cmd=C._UIFO&sty=sfcoo&st=z&token=4f1862fc3b5e77c150a2b985b12db0fd'
    for (var i = 0; i < qqgsMsg.length; i++) {
        secids.push((qqgsMsg[i].id).trim());
    }
    //console.log(secids)
    var options = this.options = merge({
        url:_url ,
        secids: secids.join(","),
        template: '{{each data val idx}}<a href="//quote.eastmoney.com/gb/zs{{val.Code}}.html">{{val.Name}}</a> {{val.Close }} <span class="{{val.Change | getColor}}">{{val.Arrow}}{{val.Change}} {{val.Arrow}}{{val.ChangePercent}}</span>{{/each}}',
        render: render,
        update: 15 * 1000
    }, configs);

    function render(data,callback) {
        if (data instanceof Array) {
            var models = [];
            for (var i = 0; i < data.length; i++) {
                if (typeof data[i] !== 'object') continue;               
                var items = data[i];               
                models.push({
                    Market: items.f13,
                    Code: items.f12,
                    Name: items.f14,
                    Close: utils.toFixedFun(items.f2),
                    Change: utils.toFixedFun(items.f4),
                    ChangePercent: utils.addPercent(items.f3),
                    Arrow: parseFloat(items.f4) > 0 ? '↑' : parseFloat(items.f4) < 0 ? '↓' : ''
                });
            }         
            var html = template.render(options.template, {
                data: models
            }); 
            if (!$context) {
                $('#globalindex').html(html);
                if (qc) qc.cancel();
                if('transform' in document.documentElement.style){
                    var qc = new QCScrollNew($('#globalindex')[0]);
                    qc.animate();
                }
                else{
                    var qc = new QCScroll($('#globalindex')[0]);
                    qc.animate();                    
                }

                $context = true
            } else {
                $('#globalindex>div>div').html(html);
            }
            
                        
        }
    }

    this.load = function (callback) {
        clearTimeout(timer);
        $.ajax({
            url: options.url,
            data: {secids: options.secids},
            dataType: 'jsonp',
            jsonp: 'cb',
            success: function (json) {
                //console.log(json, "全球股市请求")
                if (json && json.data && json.data.diff.length > 0) {
                    return options.render(json.data.diff,callback);
                }
                
            },
            error: function (xhr, status, error) {
                console.error(status, error);
            },
            complete: function () {
                timer = setTimeout(function () {
                    self.load();
                }, options.update);
            }
        });
    }
    //this.load();
}

/**
 * 沪深港通资金流
 */
function capitalflow() {
    var self = this,
        timer;
    this.load = function () {
        clearTimeout(timer);
        $.ajax({
            url: '//push2.eastmoney.com/api/qt/kamt/get?fields1=f1,f2,f3,f4&fields2=f51,f52,f53,f54&ut=b2884a393a59ad64002292a3e90d46a5',
            dataType: 'jsonp',
            jsonp: 'cb',
            success: function (json) {
                if (json) {                  
                    var items = json.data;
                    if (items) {
                        var hgtzj = items.hk2sh.dayNetAmtIn === 0 ? '-' : utils.numbericFormat(items.hk2sh.dayNetAmtIn * 10000),
                            sgtzj = items.hk2sz.dayNetAmtIn === 0 ? '-' : utils.numbericFormat(items.hk2sz.dayNetAmtIn * 10000),
                            ggthzj = items.sh2hk.dayNetAmtIn === 0 ? '-' : utils.numbericFormat(items.sh2hk.dayNetAmtIn * 10000),
                            ggtszj = items.sz2hk.dayNetAmtIn === 0 ? '-' : utils.numbericFormat(items.sz2hk.dayNetAmtIn * 10000);

                        $('#hgtzj').html(hgtzj).removeClass('red green').addClass(utils.getColor(items.hk2sh.dayNetAmtIn));; // 沪股通
                        $("#sgtzj").html(sgtzj).removeClass('red green').addClass(utils.getColor(items.hk2sz.dayNetAmtIn));; // 深股通
                        $("#ggthzj").html(ggthzj).removeClass('red green').addClass(utils.getColor(items.sh2hk.dayNetAmtIn));; // 港股通(沪)
                        $("#ggtszj").html(ggtszj).removeClass('red green').addClass(utils.getColor(items.sz2hk.dayNetAmtIn));; // 港股通(深)  

                        if(items.hk2sh.status === 4) {
                            $('#hgtzj').html('- -').removeClass('red green').addClass('black');
                        }
                        if(items.hk2sz.status === 4) {
                            $("#sgtzj").html('- - ').removeClass('red green').addClass('black');
                        }
                        if(items.sh2hk.status === 4) {
                            $("#ggthzj").html('- -').removeClass('red green').addClass('black');;
                        }
                        if(items.sz2hk.status === 4) {
                            $("#ggtszj").html('- -').removeClass('red green').addClass('black');
                        }

                        $('#hgtrun').html(self.getstatus(items.hk2sh.status));
                        $('#sgtrun').html(self.getstatus(items.hk2sz.status));
                        $('#ggthrun').html(self.getstatus(items.sh2hk.status));
                        $('#ggtsrun').html(self.getstatus(items.sz2hk.status));      
                    }
                                
                   
                }
            },
            complete: function () {
                timer = setTimeout(self.load, 20 * 1000);
            }
        })
    }  
    this.getstatus = function (number) {
        // 额度可用->有额度, 午盘休息->午休, 早盘清空->清空, 额度用完->无额度, 今日停牌->停牌, 股市收盘->收盘, 今日休市->休市, 限制买入->限买, 限制卖出->限卖, 暂停
        var typeStr = "";
        var type = parseFloat(number);
        if (type === "NaN" || isNaN(type)) {
            typeStr = '<b></b>';
            return typeStr;
        }
        switch (type) {
            case 1:
                typeStr = ' <b class="icon icon_stockopen"></b >有额度';
                break;
            case 2:
                typeStr = '<b class="icon icon_stockclose"></b>无额度';
                break;
            case 3:
                typeStr = '<b class="icon icon_stockclose"></b>收盘';
                break;
            case 4:
                typeStr = '<b class="icon icon_stockclose"></b>休市';
                break;
        }
        return typeStr;
    }
}

/**
 * 投资组合
 */
function portfolio() {
    var self = this,
        aid;
    var rd, rw, rm, ry;
    this.load = function () {

        $.ajax({
            url: '//quote.eastmoney.com/newapi/portfolio.js',
            type: 'GET',
            dataType: 'jsonp',
            jsonpCallback: 'portfolioRate',
            cache: true,
            success: portfolioLoader
        });

        function portfolioLoader(json) {
            if (json){
                $('#portfolio').show()
                var data = json;
                rd = data.ReturnRateDaily;
                rw = data.ReturnRateWeekly;
                rm = data.ReturnRateMonthly;
                ry = data.ReturnRateYearly;
                self.render();                
            }

        }
    }
    this.template = '<ul><li><a href="http://group.eastmoney.com/index.html" target="_blank">高手日收益达<span>{{rateDay}}</span></a></li>' +
        '<li><a href="http://group.eastmoney.com/index.html" target="_blank">高手周收益达<span>{{rateWeek}}</span></a></li>' +
        '<li><a href="http://group.eastmoney.com/index.html" target="_blank">高手月收益达<span>{{rateMonth}}</span></a></li>' +
        '<li><a href="http://group.eastmoney.com/index.html" target="_blank">高手年收益达<span>{{rateYear}}</span></a></li></ul>';
    this.render = function () {
        if (!rd || !rw || !rm || !ry) return false;
        var $dom = $('#zhrool');
        var html = template.render(self.template, {
            // rateDay: !isNaN(rd) ? (rd * 100).toFixed(0) : '-',
            // rateWeek: !isNaN(rw) ? (rw * 100).toFixed(0) : '-',
            // rateMonth: !isNaN(rm) ? (rm * 100).toFixed(0) : '-',
            // rateYear: !isNaN(ry) ? (ry * 100).toFixed(0) : '-'
            rateDay: rd,
            rateWeek: rw,
            rateMonth: rm,
            rateYear: ry
        });
        if ($dom.length === 0) return false;
        $dom.html(html).vTicker({
            showItems: 1,
            height: 28
        });
    }
}

/**
 * 头条新闻
 */
function headlines() {
    var self = this;
    var timer;
    this.load = function () {
        clearTimeout(timer);
        $.ajax({
            url: '/center/api/bulletin1374',
            dataType: 'html',
            success: function (html) {
                self.render(html);
            },
            complete: function () {
                timer = setTimeout(self.load, 5 * 1000 * 60);
            }
        });
    }
    this.render = function (html) {
        try {
            var $html = $(html),
                $cnt = $('li', $html);
            if ($cnt.length > 0) {
                $('#headlines').html($cnt.first().text()).attr("title", $cnt.first().text());
            }
        } catch (e) {
            console.error(e);
        }
    }
    //this.load();
}

/***/ }),

/***/ "./ClientApp/components/quote-sidemenu/sidemenu.art":
/*!**********************************************************!*\
  !*** ./ClientApp/components/quote-sidemenu/sidemenu.art ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"side-menu-inner\">\r\n    <div class=\"head\"></div>\r\n    <div class=\"level-list\">\r\n        <ul class=\"level1-wrapper\">\r\n            {{each menu val idx}}\r\n            <li class=\"level1-wrapper-li menu-{{val.key}}-wrapper\" style=\"{{val.show===false?'display:none':''}}\">\r\n                <a id=\"menu_{{val.key}}\" class=\"level1-ahref menu-{{val.key}} {{val.className}}\"\r\n                    data-key=\"{{val.key}}\" data-path=\"\"\r\n                    title=\"{{val.title}}\" href=\"{{val.href}}\" target=\"{{val.target||'_self'}}\">\r\n                    <span class=\"level1-icon\"></span>\r\n                    <span class=\"text\">{{val.title}}</span>\r\n                    {{if val.hot}}<span class=\"icon-hot\"></span>{{/if}}\r\n                    {{if val.next && val.next.length>0}}\r\n                    <span class=\"dot leftmenu-right-arrow\"></span>\r\n                    {{/if}}\r\n                </a>\r\n                {{if val.next && val.next.length>0}}\r\n                <div class=\"level2-wrapper\">\r\n                    <div class=\"level2-list menu-{{val.key}}-wrapper\" data-count=\"{{val.next.length}}\">\r\n                        <ul class=\"level2-items\">\r\n                            {{each val.next val1 idx1}}\r\n                            <li class=\"level2-wrapper-li\" style=\"{{val1.show===false?'display:none':''}}\">\r\n                                <a id=\"menu_{{val1.key}}\" class=\"level2-ahref menu-{{val1.key}} {{val1.className}}\" \r\n                                    data-key=\"{{val1.key}}\" data-path=\"{{val.key}}\"\r\n                                    title=\"{{val1.title}}\" href=\"{{val1.href}}\" \r\n                                    target=\"{{val1.target||'_self'}}\">\r\n                                    {{if val1.next && val1.next.length>0}}\r\n                                    <span class=\"leftmenu-right-arrow2 icon\"></span>\r\n                                    {{/if}}\r\n                                    <span class=\"text\">{{val1.title}}</span>\r\n                                    {{if val1.hot}}<span class=\"icon-hot\"></span>{{/if}}\r\n                                </a>\r\n                                {{if val1.next && val1.next.length>0}}\r\n                                <div class=\"level3-wrapper menu-{{val1.key}}-wrapper\" data-count=\"{{val1.next.length}}\">\r\n                                    <div class=\"level3-list\">\r\n                                        {{each val1.next val2 idx2}}\r\n                                        {{if idx2%25===0}}<ul class=\"ul-col\">{{/if}}\r\n                                            <li class=\"level3-wrapper-li menu-{{val2.key}}-wrapper\" style=\"{{val2.show===false?'display:none':''}}\">\r\n                                                <span class=\"letter\">{{val2.groupKey}}</span>\r\n                                                <a id=\"menu_{{val2.key}}\" href=\"{{val2.href}}\" class=\"{{val2.className}} menu-{{val2.key}}\" \r\n                                                    data-key=\"{{val2.key}}\" data-path=\"{{val.key}};{{val1.key}}\"\r\n                                                    title=\"{{val2.title}}\" target=\"{{val2.target||'_self'}}\">\r\n                                                    <span class=\"text\">{{val2.title}}</span>\r\n                                                    {{if val2.hot}}<span class=\"icon-hot\"></span>{{/if}}\r\n                                                </a>\r\n                                            </li>\r\n                                        {{if idx2%25===24}}</ul>{{/if}}\r\n                                        {{/each}}\r\n                                    </div>\r\n                                </div>\r\n                                {{/if}}\r\n                            </li>\r\n                            {{/each}}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {{/if}}\r\n            </li>\r\n            {{/each}}\r\n        </ul>\r\n    </div>\r\n</div>";

/***/ }),

/***/ "./ClientApp/components/quote-sidemenu/sidemenu.css":
/*!**********************************************************!*\
  !*** ./ClientApp/components/quote-sidemenu/sidemenu.css ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/components/quote-sidemenu/sidemenu.js":
/*!*********************************************************!*\
  !*** ./ClientApp/components/quote-sidemenu/sidemenu.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
var merge = _.merge
var actual = __webpack_require__(/*! ../../modules/jquery-plugins/jquery-actual */ "./ClientApp/modules/jquery-plugins/jquery-actual.js");
var template = __webpack_require__(/*! ../../modules/template-web */ "./ClientApp/modules/template-web.js");
var tpl = __webpack_require__(/*! ./sidemenu.art */ "./ClientApp/components/quote-sidemenu/sidemenu.art");
__webpack_require__(/*! ./sidemenu.css */ "./ClientApp/components/quote-sidemenu/sidemenu.css");

module.exports = sidemenu;

function testParam(href){
  if((location.hostname == 'auth.quote.eastmoney.com' || location.hostname == 'quotetest.eastmoney.com') && href.indexOf('/center/') == 0 && href.indexOf('.html') > 0 && location.search.indexOf('hq-env=test') > 0) {
    return href.replace('.html', '.html?hq-env=test')
  }
  return href
}


/**
 * 加载菜单边栏
 * @param {HTMLElement|string|JQuery<Element>} container 容器
 * @param {MenuOptions} options 选项
 */
function sidemenu(container, options) {
    var $container = $(container),
        _opt = merge(new MenuOptions(), options),
        self = this;
    var cache;
    this.dom = $container[0];
    this.loaded = false;
    this.load = function () {
        if ($container.length === 0) return false;
        $container.unbind('menu.draw');
        if (_opt.ajax) {
            if (_opt.dataType === 'jsonp') _opt.ajax.jsonpCallback = 'menuLoader';
            _opt.ajax.success = function (json) {
                cache = json;
                self.draw(json);
                if (typeof _opt.onloaded === 'function') {
                    var args = [$container[0], json];
                    var $dom = $('#menu_' + _opt.current, $container);
                    if ($dom.length) args.push($dom.data());
                    _opt.onloaded.apply(options, args);
                }
                self.loaded = true;
            }
            $.ajax(_opt.ajax);
        } else if (_opt.data) {
            cache = _opt.data;
            this.draw(cache);
            if (typeof _opt.onloaded === 'function') {
                var args = [$container[0], cache];
                var $dom = $('#menu_' + _opt.current, $container);
                if ($dom.length) args.push($dom.data());
                _opt.onloaded.apply(options, args);
            }
            this.loaded = true;
        }
        return this;
    }
    this.draw = function (data, current) {
        data = data || cache;
        _opt.current = current || location.hash.replace('#', '') || _opt.current;
        if (data instanceof Array) {
            renderMenu($container, data);
            // console.info(111)
            // console.info(_opt.crumbs)
            // console.info(data)
            // console.info(_opt.current)
            setCrumbs(_opt.crumbs, data, _opt.current);
            setEvents($container, _opt.current);
        }
        var $dom = $('#menu_' + _opt.current, $container);
        $container.trigger('menu.draw', $dom.length > 0 ? [data, $dom.data()] : data);
        return this;
    }
}
sidemenu.getmap = getmap;


/**
 * 获取菜单ID映射
 * @param {Array<TreeElement>} tree 菜单树
 * @param {string} parent 父级菜单ID
 */
function getmap(tree, parent) {
    var _map = {};
    if (tree instanceof Array && tree.length > 0) {
        for (var i = 0; i < tree.length; i++) {
            var element = tree[i];
            if (!element && !element.key) continue;
            _map[element.key] = element;
            if (parent) element.parentKey = parent;
            if (element.next instanceof Array) {
                $.extend(_map, getmap(element.next, element.key));
            }
        }
    }
    return _map;
}

/**
 * 渲染菜单
 * @param {string|HTMLElement} container DOM容器
 * @param {Array} menu 菜单数据
 */
function renderMenu(container, menu) {
    sorting(menu);
    // var tplrender = template.compile(tpl);
    // var html = tplrender({
    //     'menu': menu
    // });
    // $(container).addClass('side-menu').html(html);
    var menudom = render(menu);
    $(container).addClass('side-menu').html(menudom);

    function sorting(list) {
        if (list instanceof Array && list.length > 0) {
            list.sort(function (a, b) {
                return a.order - b.order
            });
            for (var i = 0; i < list.length; i++) {
                var element = list[i];
                if (element) sorting(element.next);
            }
        }
    }
    /**
     * 
     * @param {Array.<TreeElement>} data 
     * @param {number} level 
     * @param {string[]} path 
     */
    function render(data, level, path) {
        if (!data) return '';
        var _path = path || [];
        var _lvl = level || 1;
        /** @type {JQuery<HTMLElement>} */
        var doms = [];
        var className = 'level' + _lvl + '-wrapper';
        if (_lvl === 1) {
            doms.push($('<div class="side-menu-inner"><div class="head"></div><div class="level-list"><ul class="' + className + '"></ul></div>'));
        } else if (data.length > 25) {
            for (var i = 0; i < data.length / 25; i++) {
                doms.push($('<ul class="ul-col"></ul>').addClass(className));
            }
        } else {
            doms.push($('<ul></ul>').addClass(className));
        }
        for (var i = 0; i < data.length; i++) {
            var item = data[i];
            var $dom = _lvl === 1 ? $('ul.' + className, doms[0]) : doms[parseInt(i / 25)];
            var href = testParam(item.href)

            var $link = $('<a id="menu_' + item.key + '" class="menu-' + item.key + '"></a>')
                .addClass(_lvl === 1 ? 'root-link' : 'sub-link')
                .data('key', item.key).data('path', _path.join(';'))
                .prop('href', href)
                .attr('title', item.title)
                .attr('target', item.target || '_self');
            if (item.className) $link.addClass(item.className);
            if (_lvl === 1) $link.append('<span class="root-icon"></span>');
            $link.append('<span class="text">' + (item.name || item.title) + '</span>');
            if (item.hot) $link.append('<span class="icon-hot"></span>');
            var nextLvl = _lvl + 1;
            var $li = $('<li class="sub-items menu-' + item.key + '-wrapper"></li>')
                .html($link)
                .hover(function () {
                    $(this).children('.sub-wrapper').show();
                }, function () {
                    $(this).children('.sub-wrapper').hide();
                });
            if (doms.length > 1) $li.prepend('<span class="letter">' + item.groupKey + '</span>');
            $dom.append($li);

            if (item.show === false) $li.hide();
            if (item.next instanceof Array && item.next.length > 0) {
                var $arrow = $('<span></span>');
                if (_lvl === 1) $arrow.addClass('dot leftmenu-right-arrow');
                else $arrow.addClass('leftmenu-right-arrow2 icon');
                $link.append($arrow);
                var $subwrapper = $('<div></div>')
                    .addClass('menu-' + item.key + '-wrapper sub-wrapper level' + nextLvl)
                    .data('count', item.next.length);
                var nextpath = merge([], _path);
                nextpath.push(item.key);
                var $sub = render(item.next, nextLvl, nextpath);
                $subwrapper.html($sub);
                $li.append($subwrapper);
            }
        }
        return doms;
    }
}

/**
 * 设置面包屑
 * @param {string} options 配置项
 * @param {object} json 菜单数据
 * @param {string} current 当前菜单ID
 */
function setCrumbs(options, json, current) {
    var _opt = $.extend(new CrumbsOptions(), options);
    var $dom = $(_opt.container);
    if ($dom.length <= 0 || !(json instanceof Array) || !current)
        return false;
    var map = getmap(json);
    var data = {
        'list': getlist(map, current)
    };
    try {
        var html = template.render(_opt.template, data);
        $dom.html(html);
    } catch (e) {
        console.error(e);
    }
    /**
     * 获取有序列表
     * @param {object} map 映射表
     * @param {string} leaf 叶子ID
     */
    function getlist(map, leaf) {
        var list = [];
        var item = map[leaf];
        if (item) {
            list.push(item);
            if (item.parentKey) {
                Array.prototype.unshift.apply(list, getlist(map, item.parentKey));
            }
        }
        return list;
    }
}

/**
 * 设置菜单边栏的显示事件
 * @param {HTMLElement|string|JQuery<Element>} container 容器
 * @param {string} current 当前选中的id
 */
function setEvents(container, current) {
    var $dom = $(container);
    var actual_settings = {
        includeMargin: true
    };

    // 高亮处理
    if (current) {
        var $cur = $('#menu_' + current, $dom).addClass('active');
        var paths = $cur.data('path');
        if (paths) {
            $.each(paths.split(';'), function (idx, val) {
                $('#menu_' + val, $dom).addClass('active');
            });
        }
    }
    // 菜单位移处理
    $('.sub-items', $dom).hover(function () {
        var submenu = $(this).children('.sub-wrapper');
        if (submenu.length > 0) {
            var offset = submenu.offset(),
                height = submenu.actual('outerHeight', actual_settings),
                subs = $(window).height() + $(window).scrollTop() - (offset.top + height + 25);
            submenu.css('top', subs < 0 ? subs : '');
        }
    }, function () {
        $(this).children('.sub-wrapper').css('top', '');
    });

    $('.menu-hsbroad-wrapper', $dom).find('.level3').each(function (idx, ele) {
        if ($(ele).children('.ul-col').length <= 0) return false;
        var count = $(ele).children('.ul-col').length;

        //  $(ele).width(count * 100);
        
        // 沪深板块 太宽 增加横向滚动
        if(count <= 8){
            $(ele).width(count * 100);
        }else{
            var html = '<div style="width:'+count * 100+'px">'+$(ele).html()+'</div>';
            $(ele).css("overflow-x","scroll");
            $(ele).html(html);
        }
    });

}


/**
 * 菜单选项
 */
function MenuOptions() {
    this.current = location.hash.replace('#', '') || '';
    this.ajax = false;
    this.crumbs = new CrumbsOptions();
    this.onloaded = null;
}

/**
 * 面包屑选项
 */
function CrumbsOptions() {
    this.container = document.getElementById('crumbs');
    this.template = '<a href="http://www.eastmoney.com" target="_blank">东方财富网</a>' +
        ' &gt; <a href="/center" target="_self">行情中心</a>' +
        '{{each list}}' +
        '{{if $value.href && $index!==list.length-1}} &gt; <a target="{{$value.target}}" href="{{$value.href}}">{{$value.title}}</a>' +
        '{{else}} &gt; {{$value.title}}{{/if}}' +
        '{{/each}}';
}

/**
 * 菜单树结构
 * @property {string} key ID
 * @property {string} href 地址
 * @property {string} target 跳转方式
 * @property {string} title 标题
 * @property {string} className 类名
 * @property {string} groupKey 类聚ID
 * @property {Array<TreeElement>} next 子菜单
 */
function TreeElement() {
    this.key = '';
    this.name = '';
    this.hot = false;
    this.href = '';
    this.target = '_self';
    this.title = '';
    this.className = '';
    this.groupKey = '';
    this.next = new Array();
}

/***/ }),

/***/ "./ClientApp/components/quote-sidetoolbox/toolbox.art":
/*!************************************************************!*\
  !*** ./ClientApp/components/quote-sidetoolbox/toolbox.art ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"tool-box\">\r\n    <a id=\"tool-box-feedback\" class=\"feedback\" href=\"http://corp.eastmoney.com/liuyan.html\" target=\"_blank\">\r\n        <span>意见反馈</span>\r\n        <div class=\"feedback-left\" style=\"display:none\"></div>\r\n        <div class=\"feedback-right\" style=\"display:none\"></div>\r\n    </a>\r\n    <a id=\"tool-box-sreach\" class=\"stock-search\">\r\n        <div class=\"search-left\" style=\"display:none\">行情</div>\r\n        <div class=\"search-right\" style=\"display:none\">搜索</div>\r\n    </a>\r\n    <a id=\"tool-box-gotop\" class=\"gotop icon-gotop\" style=\"display:none\"></a>\r\n</div>";

/***/ }),

/***/ "./ClientApp/components/quote-sidetoolbox/toolbox.css":
/*!************************************************************!*\
  !*** ./ClientApp/components/quote-sidetoolbox/toolbox.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/components/quote-sidetoolbox/toolbox.js":
/*!***********************************************************!*\
  !*** ./ClientApp/components/quote-sidetoolbox/toolbox.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./toolbox.css */ "./ClientApp/components/quote-sidetoolbox/toolbox.css");

var $ = __webpack_require__(/*! jquery */ "jquery");
var throttle = _.throttle
var tpl = __webpack_require__(/*! ./toolbox.art */ "./ClientApp/components/quote-sidetoolbox/toolbox.art");

module.exports = toolbox;

/**
 * 生成右侧工具栏
 * @param {object} options 配置项
 * @param {string|HTMLElement|JQuery<HTMLElement>} options.template HTML模板
 * @param {object} options.feedback 意见配置
 * @param {boolean} options.feedback.show 是否显示
 * @param {object} options.search 下拉搜索配置
 * @param {boolean} options.search.show 是否显示
 * @param {object} options.gotop 置顶配置
 * @param {'always'|'nextscreen'|'while'|'none'} options.gotop.show 显示方式
 * @param {number} options.gotop.scrollTop 当show为'while'时,达到scrollTop时显示
 */
function toolbox(options) {
    var _opt = $.extend(true, {}, toolbox.defaults, options);
    this.load = function () {
        var $dom = $(_opt.template);
        $('body').append($dom);
        this.bindevents($dom);
        return this;
    }

    this.bindevents = function (context) {
        // 意见反馈
        feedbackRender(context);
        // 搜索
        searchRender(context);
        // 返回顶部
        gotopRender(context);
        return this;
    }
    this.load();

    function feedbackRender(conatiner) {
        $('#tool-box-feedback', conatiner).hover(function (e) {
            var ctx = this;
            $('span', ctx).hide();
            $('div', ctx).show();
            $('.feedback-left', ctx).animate({
                left: 12
            }, {
                duration: 250,
                complete: function () {
                    $('.feedback-right', ctx).animate({
                        left: 24
                    }, 250);
                }
            });
        }, function (e) {
            $('span', this).show();
            $('div', this).hide();
            $('.feedback-left', this).css('left', -36);
            $('.feedback-right', this).css('left', 50);
        });
        if (!_opt.feedback.show) $('#tool-box-feedback', conatiner).hide();
    }

    function searchRender(conatiner) {
        $('#tool-box-sreach', conatiner).hover(function () {
            $(this).removeClass('icon-fdj');
            $('div', this).show();
            $('.search-left', this).animate({
                left: 11
            });
            $('.search-right', this).animate({
                left: 11
            });
        }, function () {
            $('div', this).hide();
            $('.search-left', this).css('left', -33);
            $('.search-right', this).css('left', 50);
            $(this).addClass('icon-fdj');
        });
        if (!_opt.search.show) $('#tool-box-sreach', conatiner).hide();
    }

    function gotopRender(conatiner) {
        var _show = _opt.gotop.show;
        if (_show === 'none') {
            $('#tool-box-gotop').hide();
        } else if (_show === 'always') {
            $('#tool-box-gotop').show();
        } else {
            var threshold = _show === 'while' && _opt.gotop.scrollTop ? _opt.gotop.scrollTop : $(window).height();
            $(window).resize(function (e) {
                threshold = $(window).height();
            });
            $(window).scroll(throttle(function (e) {
                if ($(document).scrollTop() >= threshold) $('#tool-box-gotop').show();
                else $('#tool-box-gotop').hide();
            }, 500));
        }
        $('#tool-box-gotop', conatiner).hover(function (e) {
            $(this).removeClass('icon-gotop');
            $(this).text('回到顶部');
        }, function (e) {
            $(this).addClass('icon-gotop');
            $(this).text('');
        });
        $('#tool-box-gotop', conatiner).click(function (e) {
            $(document).scrollTop(0);
            return false;
        });
    }
}

toolbox.defaults = {
    template: tpl,
    feedback: {
        show: true
    },
    search: {
        show: false
    },
    gotop: {
        show: 'nextscreen',
        scrollTop: 0
    }
}

/***/ }),

/***/ "./ClientApp/config sync recursive gridlist\\.cfg\\.json$":
/*!****************************************************!*\
  !*** ./ClientApp/config sync gridlist\.cfg\.json$ ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./abstocks.gridlist.cfg.json": "./ClientApp/config/abstocks.gridlist.cfg.json",
	"./bonds.gridlist.cfg.json": "./ClientApp/config/bonds.gridlist.cfg.json",
	"./borads.gridlist.cfg.json": "./ClientApp/config/borads.gridlist.cfg.json",
	"./foreign.gridlist.cfg.json": "./ClientApp/config/foreign.gridlist.cfg.json",
	"./gridlist.cfg.json": "./ClientApp/config/gridlist.cfg.json",
	"./hkstocks.gridlist.cfg.json": "./ClientApp/config/hkstocks.gridlist.cfg.json",
	"./indexes.gridlist.cfg.json": "./ClientApp/config/indexes.gridlist.cfg.json",
	"./options.gridlist.cfg.json": "./ClientApp/config/options.gridlist.cfg.json"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./ClientApp/config sync recursive gridlist\\.cfg\\.json$";

/***/ }),

/***/ "./ClientApp/config sync recursive gridlist\\.fields\\.json$":
/*!*******************************************************!*\
  !*** ./ClientApp/config sync gridlist\.fields\.json$ ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./gridlist.fields.json": "./ClientApp/config/gridlist.fields.json",
	"./tsq.gridlist.fields.json": "./ClientApp/config/tsq.gridlist.fields.json"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./ClientApp/config sync recursive gridlist\\.fields\\.json$";

/***/ }),

/***/ "./ClientApp/config/abstocks.gridlist.cfg.json":
/*!*****************************************************!*\
  !*** ./ClientApp/config/abstocks.gridlist.cfg.json ***!
  \*****************************************************/
/*! exports provided: hs_a_board, sh_a_board, sh_a_board_zcz, sh_a_board_hzz, sz_a_board, sz_a_board_zcz, sz_a_board_hzz, bj_a_board, newshares, sme_board, gem_board, gem_board_zcz, gem_board_hzz, kcb_board, cdr_board, sh_hk_board, sz_hk_board, b_board, ab_comparison_sh, ab_comparison_sz, st_board, st_board_sh, st_board_sz, st_board_kcb, st_board_cyb, staq_net_board, neeq_stocks, neeq_basic, neeq_innovate, neeq_agreement, neeq_marketmaking, neeq_bidding, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"hs_a_board\":{\"_comment\":\"沪深A股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html\\\" target=\\\"_blank\\\">实时资金流向</a>|<a href=\\\"//data.eastmoney.com/zjlx/list.html\\\" target=\\\"_blank\\\">主力排名</a>|<a href=\\\"//data.eastmoney.com/bkzj/\\\" target=\\\"_blank\\\">板块资金</a>|<a href=\\\"//data.eastmoney.com/bkzj/hy.html\\\" target=\\\"_blank\\\">行业资金流向</a>|<a href=\\\"//data.eastmoney.com/bkzj/gn.html\\\" target=\\\"_blank\\\">概念资金流向</a>|<a href=\\\"//data.eastmoney.com/bkzj/dy.html\\\" target=\\\"_blank\\\">地域资金流向</a>|<a href=\\\"//data.eastmoney.com/bkzj/jlr.html\\\" target=\\\"_blank\\\">资金流监测</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._A&sty=FCOIATC\",\"fields\":\"ABStocks\",\"rowId\":\"row-{{Code}}{{Market}}\"},\"config-pic\":{\"params\":\"?cmd=C._A&sty=ESBFDTC\"}},\"_gridtable\":{\"container\":\"#main-table\",\"sourceType\":\"tsq\",\"config\":{\"baseurl\":\"//push2.eastmoney.com/\",\"params\":\"?id=1\",\"mappingsKey\":\"TSQList\",\"fields\":\"TSQABStocks\",\"update\":0,\"rowId\":\"row-{{f12}}{{f13}}\"},\"config-pic\":{\"params\":\"?cmd=C._A&sty=ESBFDTC\"}}},\"sh_a_board\":{\"_comment\":\"上证A股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha\\\" target=\\\"_blank\\\">沪A资金流今日排行</a><a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha_5\\\" target=\\\"_blank\\\">沪A资金流5日排行</a><a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha_10\\\" target=\\\"_blank\\\">沪A资金流10日排行</a><a href=\\\"//data.eastmoney.com/zjlx/list.html#sha\\\" target=\\\"_blank\\\">沪A主力排名</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部上证A股\",\"href\":\"/center/gridlist.html#sh_a_board\",\"on\":true},{\"title\":\"注册制上证A股\",\"href\":\"/center/gridlist.html#sh_a_board_zcz\"},{\"title\":\"核准制上证A股\",\"href\":\"/center/gridlist.html#sh_a_board_hzz\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"container\":\"#main-table\",\"config\":{\"params\":\"?cmd=C.2&sty=FCOIATC\",\"fields\":\"ABStocks\",\"rowId\":\"row-{{Code}}{{Market}}\"},\"config-pic\":{\"params\":\"?cmd=C.2&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}},\"_gridtable\":{\"container\":\"#main-table\",\"sourceType\":\"tsq\",\"config\":{\"baseurl\":\"//push2.eastmoney.com/\",\"params\":\"?id=2\",\"mappingsKey\":\"TSQList\",\"fields\":\"TSQABStocks\",\"update\":0,\"rowId\":\"row-{{f12}}{{f13}}\"},\"config-pic\":{\"params\":\"?cmd=C.2&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sh_a_board_zcz\":{\"_comment\":\"注册制上证A股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha\\\" target=\\\"_blank\\\">沪A资金流今日排行</a><a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha_5\\\" target=\\\"_blank\\\">沪A资金流5日排行</a><a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha_10\\\" target=\\\"_blank\\\">沪A资金流10日排行</a><a href=\\\"//data.eastmoney.com/zjlx/list.html#sha\\\" target=\\\"_blank\\\">沪A主力排名</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"sh_a_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部上证A股\",\"href\":\"/center/gridlist.html#sh_a_board\"},{\"title\":\"注册制上证A股\",\"href\":\"/center/gridlist.html#sh_a_board_zcz\",\"on\":true},{\"title\":\"核准制上证A股\",\"href\":\"/center/gridlist.html#sh_a_board_hzz\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sh_a_board_hzz\":{\"_comment\":\"核准制上证A股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha\\\" target=\\\"_blank\\\">沪A资金流今日排行</a><a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha_5\\\" target=\\\"_blank\\\">沪A资金流5日排行</a><a href=\\\"//data.eastmoney.com/zjlx/detail.html#sha_10\\\" target=\\\"_blank\\\">沪A资金流10日排行</a><a href=\\\"//data.eastmoney.com/zjlx/list.html#sha\\\" target=\\\"_blank\\\">沪A主力排名</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"sh_a_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部上证A股\",\"href\":\"/center/gridlist.html#sh_a_board\"},{\"title\":\"注册制上证A股\",\"href\":\"/center/gridlist.html#sh_a_board_zcz\"},{\"title\":\"核准制上证A股\",\"href\":\"/center/gridlist.html#sh_a_board_hzz\",\"on\":true}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sz_a_board\":{\"_comment\":\"深证A股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza\\\" target=\\\"_blank\\\">深A资金流今日排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza_5\\\" target=\\\"_blank\\\">深A资金流5日排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza_10\\\" target=\\\"_blank\\\">深A10日资金流向排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/list.html#sza\\\" target=\\\"_blank\\\">深A主力排名</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部深证A股\",\"href\":\"/center/gridlist.html#sz_a_board\",\"on\":true},{\"title\":\"注册制深证A股\",\"href\":\"/center/gridlist.html#sz_a_board_zcz\"},{\"title\":\"核准制深证A股\",\"href\":\"/center/gridlist.html#sz_a_board_hzz\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._SZAME&sty=FCOIATC\",\"fields\":\"ABStocks\",\"rowId\":\"row-{{Code}}{{Market}}\"},\"config-pic\":{\"params\":\"?cmd=C._SZAME&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}},\"_gridtable\":{\"container\":\"#main-table\",\"sourceType\":\"tsq\",\"config\":{\"baseurl\":\"//push2.eastmoney.com/\",\"params\":\"?id=3\",\"mappingsKey\":\"TSQList\",\"fields\":\"TSQABStocks\",\"update\":0,\"rowId\":\"row-{{f12}}{{f13}}\"},\"config-pic\":{\"params\":\"?cmd=C._SZAME&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sz_a_board_zcz\":{\"_comment\":\"注册制深证A股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza\\\" target=\\\"_blank\\\">深A资金流今日排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza_5\\\" target=\\\"_blank\\\">深A资金流5日排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza_10\\\" target=\\\"_blank\\\">深A10日资金流向排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/list.html#sza\\\" target=\\\"_blank\\\">深A主力排名</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"sz_a_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部深证A股\",\"href\":\"/center/gridlist.html#sz_a_board\"},{\"title\":\"注册制深证A股\",\"href\":\"/center/gridlist.html#sz_a_board_zcz\",\"on\":true},{\"title\":\"核准制深证A股\",\"href\":\"/center/gridlist.html#sz_a_board_hzz\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sz_a_board_hzz\":{\"_comment\":\"核准制深证A股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza\\\" target=\\\"_blank\\\">深A资金流今日排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza_5\\\" target=\\\"_blank\\\">深A资金流5日排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/detail.html#sza_10\\\" target=\\\"_blank\\\">深A10日资金流向排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/list.html#sza\\\" target=\\\"_blank\\\">深A主力排名</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"sz_a_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部深证A股\",\"href\":\"/center/gridlist.html#sz_a_board\"},{\"title\":\"注册制深证A股\",\"href\":\"/center/gridlist.html#sz_a_board_zcz\"},{\"title\":\"核准制深证A股\",\"href\":\"/center/gridlist.html#sz_a_board_hzz\",\"on\":true}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"bj_a_board\":{\"_comment\":\"北证A股\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._SZAME&sty=FCOIATC\",\"fields\":\"ABStocks\",\"rowId\":\"row-{{Code}}{{Market}}\"},\"config-pic\":{\"params\":\"?cmd=C._SZAME&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}},\"_gridtable\":{\"container\":\"#main-table\",\"sourceType\":\"tsq\",\"config\":{\"baseurl\":\"//push2.eastmoney.com/\",\"params\":\"?id=3\",\"mappingsKey\":\"TSQList\",\"fields\":\"TSQABStocks\",\"update\":0,\"rowId\":\"row-{{f12}}{{f13}}\"},\"config-pic\":{\"params\":\"?cmd=C._SZAME&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"newshares\":{\"_comment\":\"新股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//stock.eastmoney.com/newstock.html\\\" target=\\\"_blank\\\">新股频道</a>|<a href=\\\"//data.eastmoney.com/xg/xg/default.html\\\" target=\\\"_blank\\\">新股申购</a>|<a href=\\\"//data.eastmoney.com/xg/xg/calendar.html\\\" target=\\\"_blank\\\">新股日历</a>|<a href=\\\"//data.eastmoney.com/xg/gh/default.html\\\" target=\\\"_blank\\\">新股上会</a>|<a href=\\\"//data.eastmoney.com/xg/xg/sbqy.html\\\" target=\\\"_blank\\\">首发申报信息</a>|<a href=\\\"//data.eastmoney.com/xg/xg/chart/fxsyl.html\\\" target=\\\"_blank\\\">新股解析</a>|<a href=\\\"//data.eastmoney.com/xg/xg/dxsyl.html\\\" target=\\\"_blank\\\">打新收益率</a>|<a href=\\\"//data.eastmoney.com/zrz/dxzf.html\\\" target=\\\"_blank\\\">增发</a>|<a href=\\\"//data.eastmoney.com/zrz/pg.html\\\" target=\\\"_blank\\\">配股</a>|<a href=\\\"//data.eastmoney.com/xg/kzz/default.html\\\" target=\\\"_blank\\\">可转债</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true,\"fields\":[[\"PB\",\"市净率\"],[\"MarketValue\",\"总市值\"],[\"FlowCapitalValue\",\"流通市值\"],[\"ChangePercent60Day\",\"60日涨跌幅\"],[\"ChangePercent360Day\",\"年初至今涨跌幅\"],[\"Speed\",\"涨速\"],[\"FiveMinuteChangePercent\",\"五分钟涨跌\"],[\"VolumeRate\",\"量比\"]]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.BK05011&sty=FCOIATC\",\"fields\":\"newshares\"},\"config-pic\":{\"params\":\"?cmd=C.BK05011&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sme_board\":{\"_comment\":\"中小板\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/list.html#zxb\\\" target=\\\"_blank\\\">中小板主力排名</a>|<a href=\\\"//data.eastmoney.com/xg/xg/default.html?stat=4\\\" target=\\\"_blank\\\">中小板新股申购</a>|<a href=\\\"//data.eastmoney.com/xg/gh/default.html?mkt=4\\\" target=\\\"_blank\\\">中小板新股上会</a>|<a href=\\\"//data.eastmoney.com/xg/xg/sbqy.aspx?mkt=3\\\" target=\\\"_blank\\\">中小板首发申报</a>|<a href=\\\"//data.eastmoney.com/xg/xg/dxsyl.html?stat=4\\\" target=\\\"_blank\\\">中小板打新收益</a>\"},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.13&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.13&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"gem_board\":{\"_comment\":\"创业板\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部创业板\",\"href\":\"/center/gridlist.html#gem_board\",\"on\":true},{\"title\":\"注册制创业板\",\"href\":\"/center/gridlist.html#gem_board_zcz\"},{\"title\":\"核准制创业板\",\"href\":\"/center/gridlist.html#gem_board_hzz\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"gem_board_zcz\":{\"_comment\":\"注册制创业板\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"gem_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部创业板\",\"href\":\"/center/gridlist.html#gem_board\"},{\"title\":\"注册制创业板\",\"href\":\"/center/gridlist.html#gem_board_zcz\",\"on\":true},{\"title\":\"核准制创业板\",\"href\":\"/center/gridlist.html#gem_board_hzz\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"gem_board_hzz\":{\"_comment\":\"核准制创业板\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"gem_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部创业板\",\"href\":\"/center/gridlist.html#gem_board\"},{\"title\":\"注册制创业板\",\"href\":\"/center/gridlist.html#gem_board_zcz\"},{\"title\":\"核准制创业板\",\"href\":\"/center/gridlist.html#gem_board_hzz\",\"on\":true}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"kcb_board\":{\"_comment\":\"科创板\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//stock.eastmoney.com/kechuangban.html\\\" target=\\\"_blank\\\">科创板频道</a>|<a href=\\\"//stock.eastmoney.com/a/ckcbdd.html\\\" target=\\\"_blank\\\">科创板导读</a>|<a href=\\\"//stock.eastmoney.com/xuexiao.html?id=kcb\\\" target=\\\"_blank\\\">科创板学校</a>|<a href=\\\"//quote.eastmoney.com/center/kcb.html\\\" target=\\\"_blank\\\">科创板概念股</a>|<a href=\\\"//data.eastmoney.com/kcb/\\\" target=\\\"_blank\\\">科创板数据</a>|<a href=\\\"//guba.eastmoney.com/list,kcb.html\\\" target=\\\"_blank\\\">科创板吧</a>|<a href=\\\"//baike.eastmoney.com/item/%E7%A7%91%E5%88%9B%E6%9D%BF%E5%BC%80%E6%88%B7%E6%8C%87%E5%8D%97\\\" target=\\\"_blank\\\">科创板开户指南</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.80&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C.80&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"cdr_board\":{\"_comment\":\"中国存托凭证\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true,\"fields\":[[\"VolumeRate\",\"量比\"],[\"TurnoverRate\",\"换手率\"],[\"PERation\",\"市盈率\",true],[\"PB\",\"市净率\"],[\"MarketValue\",\"总市值\"],[\"FlowCapitalValue\",\"流通市值\"],[\"ChangePercent60Day\",\"60日涨跌幅\"],[\"ChangePercent360Day\",\"年初至今涨跌幅\"],[\"Speed\",\"涨速\"],[\"FiveMinuteChangePercent\",\"五分钟涨跌\"]]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CDR&sty=FCOIATD\",\"fields\":\"CDRStocks\"},\"config-pic\":{\"params\":\"?cmd=C._CDR&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sh_hk_board\":{\"_comment\":\"沪股通\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"/center/gridlist.html#ah_comparison\\\" target=\\\"_blank\\\">AH股比价</a>|<a href=\\\"/center/gridlist.html#sz_hk_board\\\" target=\\\"_blank\\\">深股通(港>深)</a>|<a href=\\\"/center/gridlist.html#hk_sh_stocks\\\" target=\\\"_blank\\\">港股通(沪>港)</a>|<a href=\\\"/center/gridlist.html#hk_sz_stocks\\\" target=\\\"_blank\\\">港股通(深>港)</a>|<a href=\\\"//data.eastmoney.com/hsgt/index.html\\\" target=\\\"_blank\\\">沪深港通资金流向</a>|<a href=\\\"//data.eastmoney.com/hsgt/top10.html\\\" target=\\\"_blank\\\">沪深港通十大成交股</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.BK07071&sty=FCOIATC\",\"fields\":\"newshares\"},\"config-pic\":{\"params\":\"?cmd=C.BK07071&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"sz_hk_board\":{\"_comment\":\"深股通\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"/center/gridlist.html#ah_comparison\\\" target=\\\"_blank\\\">AH股比价</a>|<a href=\\\"/center/gridlist.html#sh_hk_board\\\" target=\\\"_blank\\\">沪股通(港>沪)</a>|<a href=\\\"/center/gridlist.html#hk_sh_stocks\\\" target=\\\"_blank\\\">港股通(沪>港)</a>|<a href=\\\"/center/gridlist.html#hk_sz_stocks\\\" target=\\\"_blank\\\">港股通(深>港)</a>|<a href=\\\"//data.eastmoney.com/hsgt/index.html\\\" target=\\\"_blank\\\">沪深港通资金流向</a>|<a href=\\\"//data.eastmoney.com/hsgt/top10.html\\\" target=\\\"_blank\\\">沪深港通十大成交股</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.BK08041&sty=FCOIATC\",\"fields\":\"newshares\"},\"config-pic\":{\"params\":\"?cmd=C.BK08041&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"b_board\":{\"_comment\":\"B股\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//stock.eastmoney.com/bgu.html\\\" target=\\\"_blank\\\">B股频道</a>|<a href=\\\"/center/gridlist.html#ab_comparison_sh\\\" target=\\\"_blank\\\">沪市AB股比价表</a>|<a href=\\\"/center/gridlist.html#ab_comparison_sz\\\" target=\\\"_blank\\\">深市AB股比价表</a>|<a href=\\\"//data.eastmoney.com/zjlx/detail.html\\\" target=\\\"_blank\\\">B股资金流排行</a>|<a href=\\\"//data.eastmoney.com/zjlx/list.html\\\" target=\\\"_blank\\\">B股主力排名</a>\"},\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._B&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C._B&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"ab_comparison_sh\":{\"_comment\":\"上证AB股比价\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._ABPCSHZ&sty=FCABHL\",\"fields\":\"ABComparison_SH\"},\"config-pic\":{\"params\":\"?cmd=C._B&sty=ESBFDTC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=ID\"}}},\"ab_comparison_sz\":{\"_comment\":\"深证AB股比价\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._ABPCSZZ&sty=FCABHL\",\"fields\":\"ABComparison_SZ\"},\"config-pic\":{\"params\":\"?cmd=C._B&sty=ESBFDTC\"}}},\"st_board\":{\"_comment\":\"风险警示板\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部风险\",\"href\":\"/center/gridlist.html#st_board\",\"on\":true},{\"title\":\"上证风险\",\"href\":\"/center/gridlist.html#st_board_sh\"},{\"title\":\"深证风险\",\"href\":\"/center/gridlist.html#st_board_sz\"},{\"title\":\"科创板风险\",\"href\":\"/center/gridlist.html#st_board_kcb\"},{\"title\":\"创业板风险\",\"href\":\"/center/gridlist.html#st_board_cyb\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._AB_FXJS&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C._AB_FXJS&sty=ESBFDTC\"}}},\"st_board_sh\":{\"_comment\":\"上证风险\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"st_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部风险\",\"href\":\"/center/gridlist.html#st_board\"},{\"title\":\"上证风险\",\"href\":\"/center/gridlist.html#st_board_sh\",\"on\":true},{\"title\":\"深证风险\",\"href\":\"/center/gridlist.html#st_board_sz\"},{\"title\":\"科创板风险\",\"href\":\"/center/gridlist.html#st_board_kcb\"},{\"title\":\"创业板风险\",\"href\":\"/center/gridlist.html#st_board_cyb\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._AB_FXJS&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C._AB_FXJS&sty=ESBFDTC\"}}},\"st_board_sz\":{\"_comment\":\"深证风险\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"st_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部风险\",\"href\":\"/center/gridlist.html#st_board\"},{\"title\":\"上证风险\",\"href\":\"/center/gridlist.html#st_board_sh\"},{\"title\":\"深证风险\",\"href\":\"/center/gridlist.html#st_board_sz\",\"on\":true},{\"title\":\"科创板风险\",\"href\":\"/center/gridlist.html#st_board_kcb\"},{\"title\":\"创业板风险\",\"href\":\"/center/gridlist.html#st_board_cyb\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._AB_FXJS&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C._AB_FXJS&sty=ESBFDTC\"}}},\"st_board_kcb\":{\"_comment\":\"科创板风险\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"st_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部风险\",\"href\":\"/center/gridlist.html#st_board\"},{\"title\":\"上证风险\",\"href\":\"/center/gridlist.html#st_board_sh\"},{\"title\":\"深证风险\",\"href\":\"/center/gridlist.html#st_board_sz\"},{\"title\":\"科创板风险\",\"href\":\"/center/gridlist.html#st_board_kcb\",\"on\":true},{\"title\":\"创业板风险\",\"href\":\"/center/gridlist.html#st_board_cyb\"}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._AB_FXJS&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C._AB_FXJS&sty=ESBFDTC\"}}},\"st_board_cyb\":{\"_comment\":\"创业板风险\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"],\"navbar_key\":\"st_board\"},\"l3menu\":{\"show\":true,\"data\":[{\"title\":\"全部风险\",\"href\":\"/center/gridlist.html#st_board\"},{\"title\":\"上证风险\",\"href\":\"/center/gridlist.html#st_board_sh\"},{\"title\":\"深证风险\",\"href\":\"/center/gridlist.html#st_board_sz\"},{\"title\":\"科创板风险\",\"href\":\"/center/gridlist.html#st_board_kcb\"},{\"title\":\"创业板风险\",\"href\":\"/center/gridlist.html#st_board_cyb\",\"on\":true}]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":true},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._AB_FXJS&sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?cmd=C._AB_FXJS&sty=ESBFDTC\"}}},\"staq_net_board\":{\"_comment\":\"两网及退市\",\"navbar\":{\"show\":true,\"keys\":[\"hs_a_board\",\"sh_a_board\",\"sz_a_board\",\"bj_a_board\",\"newshares\",\"sme_board\",\"gem_board\",\"kcb_board\",\"cdr_board\",\"sh_hk_board\",\"sz_hk_board\",\"b_board\",\"ab_comparison_sh\",\"ab_comparison_sz\",\"st_board\",\"staq_net_board\"]},\"toolbar\":{\"tools\":[\"pictable\",\"refresh\"]},\"customfields\":{\"show\":false},\"gridtable\":{\"config\":{\"params\":\"?cmd=R.__40|__42&sty=FCOIA\",\"fields\":\"NeeqStocks\"},\"config-pic\":{\"params\":\"?cmd=R.__40|__42&sty=ESBFDTC\"}}},\"neeq_stocks\":{\"_comment\":\"新三板全部\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.81&sty=FCOIA\",\"fields\":\"NeeqStocks\"}}},\"neeq_basic\":{\"_comment\":\"新三板基础层\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._81.16&sty=FCOIA\",\"fields\":\"NeeqStocks\"}}},\"neeq_innovate\":{\"_comment\":\"新三板创新层\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._81.32&sty=FCOIA\",\"fields\":\"NeeqStocks\"}}},\"neeq_agreement\":{\"_comment\":\"新三板协议\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._81.PRTCL&sty=FCOIA\",\"fields\":\"NeeqStocks\"}}},\"neeq_marketmaking\":{\"_comment\":\"新三板做市\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._81.MM&sty=FCOIA\",\"fields\":\"NeeqStocks\"}}},\"neeq_bidding\":{\"_comment\":\"新三板竞价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R._81.CA|_81.CM&sty=FCOIA\",\"fields\":\"NeeqStocks\"}}}}");

/***/ }),

/***/ "./ClientApp/config/bonds.gridlist.cfg.json":
/*!**************************************************!*\
  !*** ./ClientApp/config/bonds.gridlist.cfg.json ***!
  \**************************************************/
/*! exports provided: bond_index, bond_sh, bond_sz, bond_sh_buyback, bond_sz_buyback, bond_national_sh, bond_enterprise_sh, bond_convertible_sh, bond_national_sz, bond_convertible_sz, bond_enterprise_sz, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"bond_index\":{\"_comment\":\"债券指数\",\"gridtable\":{\"config\":{\"params\":\"?cmd=3994812,3950322,3950312,3950222,3950212,0000611,0000221,0000131,0000121&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_sh\":{\"_comment\":\"上海债券\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SH&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_sz\":{\"_comment\":\"深圳债券\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SZ&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_sh_buyback\":{\"_comment\":\"上证回购\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SH_H&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_sz_buyback\":{\"_comment\":\"深证回购\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SZ_H&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_national_sh\":{\"_comment\":\"沪国债\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SH_G&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_enterprise_sh\":{\"_comment\":\"沪企债\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SH_Q&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_convertible_sh\":{\"_comment\":\"沪转债\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SH_Z&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_national_sz\":{\"_comment\":\"深国债\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SZ_G&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_convertible_sz\":{\"_comment\":\"深转债\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SZ_Z&sty=FCOIATC\",\"fields\":\"Bonds\"}}},\"bond_enterprise_sz\":{\"_comment\":\"深企债\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DEBT_SZ_Q&sty=FCOIATC\",\"fields\":\"Bonds\"}}}}");

/***/ }),

/***/ "./ClientApp/config/borads.gridlist.cfg.json":
/*!***************************************************!*\
  !*** ./ClientApp/config/borads.gridlist.cfg.json ***!
  \***************************************************/
/*! exports provided: concept_board, industry_board, region_board, boards, boards2, index_component, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"concept_board\":{\"_comment\":\"概念板块排行\",\"hotlinks\":{\"show\":true},\"digest\":{\"container\":\"#digest_box\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._BKGN&sty=FPGBKI\",\"fields\":\"Borads\",\"update\":40000},\"config-pic\":{\"params\":\"?cmd=C._BKGN&sty=ESBFDTC\"}}},\"industry_board\":{\"_comment\":\"行业板块排行\",\"hotlinks\":{\"show\":true},\"digest\":{\"container\":\"#digest_box\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._BKHY&sty=FPGBKI\",\"fields\":\"Borads\",\"update\":40000},\"config-pic\":{\"params\":\"?cmd=C._BKHY&sty=ESBFDTC\"}}},\"region_board\":{\"_comment\":\"地域板块排行\",\"hotlinks\":{\"show\":true},\"digest\":{\"container\":\"#digest_box\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._BKDY&sty=FPGBKI\",\"fields\":\"Borads\",\"update\":40000},\"config-pic\":{\"params\":\"?cmd=C._BKDY&sty=ESBFDTC\"}}},\"boards\":{\"_comment\":\"板块详情\",\"hotlinks\":{\"show\":true},\"digest\":{\"container\":\"#digest_box\",\"quotechart\":{\"type\":\"timemini\",\"options\":{\"container\":\"#quote_chart\",\"width\":324,\"height\":170,\"token\":\"e1e6871893c6386c5ff6967026016627\",\"bigImg\":{\"stauts\":\"show\"},\"timeline\":[{\"time\":\"11:30/13:00\",\"position\":0.5}],\"update\":20000},\"compatible\":{\"container\":\"#quote_chart\",\"url\":\"//webquotepic.eastmoney.com/GetPic.aspx?imageType=FLP20RSI&token=4f1862fc3b5e77c150a2b985b12db0fd\",\"width\":304,\"height\":150,\"update\":20000}},\"capitalflowchart\":{\"type\":\"fundmini\",\"options\":{\"baseurl\":\"//ff.eastmoney.com/EM_CapitalFlowInterface/api/js?type=ff&check=MLBMS&js=({(x)})&rtntype=3&acces_token=4f1862fc3b5e77c150a2b985b12db0fd\",\"hqurl\":\"//push2.eastmoney.com/api/qt/stock/fflow/kline/get?lmt=0&klt=1&fields1=f1,f2,f3,f7&np=1&fltt=2&invt=2&fields2=f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61,f62,f63,f64,f65&ut=fa5fd1943c7b386f172d6893dbfba10b\",\"container\":\"#capitalflow_chart\",\"width\":324,\"height\":170,\"bigImg\":{\"stauts\":\"show\"},\"update\":20000},\"compatible\":{\"container\":\"#capitalflow_chart\",\"url\":\"//webquotepic.eastmoney.com/GetPic.aspx?imageType=FFFLP20R&type=FFR&token=4f1862fc3b5e77c150a2b985b12db0fd\",\"width\":304,\"height\":150,\"update\":20000}},\"capitalflow-rank\":{\"container\":\"#capitalflow_rank\",\"type\":\"simple\",\"params\":\"?sty=DCFFPBFMS&st=(BalFlowMain)&sr=-1\",\"count\":5,\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=BalFlowMainSub\",\"fields\":[{\"name\":\"number\",\"title\":\"排名\",\"data\":\"$num\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='//guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='//data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='//data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\"},{\"data\":\"BalFlowMainSub\",\"title\":\"主力净流入\",\"color\":true}],\"update\":20000}},\"gridtable\":{\"config\":{\"params\":\"?sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?sty=ESBFDTC\"}}},\"boards2\":{\"_comment\":\"板块详情\",\"hotlinks\":{\"show\":true},\"digest\":{\"container\":\"#digest_box\",\"quotechart\":{\"type\":\"timemini\",\"options\":{\"container\":\"#quote_chart\",\"width\":324,\"height\":170,\"token\":\"e1e6871893c6386c5ff6967026016627\",\"bigImg\":{\"stauts\":\"show\"},\"timeline\":[{\"time\":\"11:30/13:00\",\"position\":0.5}],\"update\":20000},\"compatible\":{\"container\":\"#quote_chart\",\"url\":\"//webquotepic.eastmoney.com/GetPic.aspx?imageType=FLP20RSI&token=4f1862fc3b5e77c150a2b985b12db0fd\",\"width\":304,\"height\":150,\"update\":20000}},\"capitalflowchart\":{\"type\":\"fundmini\",\"options\":{\"baseurl\":\"//ff.eastmoney.com/EM_CapitalFlowInterface/api/js?type=ff&check=MLBMS&js=({(x)})&rtntype=3&acces_token=4f1862fc3b5e77c150a2b985b12db0fd\",\"hqurl\":\"//push2.eastmoney.com/api/qt/stock/fflow/kline/get?lmt=0&klt=1&fields1=f1,f2,f3,f7&np=1&fltt=2&invt=2&fields2=f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61,f62,f63,f64,f65&ut=fa5fd1943c7b386f172d6893dbfba10b\",\"container\":\"#capitalflow_chart\",\"width\":324,\"height\":170,\"bigImg\":{\"stauts\":\"show\"},\"update\":20000},\"compatible\":{\"container\":\"#capitalflow_chart\",\"url\":\"//webquotepic.eastmoney.com/GetPic.aspx?imageType=FFFLP20R&type=FFR&token=4f1862fc3b5e77c150a2b985b12db0fd\",\"width\":304,\"height\":150,\"update\":20000}},\"capitalflow-rank\":{\"container\":\"#capitalflow_rank\",\"type\":\"simple\",\"params\":\"?sty=DCFFPBFMS&st=(BalFlowMain)&sr=-1\",\"count\":5,\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=BalFlowMainSub\",\"fields\":[{\"name\":\"number\",\"title\":\"排名\",\"data\":\"$num\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='//guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='//data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='//data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\"},{\"data\":\"BalFlowMainSub\",\"title\":\"主力净流入\",\"color\":true}],\"update\":20000}},\"gridtable\":{\"config\":{\"params\":\"?sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?sty=ESBFDTC\"}},\"customfields\":{\"show\":true,\"wrapper\":\"#custom-fields-wrapper\",\"container\":\"#custom-fields\",\"template\":\"{{each fields}}<option value=\\\"{{$value[0]}}\\\" {{$value[2]?'selected':''}}>{{$value[1]}}</option>{{/each}}\",\"fields\":[[\"PB\",\"市净率\"],[\"JLV\",\"净利润\"],[\"MarketValue\",\"总市值\"],[\"FlowCapitalValue\",\"流通市值\"],[\"ChangePercent60Day\",\"60日涨跌幅\"],[\"ChangePercent360Day\",\"年初至今涨跌幅\"],[\"Speed\",\"涨速\"],[\"FiveMinuteChangePercent\",\"五分钟涨跌\"]]}},\"index_component\":{\"_comment\":\"板块详情\",\"hotlinks\":{\"show\":true},\"digest\":{\"container\":\"#digest_box\",\"quotechart\":{\"type\":\"timemini\",\"options\":{\"container\":\"#quote_chart\",\"width\":324,\"height\":170,\"token\":\"e1e6871893c6386c5ff6967026016627\",\"bigImg\":{\"stauts\":\"show\"},\"timeline\":[{\"time\":\"11:30/13:00\",\"position\":0.5}],\"update\":20000},\"compatible\":{\"container\":\"#quote_chart\",\"url\":\"//webquotepic.eastmoney.com/GetPic.aspx?imageType=FLP20RSI&token=4f1862fc3b5e77c150a2b985b12db0fd\",\"width\":304,\"height\":150,\"update\":20000}},\"capitalflowchart\":{\"type\":\"fundmini\",\"options\":{\"baseurl\":\"//ff.eastmoney.com/EM_CapitalFlowInterface/api/js?type=ff&check=MLBMS&js=({(x)})&rtntype=3&acces_token=4f1862fc3b5e77c150a2b985b12db0fd\",\"hqurl\":\"//push2.eastmoney.com/api/qt/stock/fflow/kline/get?lmt=0&klt=1&fields1=f1,f2,f3,f7&np=1&fltt=2&invt=2&fields2=f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61,f62,f63,f64,f65&ut=fa5fd1943c7b386f172d6893dbfba10b\",\"container\":\"#capitalflow_chart\",\"width\":324,\"height\":170,\"bigImg\":{\"stauts\":\"show\"},\"update\":20000},\"compatible\":{\"container\":\"#capitalflow_chart\",\"url\":\"//webquotepic.eastmoney.com/GetPic.aspx?imageType=FFFLP20R&type=FFR&token=4f1862fc3b5e77c150a2b985b12db0fd\",\"width\":304,\"height\":150,\"update\":20000}},\"capitalflow-rank\":{\"container\":\"#capitalflow_rank\",\"type\":\"simple\",\"params\":\"?sty=DCFFPBFMS&st=(BalFlowMain)&sr=-1\",\"count\":5,\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=BalFlowMainSub\",\"fields\":[{\"name\":\"number\",\"title\":\"排名\",\"data\":\"$num\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='//guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='//data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='//data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\"},{\"data\":\"BalFlowMainSub\",\"title\":\"主力净流入\",\"color\":true}],\"update\":20000}},\"gridtable\":{\"config\":{\"params\":\"?sty=FCOIATC\",\"fields\":\"ABStocks\"},\"config-pic\":{\"params\":\"?sty=ESBFDTC\"}},\"customfields\":{\"show\":true,\"wrapper\":\"#custom-fields-wrapper\",\"container\":\"#custom-fields\",\"template\":\"{{each fields}}<option value=\\\"{{$value[0]}}\\\" {{$value[2]?'selected':''}}>{{$value[1]}}</option>{{/each}}\",\"fields\":[[\"PB\",\"市净率\"],[\"JLV\",\"净利润\"],[\"MarketValue\",\"总市值\"],[\"FlowCapitalValue\",\"流通市值\"],[\"ChangePercent60Day\",\"60日涨跌幅\"],[\"ChangePercent360Day\",\"年初至今涨跌幅\"],[\"Speed\",\"涨速\"],[\"FiveMinuteChangePercent\",\"五分钟涨跌\"]]}}}");

/***/ }),

/***/ "./ClientApp/config/foreign.gridlist.cfg.json":
/*!****************************************************!*\
  !*** ./ClientApp/config/foreign.gridlist.cfg.json ***!
  \****************************************************/
/*! exports provided: us_stocks, us_wellknown, us_technology, us_financial, us_medicine_food, us_media, us_automotive_energy, us_manufacture_retail, us_chinese, us_chinese_internet, us_index, global_asia, global_america, global_euro, global_australia, futures_shfe, futures_dce, futures_ine, futures_czce, futures_cffex, futures_global, futures_finance, futures_energy, futures_metal, futures_farmproduce, fund_close_end, fund_etf, fund_lof, forex_all, forex_basic, forex_cross, forex_cny, forex_cnyc, forex_cnyi, forex_cnyb, forex_cnh, forex_exchange, forex_exchange_boc, forex_exchange_icbc, forex_exchange_ccb, forex_exchange_abc, forex_exchange_bcm, forex_exchange_cmb, gold_sh_spotgoods, gold_sh_futures, nobalmetal_spotgoods, nobalmetal_futures, hk_gold_futures, virtual_money_all, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"us_stocks\":{\"_comment\":\"全部美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._UNS&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_wellknown\":{\"_comment\":\"知名美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R.MK0216|MK0217|MK0218|MK0219|MK0220|MK0221&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_technology\":{\"_comment\":\"科技类美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0216&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_financial\":{\"_comment\":\"金融类美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0217&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_medicine_food\":{\"_comment\":\"医药食品类美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0218&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_media\":{\"_comment\":\"媒体类美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0220&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_automotive_energy\":{\"_comment\":\"汽车能源类美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0219&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_manufacture_retail\":{\"_comment\":\"制造零售类美股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0221&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_chinese\":{\"_comment\":\"中概股\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R.MK0214|MK0212|MK0213|MK0202|MK0201&sty=FCOIATC&flt=repeatoff\",\"fields\":\"USStocks\"}}},\"us_chinese_internet\":{\"_comment\":\"互联网中国\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0202&sty=FCOIATC\",\"fields\":\"USStocks\"}}},\"us_index\":{\"_comment\":\"美国指数\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._UI_MAP_USOA&sty=FCRH\",\"fields\":\"GlobalIndex\"}}},\"global_asia\":{\"_comment\":\"全球指数-亚洲市场\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R.0000011,3990012,0003001,3990062,3990052,HSI5,HSCEI5,HSCCI5|_UI_MAP_ASIA&sty=FCRH&st=y\",\"fields\":\"GlobalIndex\"}}},\"global_america\":{\"_comment\":\"全球指数-美洲市场\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._UI_MAP_AME&sty=FCRH&st=(Tag)&sr=1\",\"fields\":\"GlobalIndex\"}}},\"global_euro\":{\"_comment\":\"全球指数-欧洲市场\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._UI_MAP_EUR&sty=FCRH&st=(Tag)&sr=1\",\"fields\":\"GlobalIndex\"}}},\"global_australia\":{\"_comment\":\"全球指数-澳洲市场\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._UI_MAP_AUS&sty=FCRH&st=(Tag)&sr=1\",\"fields\":\"GlobalIndex\"}}},\"futures_shfe\":{\"_comment\":\"上期所\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.SHFE&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_dce\":{\"_comment\":\"大商所\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.DCE&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_ine\":{\"_comment\":\"上期能源\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.INE&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_czce\":{\"_comment\":\"郑商所\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.CZCE&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_cffex\":{\"_comment\":\"中金所\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R._168|_169&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_global\":{\"_comment\":\"国际期货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._UF&sty=FCFL4O\",\"fields\":\"GlobalFutures\"}}},\"futures_finance\":{\"_comment\":\"金融期货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R._ZJMF_Main_MonetaryFutures|_UMF_Main_MonetaryFutures&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_energy\":{\"_comment\":\"能源化工\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R._F_MAIN_ENERGY|_UF_MAIN_ENERGY&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_metal\":{\"_comment\":\"金属期货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R._F_MAIN_METAL|_UF_MAIN_METAL&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"futures_farmproduce\":{\"_comment\":\"农产品食品原理\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R._F_MAIN_FARMPRODUCE|_UF_MAIN_FARMPRODUCE&sty=FCFL4O\",\"fields\":\"Futures\"}}},\"fund_close_end\":{\"_comment\":\"封闭基金行情\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.__285002&sty=FCOIATC\",\"fields\":\"Funds\"}}},\"fund_etf\":{\"_comment\":\"ETF基金行情\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.__2850013&sty=FCOIATC\",\"fields\":\"Funds\"}}},\"fund_lof\":{\"_comment\":\"LOF基金行情\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.__2850014&sty=FCOIATC\",\"fields\":\"Funds\"}}},\"forex_all\":{\"_comment\":\"所有外汇\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._FX&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_basic\":{\"_comment\":\"基本汇率\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._FX_BASIC&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_cross\":{\"_comment\":\"交叉汇率\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._FX_CROSS&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_cny\":{\"_comment\":\"人民币品种\",\"gridtable\":{\"config\":{\"params\":\"?cmd=R.CNYFOREX|CNYOFFS|CNYRATE&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_cnyc\":{\"_comment\":\"人民币汇率中间价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.CNYRATE&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_cnyi\":{\"_comment\":\"人民币询价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CNYFOREX_I&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_cnyb\":{\"_comment\":\"人民币竞价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CNYFOREX_B&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_cnh\":{\"_comment\":\"离岸人民币外币\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.CNYOFFS&sty=AMIC\",\"fields\":\"Forex\"}}},\"forex_exchange\":{\"_comment\":\"外汇牌价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.WQ.QP&sty=FC20DPWQQP&st=(WCWQQPSortNum)&sr=1\",\"fields\":\"ForexExchange\"}}},\"forex_exchange_boc\":{\"_comment\":\"中国银行外汇牌价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._WQ.QP.1&sty=FC20DPWQQP&st=(WCWQQPSortNum)&sr=1\",\"fields\":\"ForexExchange\"}}},\"forex_exchange_icbc\":{\"_comment\":\"中国工商银行外汇牌价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._WQ.QP.2&sty=FC20DPWQQP&st=(WCWQQPSortNum)&sr=1\",\"fields\":\"ForexExchange\"}}},\"forex_exchange_ccb\":{\"_comment\":\"中国建设银行外汇牌价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._WQ.QP.3&sty=FC20DPWQQP&st=(WCWQQPSortNum)&sr=1\",\"fields\":\"ForexExchange\"}}},\"forex_exchange_abc\":{\"_comment\":\"中国农业银行外汇牌价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._WQ.QP.4&sty=FC20DPWQQP&st=(WCWQQPSortNum)&sr=1\",\"fields\":\"ForexExchange\"}}},\"forex_exchange_bcm\":{\"_comment\":\"交通银行银行外汇牌价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._WQ.QP.5&sty=FC20DPWQQP&st=(WCWQQPSortNum)&sr=1\",\"fields\":\"ForexExchange\"}}},\"forex_exchange_cmb\":{\"_comment\":\"招商银行外汇牌价\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._WQ.QP.6&sty=FC20DPWQQP&st=(WCWQQPSortNum)&sr=1\",\"fields\":\"ForexExchange\"}}},\"gold_sh_spotgoods\":{\"_comment\":\"上海黄金现货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.SGe&sty=FCUFFO\",\"fields\":\"GoldGoods\"}}},\"gold_sh_futures\":{\"_comment\":\"上海黄金期货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.F_SHFE_AU&sty=FCUFFO\",\"fields\":\"GoldFutures\"}}},\"nobalmetal_spotgoods\":{\"_comment\":\"国际贵金属现货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._SG&sty=FCUFFO\",\"fields\":\"GoldGoods\"}}},\"nobalmetal_futures\":{\"_comment\":\"国际贵金属期货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C._UF_MAIN_METAL&sty=FCUFFO\",\"fields\":\"GoldFutures\"}}},\"hk_gold_futures\":{\"_comment\":\"港交所黄金期货\",\"gridtable\":{\"config\":{\"params\":\"?cmd=C.HKGOLDF&sty=FCFL4O\",\"fields\":\"FuturesDerivatives\"}}},\"virtual_money_all\":{\"_comment\":\"全部虚拟货币\",\"gridtable\":{\"headerTemplate\":\"<tr><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th colspan=\\\"2\\\" class=\\\"muti-row\\\">最新价</th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th><th rowspan=\\\"2\\\"></th></tr><tr><th></th><th></th></tr>\",\"config\":{\"params\":\"?cmd=C.COIN&sty=FCFL4OTA\",\"fields\":\"Virtual\"}}}}");

/***/ }),

/***/ "./ClientApp/config/gridlist.cfg.json":
/*!********************************************!*\
  !*** ./ClientApp/config/gridlist.cfg.json ***!
  \********************************************/
/*! exports provided: default, futures_cffex, options_cffex_all, options_zjcffex_txbj, options_zjcffex_all, options_zjcffex_rengou, options_zjcffex_rengu, options_zjcffex_mo_txbj, options_zjcffex_mo_all, options_zjcffex_mo_rengou, options_zjcffex_mo_rengu, options_zjcffex_zo_txbj, options_zjcffex_zo_all, options_zjcffex_zo_rengou, options_zjcffex_zo_rengu, options_zjcffex_ho_txbj, options_zjcffex_ho_all, options_zjcffex_ho_rengou, options_zjcffex_ho_rengu */
/***/ (function(module) {

module.exports = JSON.parse("{\"default\":{\"pageRenderer\":{\"disabled\":true,\"baseurl\":\"/js\",\"template\":\"{{key}}.render.js\"},\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"refresh\"]},\"navbar\":{\"show\":false,\"division\":\"#division\",\"container\":\"#tab\",\"keys\":[],\"template\":\"<ul class='tab-list clearfix'>{{each menu}}<li id='nav_{{$index}}' class='fl {{cur===$index?\\\"cur\\\":null}}'><a target='{{$value.target}}' href='{{$value.href}}'>{{$value.name||$value.short_title||$value.title}}</a></li>{{/each}}</ul>\"},\"hotlinks\":{\"show\":false,\"container\":\"#hot-links\",\"template\":\"\"},\"l3menu\":{\"show\":false,\"container\":\"#l3menu\",\"template\":\"\"},\"customfields\":{\"show\":false,\"wrapper\":\"#custom-fields-wrapper\",\"container\":\"#custom-fields\",\"template\":\"{{each fields}}<option value=\\\"{{$value[0]}}\\\" {{$value[2]?'selected':''}}>{{$value[1]}}</option>{{/each}}\",\"fields\":[[\"PB\",\"市净率\"],[\"MarketValue\",\"总市值\"],[\"FlowCapitalValue\",\"流通市值\"],[\"ChangePercent60Day\",\"60日涨跌幅\"],[\"ChangePercent360Day\",\"年初至今涨跌幅\"],[\"Speed\",\"涨速\"],[\"FiveMinuteChangePercent\",\"五分钟涨跌\"]]},\"gridtable\":{\"container\":\"#main-table\",\"sourceType\":\"nufm\",\"config\":{\"baseurl\":\"//nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=CT&token=4f1862fc3b5e77c150a2b985b12db0fd&sty=ESBFDTC&js=({data:[(x)],recordsFiltered:(tot)})\",\"params\":\"\",\"count\":20,\"mappingsKey\":\"{{sty}}\",\"fields\":\"{{key}}\",\"update\":15000},\"config-pic\":{\"mappingsKey\":\"{{sty}}\"}}},\"futures_cffex\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_cffex_all\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_txbj\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_all\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_rengou\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_rengu\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_mo_txbj\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_mo_all\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_mo_rengou\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_mo_rengu\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_zo_txbj\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_zo_all\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_zo_rengou\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_zo_rengu\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_ho_txbj\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_ho_all\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_ho_rengou\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}},\"options_zjcffex_ho_rengu\":{\"toolbar\":{\"show\":true,\"container\":\"#tools\",\"tools\":[\"zjs_tips\"]}}}");

/***/ }),

/***/ "./ClientApp/config/gridlist.fields.json":
/*!***********************************************!*\
  !*** ./ClientApp/config/gridlist.fields.json ***!
  \***********************************************/
/*! exports provided: ABStocks, newshares, CDRStocks, ABComparison_SH, ABComparison_SZ, AHComparison, Borads, HKStocks, HKADR, HKOthers, HSIndex, NeeqStocks, USStocks, GlobalIndex, Futures, GlobalFutures, Funds, Bonds, Forex, StockOptions, FuturesOptions, GoldFutures, GoldGoods, Virtual, ConvertibleBond, FuturesDerivatives, ForexExchange, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"ABStocks\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='http://guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='http://data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='http://data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"Volume\",\"title\":\"成交量(手)\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"Amplitude\",\"title\":\"振幅\",\"template\":\"{{Amplitude | percentRender}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"title\":\"量比\",\"data\":\"VolumeRate\"},{\"title\":\"换手率\",\"data\":\"TurnoverRate\",\"template\":\"{{TurnoverRate | percentRender}}\"},{\"title\":\"市盈率(动态)\",\"data\":\"PERation\"},{\"title\":\"市净率\",\"data\":\"PB\",\"visible\":false},{\"title\":\"总市值\",\"name\":\"MarketValue\",\"template\":\"{{MarketValue | numbericFormat}}\",\"visible\":false},{\"title\":\"流通市值\",\"name\":\"FlowCapitalValue\",\"template\":\"{{FlowCapitalValue | numbericFormat}}\",\"visible\":false},{\"title\":\"60日涨跌幅\",\"name\":\"ChangePercent60Day\",\"template\":\"{{ChangePercent60Day | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"年初至今涨跌幅\",\"name\":\"ChangePercent360Day\",\"template\":\"{{ChangePercent360Day | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"涨速\",\"name\":\"Speed\",\"template\":\"{{Speed | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"五分钟涨跌\",\"name\":\"FiveMinuteChangePercent\",\"template\":\"{{FiveMinuteChangePercent | percentRender}}\",\"color\":true,\"visible\":false},{\"data\":\"$favourite\"}],\"newshares\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='http://guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='http://data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='http://data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"Volume\",\"title\":\"成交量(手)\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"Amplitude\",\"title\":\"振幅\",\"template\":\"{{Amplitude | percentRender}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"title\":\"换手率\",\"data\":\"TurnoverRate\",\"template\":\"{{TurnoverRate | percentRender}}\"},{\"title\":\"市盈率(动态)\",\"data\":\"PERation\"},{\"title\":\"上市日期\",\"data\":\"ListingDate\",\"ordering\":\"desc\"},{\"title\":\"市净率\",\"data\":\"PB\",\"visible\":true},{\"title\":\"总市值\",\"name\":\"MarketValue\",\"template\":\"{{MarketValue | numbericFormat}}\",\"visible\":false},{\"title\":\"流通市值\",\"name\":\"FlowCapitalValue\",\"template\":\"{{FlowCapitalValue | numbericFormat}}\",\"visible\":false},{\"title\":\"60日涨跌幅\",\"name\":\"ChangePercent60Day\",\"template\":\"{{ChangePercent60Day | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"年初至今涨跌幅\",\"name\":\"ChangePercent360Day\",\"template\":\"{{ChangePercent360Day | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"涨速\",\"name\":\"Speed\",\"template\":\"{{Speed | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"五分钟涨跌\",\"name\":\"FiveMinuteChangePercent\",\"template\":\"{{FiveMinuteChangePercent | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"量比\",\"name\":\"VolumeRate\",\"visible\":false},{\"data\":\"$favourite\"}],\"CDRStocks\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='http://guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='http://data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='http://data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"Volume\",\"title\":\"成交量(手)\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"Amplitude\",\"title\":\"振幅\",\"template\":\"{{Amplitude | percentRender}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"data\":\"IsCDRProfit\",\"title\":\"是否盈利\",\"template\":\"{{$current === '1'?'盈利':'亏损'}}\",\"orderable\":false},{\"data\":\"IsCDRVotable\",\"title\":\"是否有投票权\",\"template\":\"{{$current === '1'?'是':'否'}}\",\"orderable\":false},{\"title\":\"量比\",\"data\":\"VolumeRate\",\"visible\":false},{\"title\":\"换手率\",\"data\":\"TurnoverRate\",\"template\":\"{{TurnoverRate | percentRender}}\",\"visible\":false},{\"title\":\"市盈率(动态)\",\"data\":\"PERation\"},{\"title\":\"市净率\",\"data\":\"PB\",\"visible\":false},{\"title\":\"总市值\",\"name\":\"MarketValue\",\"template\":\"{{MarketValue | numbericFormat}}\",\"visible\":false},{\"title\":\"流通市值\",\"name\":\"FlowCapitalValue\",\"template\":\"{{FlowCapitalValue | numbericFormat}}\",\"visible\":false},{\"title\":\"60日涨跌幅\",\"name\":\"ChangePercent60Day\",\"template\":\"{{ChangePercent60Day | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"年初至今涨跌幅\",\"name\":\"ChangePercent360Day\",\"template\":\"{{ChangePercent360Day | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"涨速\",\"name\":\"Speed\",\"template\":\"{{Speed | percentRender}}\",\"color\":true,\"visible\":false},{\"title\":\"五分钟涨跌\",\"name\":\"FiveMinuteChangePercent\",\"template\":\"{{FiveMinuteChangePercent | percentRender}}\",\"color\":true,\"visible\":false},{\"data\":\"$favourite\"}],\"ABComparison_SH\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"B股代码\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"B股名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='http://guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='http://data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='http://data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价（美元）\",\"color\":\"{{Change}}\"},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true},{\"data\":\"ABAHCode\",\"title\":\"A股代码\",\"template\":\"<a href='/{{marketMapping[ABAHMkt]}}{{ABAHCode}}.html'>{{ABAHCode}}</a>\"},{\"data\":\"ABAHName\",\"title\":\"A股名称\",\"template\":\"<a href='/{{marketMapping[ABAHMkt]}}{{ABAHCode}}.html'>{{ABAHName}}</a>\"},{\"data\":\"ABAHClose\",\"title\":\"最新价\",\"color\":\"{{ABAHCP}}\"},{\"data\":\"ABAHCP\",\"title\":\"涨跌幅\",\"template\":\"{{ABAHCP | percentRender}}\",\"color\":true},{\"data\":\"AB/AH/USD\",\"title\":\"比价（A/B）\",\"ordering\":\"desc\"}],\"ABComparison_SZ\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"B股代码\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"B股名称\",\"template\":\"<a href='/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='http://guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='http://data.eastmoney.com/zjlx/{{Code}}.html'>资金流</a><a href='http://data.eastmoney.com/stockdata/{{Code}}.html'>数据</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价（港元）\",\"color\":\"{{Change}}\"},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true},{\"data\":\"ABAHCode\",\"title\":\"A股代码\",\"template\":\"<a href='/{{marketMapping[ABAHMkt]}}{{ABAHCode}}.html'>{{ABAHCode}}</a>\"},{\"data\":\"ABAHName\",\"title\":\"A股名称\",\"template\":\"<a href='/{{marketMapping[ABAHMkt]}}{{ABAHCode}}.html'>{{ABAHName}}</a>\"},{\"data\":\"ABAHClose\",\"title\":\"最新价\",\"color\":\"{{ABAHCP}}\"},{\"data\":\"ABAHCP\",\"title\":\"涨跌幅\",\"template\":\"{{ABAHCP | percentRender}}\",\"color\":true},{\"data\":\"AB/AH/HKD\",\"title\":\"比价（A/B）\",\"ordering\":\"desc\"}],\"AHComparison\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"H股代码\",\"template\":\"<a href='/hk/{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"H股名称\",\"template\":\"<a href='/hk/{{Code}}.html'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价(HKD)\",\"color\":\"{{Change}}\"},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true},{\"name\":\"guba_hk\",\"title\":\"港股吧\",\"template\":\"<a href='//guba.eastmoney.com/list,hk{{Code}}.html'>港股吧</a>\",\"orderable\":false},{\"data\":\"ABAHCode\",\"title\":\"A股代码\",\"template\":\"<a href='/{{marketMapping[ABAHMkt]}}{{ABAHCode}}.html'>{{ABAHCode}}</a>\"},{\"data\":\"ABAHName\",\"title\":\"A股名称\",\"template\":\"<a href='/{{marketMapping[ABAHMkt]}}{{ABAHCode}}.html'>{{ABAHName}}</a>\"},{\"data\":\"ABAHClose\",\"title\":\"最新价(RMB)\",\"color\":\"{{ABAHCP}}\"},{\"data\":\"ABAHCP\",\"title\":\"涨跌幅\",\"template\":\"{{ABAHCP | percentRender}}\",\"color\":true},{\"name\":\"guba_a\",\"title\":\"A股吧\",\"template\":\"<a href='//guba.eastmoney.com/list,{{ABAHCode}}.html'>A股吧</a>\",\"orderable\":false},{\"data\":\"AB/AH/HKD\",\"title\":\"比价(A/H)\",\"ordering\":\"desc\"},{\"data\":\"ABHPremium\",\"title\":\"溢价(A/H)\"}],\"Borads\":[{\"name\":\"number\",\"title\":\"排名\",\"data\":\"$num\"},{\"name\":\"Name\",\"title\":\"板块名称\",\"template\":\"<a href='/web/{{Code}}{{MarketType}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='//guba.eastmoney.com/list,{{Code}}.html'>股吧</a><a href='//data.eastmoney.com/bkzj/{{Code}}.html'>资金流</a><a href='//data.eastmoney.com/report/{{Code.replace('BK','')}}yb.html'>研报</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":\"{{Change}}\",\"ordering\":\"desc\"},{\"title\":\"总市值\",\"data\":\"MarketValue\",\"template\":\"{{MarketValue | numbericFormat}}\"},{\"title\":\"换手率\",\"data\":\"TurnoverRate\",\"template\":\"{{TurnoverRate | percentRender}}\"},{\"name\":\"RaiseCount\",\"title\":\"上涨家数\",\"template\":\"{{RECORDSBK.split('|')[0]}}\",\"orderable\":false,\"color\":\"1\"},{\"title\":\"下跌家数\",\"data\":\"FallCount\",\"template\":\"{{RECORDSBK.split('|')[2]}}\",\"orderable\":false,\"color\":\"-1\"},{\"title\":\"领涨股票\",\"data\":\"BKCPLEADNAME\",\"template\":\"<a href='/{{marketMapping[BKCPLEADMKT]}}{{BKCPLEADCODE}}.html'>{{BKCPLEADNAME}}</a>\"},{\"title\":\"涨跌幅\",\"data\":\"BKCPLEADCP\",\"template\":\"{{BKCPLEADCP | percentRender}}\",\"color\":true},{\"title\":\"领跌股票\",\"data\":\"BKCPLoseName\",\"template\":\"<a href='/{{marketMapping[BKCPLoseMkt]}}{{BKCPLoseCode}}.html'>{{BKCPLoseName}}</a>\",\"visible\":true},{\"title\":\"涨跌幅\",\"data\":\"BKCPLoseCP\",\"template\":\"{{BKCPLoseCP | percentRender}}\",\"color\":true,\"visible\":true}],\"HKStocks\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='/hk/{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/hk/{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='//guba.eastmoney.com/list,hk{{Code}}.html'>股吧</a><a href='//so.eastmoney.com/Web/s?keyword={{Name}}'>资讯</a><a href='//emweb.securities.eastmoney.com/PC_HKF10/CoreReading/index?type=web&code={{Code}}&color=b'>档案</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价（HKD）\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":\"{{Change}}\",\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"data\":\"Volume\",\"title\":\"成交量(股)\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额(港元)\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"$favourite={\\\"t\\\":5}\"}],\"HKADR\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"ADRName\",\"title\":\"股份名称\",\"template\":\"<a href='//quote.eastmoney.com/hk/{{ADRCode}}.html'>{{ADRName}}</a>\"},{\"name\":\"ADRCode\",\"title\":\"港股代码\",\"template\":\"<a href='//quote.eastmoney.com/hk/{{ADRCode}}.html'>{{ADRCode}}</a>\"},{\"name\":\"Code\",\"title\":\"ADR代码\",\"template\":\"<a href='//quote.eastmoney.com/us/{{Code}}.html'>{{Code}}</a>\"},{\"data\":\"Close\",\"title\":\"ADR收市价(USD)\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":\"{{Change}}\",\"ordering\":\"desc\"},{\"data\":\"HKD2USD\",\"title\":\"折合每股港元\"}],\"HKOthers\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价（HKD）\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":\"{{Change}}\",\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"data\":\"Volume\",\"title\":\"成交量(股)\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额(港元)\",\"template\":\"{{Amount | numbericFormat}}\"}],\"HSIndex\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='/zs{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/zs{{Code}}.html'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"Volume\",\"title\":\"成交量(股)\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"Amplitude\",\"title\":\"振幅\",\"template\":\"{{Amplitude | percentRender}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"title\":\"量比\",\"data\":\"VolumeRate\"}],\"NeeqStocks\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//xinsanban.eastmoney.com/QuoteCenter/{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='//xinsanban.eastmoney.com/QuoteCenter/{{Code}}.html'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='//guba.eastmoney.com/topic,{{Code}}.html'>股吧</a><a href='//so.eastmoney.com/Web/s?keyword={{Name}}' target='_blank'>资讯</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Volume\",\"title\":\"成交量\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"title\":\"委比\",\"data\":\"CommissionRate\",\"color\":true}],\"USStocks\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/us/{{Code}}.html'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价(美元)\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"开盘价\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高价\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低价\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收价\"},{\"title\":\"总市值(美元)\",\"data\":\"MarketValue\",\"template\":\"{{MarketValue | numbericFormat}}\"},{\"title\":\"市盈率\",\"data\":\"PERation\"}],\"GlobalIndex\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Name\",\"title\":\"名称\",\"className\":\"global-index-name\",\"template\":\"<em class='circle {{Tag=='0'?'trading':''}}' title='{{Tag=='0'?'交易中':'已收盘'}}'>●</em><a href='/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true},{\"data\":\"Open\",\"title\":\"开盘价\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高价\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低价\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收价\"},{\"title\":\"振幅\",\"data\":\"Amplitude\",\"template\":\"{{Amplitude | percentRender}}\"},{\"title\":\"最新行情时间\",\"data\":\"LastUpdate\"}],\"Futures\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='/{{MarketType=='_ZJ'||MarketType=='_ITFFO'?'gzqh':MarketType=='0'?'globalfuture':'qihuo'}}/{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/{{MarketType=='_ZJ'||MarketType=='_ITFFO'?'gzqh':MarketType=='0'?'globalfuture':'qihuo'}}/{{Code}}.html'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousSettlement\",\"title\":\"昨结\"},{\"data\":\"Volume\",\"title\":\"成交量\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"title\":\"买盘(外盘)\",\"data\":\"BuyOrder\"},{\"title\":\"卖盘(内盘)\",\"data\":\"SellOrder\"},{\"data\":\"OpenInterest\",\"title\":\"持仓量\"}],\"GlobalFutures\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='/globalfuture/{{Code}}.html'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='/globalfuture/{{Code}}.html'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousSettlement\",\"title\":\"昨结\"},{\"data\":\"Volume\",\"title\":\"成交量\",\"template\":\"{{Volume | numbericFormat}}\"},{\"title\":\"买盘(外盘)\",\"data\":\"BuyOrder\"},{\"title\":\"卖盘(内盘)\",\"data\":\"SellOrder\"},{\"data\":\"OpenInterest\",\"title\":\"持仓量\"}],\"Funds\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='//fund.eastmoney.com/{{Code}}.html'>估算图</a><a href='//guba.eastmoney.com/list,of{{Code}}.html'>基金吧</a><a href='//fund.eastmoney.com/f10/{{Code}}.html'>档案</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Volume\",\"title\":\"成交量\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"Open\",\"title\":\"开盘价\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高价\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低价\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"}],\"Bonds\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"data\":\"Volume\",\"title\":\"成交量(手)\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"}],\"Forex\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"}],\"StockOptions\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Volumn\",\"title\":\"成交量\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"OpenInterest\",\"title\":\"持仓量\"},{\"data\":\"ExercisePrice\",\"title\":\"行权价\"},{\"data\":\"ExerciseDateRemain\",\"title\":\"剩余日\"},{\"data\":\"OpenInterest\",\"title\":\"持仓量\"},{\"data\":\"OpenInterestAdd\",\"title\":\"日增\"},{\"data\":\"PreviousClose\",\"title\":\"昨收\"},{\"data\":\"Open\",\"title\":\"今开\"}],\"FuturesOptions\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"名称\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Volumn\",\"title\":\"成交量\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"data\":\"OpenInterest\",\"title\":\"持仓量\"},{\"data\":\"ExercisePrice\",\"title\":\"行权价\"},{\"data\":\"ExerciseDateRemain\",\"title\":\"剩余日\"},{\"data\":\"OpenInterest\",\"title\":\"持仓量\"},{\"data\":\"OpenInterestAdd\",\"title\":\"日增\"},{\"data\":\"PreviousSettlement\",\"title\":\"昨结\"},{\"data\":\"Open\",\"title\":\"今开\"}],\"GoldFutures\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Code}}</a>\"},{\"name\":\"Name\",\"title\":\"品种\",\"template\":\"<a href='//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}'>{{Name}}</a>\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousSettlement\",\"title\":\"昨结\"},{\"data\":\"LastUpdate\",\"title\":\"更新时间\"}],\"GoldGoods\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\"},{\"name\":\"Name\",\"title\":\"品种\",\"orderable\":false},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousSettlement\",\"title\":\"昨结\"},{\"data\":\"LastUpdate\",\"title\":\"更新时间\"}],\"Virtual\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\"},{\"name\":\"Name\",\"title\":\"名称\"},{\"data\":\"DescribeMarket\",\"title\":\"市场\",\"orderable\":false},{\"name\":\"TradeCurrency\",\"title\":\"交易货币\",\"template\":\"{{TradeCurrency === 'USD'?'美元':'人民币'}}\",\"orderable\":false},{\"name\":\"Close_CNY\",\"title\":\"人民币\",\"color\":\"{{Change}}\",\"className\":\"muti-row\",\"template\":\"￥{{TradeCurrency === 'CNY'?Close:USD2CNY}}\",\"orderable\":false},{\"name\":\"Close_USD\",\"title\":\"美元\",\"color\":\"{{Change}}\",\"className\":\"muti-row\",\"template\":\"${{TradeCurrency==='USD'?Close:CNY2USD}}\",\"orderable\":false},{\"name\":\"Change\",\"title\":\"涨跌额\",\"template\":\"{{TradeCurrency==='USD'?'$':'￥'}}{{Change}}\",\"color\":true},{\"name\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"name\":\"Open\",\"template\":\"{{TradeCurrency==='USD'?'$':'￥'}}{{Open}}\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"name\":\"High\",\"template\":\"{{TradeCurrency==='USD'?'$':'￥'}}{{High}}\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"name\":\"Low\",\"template\":\"{{TradeCurrency==='USD'?'$':'￥'}}{{Low}}\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"name\":\"PreviousClose\",\"template\":\"{{TradeCurrency==='USD'?'$':'￥'}}{{PreviousClose}}\",\"title\":\"昨收\"},{\"data\":\"Volume\",\"title\":\"成交量\"},{\"data\":\"BuyOrder\",\"title\":\"买量\"},{\"data\":\"SellOrder\",\"title\":\"卖量\"}],\"ConvertibleBond\":[{\"name\":\"number\",\"data\":\"$num\"},{\"title\":\"转债代码\",\"name\":\"Code\",\"template\":\"<a target=_blank href='/bond/{{marketMapping[MarketType]}}{{Code}}.html'>{{Code}}</a>\",\"orderable\":false},{\"title\":\"转债名称\",\"name\":\"Name\",\"template\":\"<a target=_blank href='/bond/{{marketMapping[MarketType]}}{{Code}}.html'>{{Name}}</a>\",\"orderable\":false},{\"title\":\"最新价\",\"data\":\"Close\",\"color\":\"{{ChangePercent}}\"},{\"title\":\"涨跌幅\",\"name\":\"ChangePercent\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true},{\"title\":\"相关链接\",\"name\":\"links\",\"template\":\"<a target=_blank href=\\\"http://guba.eastmoney.com/list,{{Code}}.html\\\">股吧</a><a target=_blank href=\\\"http://data.eastmoney.com/kzz/detail/{{Code}}.html\\\">详细</a>\",\"orderable\":false},{\"title\":\"正股代码\",\"data\":\"UnderlyingStockCode\",\"template\":\"<a target=_blank href='/{{marketMapping[UnderlyingStockMkt]}}{{UnderlyingStockCode}}.html'>{{UnderlyingStockCode}}</a>\",\"orderable\":false},{\"title\":\"正股名称\",\"name\":\"UnderlyingStockName\",\"template\":\"<a target=_blank href='/{{marketMapping[UnderlyingStockMkt]}}{{UnderlyingStockCode}}.html'>{{UnderlyingStockName}}</a>\",\"orderable\":false},{\"title\":\"最新价\",\"data\":\"UnderlyingStockPrice\",\"color\":\"{{UnderlyingStockCP}}\"},{\"title\":\"涨跌幅\",\"name\":\"UnderlyingStockCP\",\"template\":\"{{UnderlyingStockCP | percentRender}}\",\"color\":true},{\"title\":\"转股价\",\"data\":\"ConversionPrice\"},{\"title\":\"<span id=\\\"cv-tips\\\" title=\\\"转股价值=正股价/转股价*100\\\">转股价值<em class=\\\"help-icon\\\"></em></span>\",\"data\":\"ConversionValue\"},{\"title\":\"<span id=\\\"cpr-tips\\\" title=\\\"转股溢价率 = （转债最新价 – 转股价值）/ 转股价值\\\">转股溢价率<em class=\\\"help-icon\\\"></em></span>\",\"name\":\"ConvertiblePremiumRate\",\"template\":\"{{ConvertiblePremiumRate | percentRender}}\",\"color\":true},{\"title\":\"<span id=\\\"bpr-tips\\\" title=\\\"纯债溢价率 = （转债最新价 – 纯债价值）/ 纯债价值\\\">纯债溢价率<em class=\\\"help-icon\\\"></em></span>\",\"name\":\"BondPremiumRate\",\"template\":\"{{BondPremiumRate | percentRender}}\",\"color\":true},{\"title\":\"<span id=\\\"tpsp-tips\\\" title=\\\"满足回售触发条件时，可转债持有人有权将其持有的可转债全部或部分按债券面值加上当期应计利息的价格回售给公司\\\">回售触发价<em class=\\\"help-icon\\\"></em></span>\",\"data\":\"TriggerPriceOfSpecialPut\"},{\"title\":\"<span id=\\\"tpsr-tips\\\" title=\\\"满足赎回触发条件时，公司有权按照债券面值加当期应计利息的价格赎回全部或部分未转股的可转债\\\">强赎触发价<em class=\\\"help-icon\\\"></em></span>\",\"data\":\"TriggerPriceOfSpecialRedemption\"},{\"title\":\"<span id=\\\"rp-tips\\\" title=\\\"公司有权以债券发行说明书中规定的到期赎回价买回其发行在外债券\\\">到期赎回价<em class=\\\"help-icon\\\"></em></span>\",\"data\":\"Redemptionprice\"},{\"title\":\"纯债价值\",\"data\":\"StraightBondValue\"},{\"title\":\"开始转股日\",\"data\":\"ConversionDate\"},{\"title\":\"上市日期\",\"data\":\"BAdinLISTDATE\"},{\"title\":\"申购日期\",\"data\":\"BAdinSTARTDATE\",\"ordering\":\"desc-0\"},{\"data\":\"$favourite|UnderlyingStockCode,UnderlyingStockMkt\"}],\"FuturesDerivatives\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\"},{\"name\":\"Name\",\"title\":\"名称\"},{\"data\":\"Close\",\"title\":\"最新价\",\"color\":\"{{Change}}\"},{\"data\":\"Change\",\"title\":\"涨跌额\",\"color\":true},{\"data\":\"ChangePercent\",\"title\":\"涨跌幅\",\"template\":\"{{ChangePercent | percentRender}}\",\"color\":true,\"ordering\":\"desc\"},{\"data\":\"Open\",\"title\":\"今开\",\"color\":\"{{Open - PreviousClose}}\"},{\"data\":\"High\",\"title\":\"最高\",\"color\":\"{{High - PreviousClose}}\"},{\"data\":\"Low\",\"title\":\"最低\",\"color\":\"{{Low - PreviousClose}}\"},{\"data\":\"PreviousSettlement\",\"title\":\"昨结\"},{\"data\":\"Volume\",\"title\":\"成交量\",\"template\":\"{{Volume | numbericFormat}}\"},{\"data\":\"Amount\",\"title\":\"成交额\",\"template\":\"{{Amount | numbericFormat}}\"},{\"title\":\"买盘(外盘)\",\"data\":\"BuyOrder\"},{\"title\":\"卖盘(内盘)\",\"data\":\"SellOrder\"},{\"data\":\"OpenInterest\",\"title\":\"持仓量\"}],\"ForexExchange\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"title\":\"代码\"},{\"name\":\"Name\",\"title\":\"名称\"},{\"data\":\"WCWQQPForeignBuy\",\"title\":\"现汇买入价\"},{\"data\":\"WCWQQPCashBuy\",\"title\":\"现钞买入价\"},{\"data\":\"WCWQQPForeignSell\",\"title\":\"现汇卖出价\"},{\"data\":\"WCWQQPCashSell\",\"title\":\"现钞卖出价\"},{\"data\":\"WCWQQPLastUpdateTime\",\"title\":\"最新时间\"}]}");

/***/ }),

/***/ "./ClientApp/config/gridlist.fields.map.json":
/*!***************************************************!*\
  !*** ./ClientApp/config/gridlist.fields.map.json ***!
  \***************************************************/
/*! exports provided: ESBFDTC, CTF, FCABHL, FCOIATC, FCOIATD, FCOIA, FCFL4O, FCRH, AMIC, FC20RG, FC2UCO, FCOL, FCUFFO, FPGBKI, DCFFPBFMS, FCFL4OTA, FC20DPADRL, FC20RA, FC20SSBTA, FC20SSBTB, FC20SSBTC, FC20RC, FC20CDTA, FC20DPWQQP, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"ESBFDTC\":\"csv:0=MarketType&1=Code&2=Name&3=ID\",\"CTF\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&9=Volume&10=Amount&11=Open&12=PreviousClose&13=High&14=Low&15=TurnoverRate&16=PERation\",\"FCABHL\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=ChangePercent&5=ABAHCode&6=ABAHMkt&7=ABAHName&8=ABAHClose&9=ABAHCP&10=CloseCrossUSD&11=CloseCrossHKD&12=AB/AH/USD&13=AB/AH/HKD&14=ABDPremium&15=ABHPremium&16=Change\",\"FCOIATC\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=Amplitude&9=High&10=Low&11=Open&12=PreviousClose&13=FiveMinuteChangePercent&14=VolumeRate&15=TurnoverRate&16=PERation&17=PB&18=MarketValue&19=FlowCapitalValue&20=ChangePercent60Day&21=ChangePercent360Day&22=Speed&23=ListingDate&24=LastUpdate\",\"FCOIATD\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=Amplitude&9=High&10=Low&11=Open&12=PreviousClose&13=FiveMinuteChangePercent&14=VolumeRate&15=TurnoverRate&16=PERation&17=PB&18=MarketValue&19=FlowCapitalValue&20=ChangePercent60Day&21=ChangePercent360Day&22=Speed&23=ListingDate&24=LastUpdate&26=IsCDR&27=IsCDRVotable&28=IsCDRProfit\",\"FCOIA\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=PreviousClose&9=Open&10=High&11=Low&12=CommissionRate&15=Amplitude&16=FiveMinuteChangePercent&17=TurnoverRate&18=PERation&19=VolumeRate\",\"FCFL4O\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=ChangePercent&5=Change&6=BuyOrder&7=SellOrder&8=PreviousSettlement&9=OpenInterest&10=Volume&11=Open&12=PreviousClose&13=High&14=Low&15=Amount\",\"FCRH\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=LastUpdate&7=Tag&8=Open&9=High&10=Low&11=PreviousClose&12=Amplitude\",\"AMIC\":\"csv:0=Name&1=Code&2=Close&3=Change&4=ChangePercent&5=High&6=Low&7=Open&8=PreviousClose&9=Amplitude&13=LastUpdate&14=MarketType\",\"FC20RG\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=VolumeSub\",\"FC2UCO\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=OpenInterest&9=ExercisePrice&10=ExerciseDateRemain&11=OpenInterestAdd&12=PreviousSettlement&13=Open&14=WarehouseBad\",\"FCOL\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=OpenInterest&9=ExercisePrice&10=ExerciseDateRemain&11=OpenInterestAdd&12=PreviousClose&13=Open&14=High&15=Low\",\"FCUFFO\":\"csv:0=MarketType&1=Code&2=Name&3=Open&4=Close&5=Change&6=ChangePercent&7=PreviousSettlement&8=High&9=Low&10=LastUpdate\",\"FPGBKI\":\"csv:0=MarketType&1=Code&2=Name&3=ChangePercent&4=MarketValue&5=TurnoverRate&6=RECORDSBK&7=BKCPLEADCODE&8=BKCPLEADMKT&9=BKCPLEADNAME&10=BKCPLEADCLOSE&11=BKCPLEADCP&12=BKCPLoseCode&13=BKCPLoseMkt&14=BKCPLoseName&15=BKCPLoseClose&16=BKCPLoseCP&17=BKType&18=Close&19=Change\",\"DCFFPBFMS\":\"csv:0=MarketType&1=Code&2=Name&3=BalFlowMainSub\",\"FCFL4OTA\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=ChangePercent&5=Change&6=BuyOrder&7=SellOrder&8=PreviousSettlement&9=OpenInterest&10=Volume&11=Open&12=PreviousClose&13=High&14=Low&15=Amount&16=DescribeMarket&17=TradeCurrency&18=USD2CNY&19=CNY2USD\",\"FC20DPADRL\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=ChangePercent&5=ADRCode&6=ADRMkt&7=ADRName&8=USD2HKD&9=HKD2USD&10=Change\",\"FC20RA\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=ChangePercent&5=Change\",\"FC20SSBTA\":\"csv:0=MarketType&1=Code&2=Name&3=ChangePercent&4=FiveMinuteChangePercent&5=TurnoverRate&6=VolumeRate&7=Amplitude&8=Amount&9=PERation&10=PB&11=FlowCapitalValue&12=MarketValue&13=ChangePercent60Day&14=ChangePercent360Day&15=Speed&16=Change&17=Close\",\"FC20SSBTB\":\"csv:0=MarketType&1=Code&2=Name&3=ChangePercent&4=DayFlow&5=TurnoverRate&6=Speed&7=Amount&8=BalFlowMain&9=FFRank&10=Change&11=Close&12=BKCPLEADCODE&13=BKCPLEADMKT&14=BKCPLEADNAME&15=BKCPLEADCP&16=RankingChange&17=BalFlowNetRate&18=BKLEADER&19=BKLEADERNAME&20=BKCPLoseMkt&21=BKCPLoseCode&22=BKCPLoseName&23=BKCPLoseCP\",\"FC20SSBTC\":\"csv:0=MarketType&1=Code&2=Name&3=ChangePercent&4=Volume&5=Amount&6=Change&7=Close\",\"FC20RC\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=ChangePercent&5=BalFlowMain&6=BalFlowNetRate\",\"FC20CDTA\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=ChangePercent&5=UnderlyingStockMkt&6=UnderlyingStockCode&7=UnderlyingStockName&8=UnderlyingStockPrice&9=UnderlyingStockCP&10=ConversionPrice&11=ConversionValue&12=ConvertiblePremiumRate&13=BondPremiumRate&14=TriggerPriceOfSpecialPut&15=TriggerPriceOfSpecialRedemption&16=Redemptionprice&17=StraightBondValue&18=ConversionDate&19=BAdinLISTDATE&20=BAdinSTARTDATE\",\"FC20DPWQQP\":\"csv:0=MarketType&1=Code&2=Name&3=WCWQQPForeignBuy&4=WCWQQPCashBuy&5=WCWQQPForeignSell&6=WCWQQPCashSell&7=WCWQQPDiscountPrice&8=WCWQQPPer&9=WCWQQPLastUpdateTime&10=MktNum&11=WCWQQPSortNum\"}");

/***/ }),

/***/ "./ClientApp/config/hkstocks.gridlist.cfg.json":
/*!*****************************************************!*\
  !*** ./ClientApp/config/hkstocks.gridlist.cfg.json ***!
  \*****************************************************/
/*! exports provided: hk_sh_stocks, hk_sz_stocks, ah_comparison, hk_stocks, hk_mainboard, hk_gem, hk_wellknown, hk_bluechips, hk_redchips, hk_redchips_components, hk_stateowned, hk_stateowned_components, hk_components, hsi_large_components, hsi_medium_components, hk_index, hk_adr, hk_warrants, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"hk_sh_stocks\":{\"_comment\":\"港股通（沪）\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"/center/gridlist.html#ah_comparison\\\" target=\\\"_blank\\\">AH股比价</a>|<a href=\\\"/center/gridlist.html#sh_hk_board\\\" target=\\\"_blank\\\">沪股通(港>沪)</a>|<a href=\\\"/center/gridlist.html#sz_hk_board\\\" target=\\\"_blank\\\">深股通(港>深)</a>|<a href=\\\"/center/gridlist.html#hk_sh_stocks\\\" target=\\\"_blank\\\">港股通(沪>港)</a>|<a href=\\\"/center/gridlist.html#hk_sz_stocks\\\" target=\\\"_blank\\\">港股通(深>港)</a>|<a href=\\\"//data.eastmoney.com/hsgt/index.html\\\" target=\\\"_blank\\\">沪深港通资金流向</a>|<a href=\\\"//data.eastmoney.com/hsgt/top10.html\\\" target=\\\"_blank\\\">沪深港通十大成交股</a>\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0144&sty=CTF\",\"fields\":\"HKStocks\"},\"config-pic\":{\"params\":\"?cmd=C.MK0144&sty=ESBFDTC\"}}},\"hk_sz_stocks\":{\"_comment\":\"港股通（深）\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"/center/gridlist.html#ah_comparison\\\" target=\\\"_blank\\\">AH股比价</a>|<a href=\\\"/center/gridlist.html#sh_hk_board\\\" target=\\\"_blank\\\">沪股通(港>沪)</a>|<a href=\\\"/center/gridlist.html#sz_hk_board\\\" target=\\\"_blank\\\">深股通(港>深)</a>|<a href=\\\"/center/gridlist.html#hk_sh_stocks\\\" target=\\\"_blank\\\">港股通(沪>港)</a>|<a href=\\\"/center/gridlist.html#hk_sz_stocks\\\" target=\\\"_blank\\\">港股通(深>港)</a>|<a href=\\\"//data.eastmoney.com/hsgt/index.html\\\" target=\\\"_blank\\\">沪深港通资金流向</a>|<a href=\\\"//data.eastmoney.com/hsgt/top10.html\\\" target=\\\"_blank\\\">沪深港通十大成交股</a>\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0146&sty=CTF\",\"fields\":\"HKStocks\"},\"config-pic\":{\"params\":\"?cmd=C.MK0146&sty=ESBFDTC\"}}},\"ah_comparison\":{\"_comment\":\"AH股比价\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"/center/gridlist.html#ah_comparison\\\" target=\\\"_blank\\\">AH股比价</a>|<a href=\\\"/center/gridlist.html#sh_hk_board\\\" target=\\\"_blank\\\">沪股通(港>沪)</a>|<a href=\\\"/center/gridlist.html#hk_sh_stocks\\\" target=\\\"_blank\\\">港股通(沪>港)</a>|<a href=\\\"/center/gridlist.html#sz_hk_board\\\" target=\\\"_blank\\\">深股通(港>深)</a>|<a href=\\\"/center/gridlist.html#hk_sz_stocks\\\" target=\\\"_blank\\\">港股通(深>港)</a>|<a href=\\\"//data.eastmoney.com/hsgt/index.html\\\" target=\\\"_blank\\\">沪深港通资金流向</a>|<a href=\\\"//data.eastmoney.com/hsgt/top10.html\\\" target=\\\"_blank\\\">沪深港通十大成交股</a>\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._AHH&sty=FCABHL\",\"fields\":\"AHComparison\"},\"config-pic\":{\"params\":\"?cmd=C._AHH&sty=ESBFDTC\"}}},\"hk_stocks\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C._HKS&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_mainboard\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0107&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_gem\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.__28GEM&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_wellknown\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0009&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_bluechips\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0104&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_redchips\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0102&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_redchips_components\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.__28HSCIINDEX&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_stateowned\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.__28HSCEI&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_stateowned_components\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.__28HSCEIINDEX&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_components\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0144&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hsi_large_components\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0141&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hsi_medium_components\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C.MK0142&sty=CTF\",\"fields\":\"HKStocks\"}}},\"hk_index\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=R.HKI|HKIN|HS&sty=CTF\",\"fields\":\"HKOthers\"}}},\"hk_adr\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C._ADRA&sty=FC20DPADRL\",\"fields\":\"HKADR\"}}},\"hk_warrants\":{\"gridtable\":{\"config\":{\"params\":\"?cmd=C._HKW&sty=CTF\",\"fields\":\"HKOthers\"}}}}");

/***/ }),

/***/ "./ClientApp/config/index.square.cfg.json":
/*!************************************************!*\
  !*** ./ClientApp/config/index.square.cfg.json ***!
  \************************************************/
/*! exports provided: ops, ops2, ops3, ops4, opsKcb, opsnewgu, abgu, ahgu, ahgu2, ahgu3, ops5, ops6, ops7, ops8, ops9, hkstocks, hkstocks_rmb, hkshstocks, hkindex, hkindexNXZ, usstocks, usindex, globalamerica, globalamerica2, globalamericaOz, globalamerica3, globalamerica4, conceptboard, conceptboardDatil, hsgt, qhsc_jq, fundcloseend, fundcloseend_reits, fundcloseend2, fundcloseend2d, bond, bondnew, forex, forex2, qqsc, gold, gold2, hsbk, hsbkd, hsbklz, hszs, hszs2, ggsc, ggscd, mgsc, mgscd, mgsc3, bondmine, indexqh, indexqhNew, indexqh_gjs, zjs, gjqh, hjqh, whpj, Zqzqzs, hkadr, fullscreenlist, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"ops\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"bankuai\",\"thclick\":false},\"ops2\":{\"order\":\"f62\",\"orderDur\":false,\"type\":\"zijinliu\",\"thclick\":false},\"ops3\":{\"order\":\"f62\",\"orderDur\":true,\"type\":\"zijinliu\",\"thclick\":false},\"ops4\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hushenAStock\",\"zixuan\":true},\"opsKcb\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hushenStockKcb\",\"zixuan\":true},\"opsnewgu\":{\"order\":\"f26\",\"orderDur\":false,\"type\":\"opsnewgu\",\"zixuan\":true},\"abgu\":{\"order\":\"f199\",\"orderDur\":false,\"type\":\"abgu\",\"zixuan\":true},\"ahgu\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"ahgu\",\"zixuan\":true,\"thclick\":false},\"ahgu2\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"ahgu2\",\"zixuan\":true},\"ahgu3\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"ahgu3\",\"zixuan\":true,\"thclick\":false},\"ops5\":{\"order\":\"f26\",\"orderDur\":false,\"type\":\"shhkBoard\",\"zixuan\":true},\"ops6\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"staqnetBoard\"},\"ops7\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"indexsh\"},\"ops8\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"indexsz\"},\"ops9\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"neeqstocks\"},\"hkstocks\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hkstocks\",\"zixuan\":true},\"hkstocks_rmb\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hkstocks_rmb\",\"zixuan\":true},\"hkshstocks\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hkshstocks\",\"zixuan\":true},\"hkindex\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hkindex\"},\"hkindexNXZ\":{\"order\":\"f6\",\"orderDur\":false,\"type\":\"hkindex\"},\"usstocks\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"usstocks\"},\"usindex\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"usindex\"},\"globalamerica\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"globalamerica\"},\"globalamerica2\":{\"orderDur\":false,\"type\":\"globalamerica2\",\"thclick\":false},\"globalamericaOz\":{\"orderDur\":false,\"type\":\"globalamericaOz\",\"thclick\":false},\"globalamerica3\":{\"orderDur\":false,\"type\":\"globalamerica3\",\"thclick\":false},\"globalamerica4\":{\"orderDur\":false,\"type\":\"globalamerica4\",\"thclick\":false},\"conceptboard\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"conceptboard\"},\"conceptboardDatil\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"conceptboardDatil\",\"zixuan\":true},\"hsgt\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hsgt\",\"zixuan\":true,\"thclick\":false},\"qhsc_jq\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"qhsc_jq\",\"zixuan\":true,\"thclick\":false},\"fundcloseend\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"fundcloseend\"},\"fundcloseend_reits\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"fundcloseend_reits\"},\"fundcloseend2\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"fundcloseend2\",\"thclick\":false},\"fundcloseend2d\":{\"order\":\"f3\",\"orderDur\":true,\"type\":\"fundcloseend2\",\"thclick\":false},\"bond\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"bond\"},\"bondnew\":{\"order\":\"f6\",\"orderDur\":false,\"type\":\"bondnew\"},\"forex\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"forex\"},\"forex2\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"forex2\",\"thclick\":false},\"qqsc\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"qqsc\"},\"gold\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"gold\"},\"gold2\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"gold2\",\"thclick\":false},\"hsbk\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hsbk\",\"thclick\":false},\"hsbkd\":{\"order\":\"f3\",\"orderDur\":true,\"type\":\"hsbkd\",\"thclick\":false},\"hsbklz\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hsbklz\",\"thclick\":false},\"hszs\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hszs\",\"thclick\":false},\"hszs2\":{\"order\":\"\",\"orderDur\":false,\"type\":\"hszs2\",\"thclick\":false},\"ggsc\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"ggsc\",\"zixuan\":true,\"thclick\":false},\"ggscd\":{\"order\":\"f3\",\"orderDur\":true,\"type\":\"ggsc\",\"zixuan\":true,\"thclick\":false},\"mgsc\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"mgsc\",\"thclick\":false},\"mgscd\":{\"order\":\"f3\",\"orderDur\":true,\"type\":\"mgsc\",\"thclick\":false},\"mgsc3\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"mgsc3\",\"thclick\":false},\"bondmine\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"bondmine\",\"thclick\":false},\"indexqh\":{\"order\":\"f14\",\"orderDur\":true,\"type\":\"indexqh\"},\"indexqhNew\":{\"order\":\"f14\",\"orderDur\":true,\"type\":\"indexqhNew\"},\"indexqh_gjs\":{\"order\":\"f14\",\"orderDur\":true,\"type\":\"indexqh\"},\"zjs\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"zjs\"},\"gjqh\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"gjqh\"},\"hjqh\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hjqh\",\"thclick\":false},\"whpj\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"whpj\"},\"Zqzqzs\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"Zqzqzs\",\"thclick\":false},\"hkadr\":{\"order\":\"f3\",\"orderDur\":false,\"type\":\"hkadr\"},\"fullscreenlist\":{\"order\":\"f243\",\"orderDur\":false,\"type\":\"fullscreenlist\",\"zixuan\":true}}");

/***/ }),

/***/ "./ClientApp/config/indexes.gridlist.cfg.json":
/*!****************************************************!*\
  !*** ./ClientApp/config/indexes.gridlist.cfg.json ***!
  \****************************************************/
/*! exports provided: index_sh, index_sz, index_components, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"index_sh\":{\"_comment\":\"上证系列指数\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/detail.html\\\" target=\\\"_blank\\\">实时资金流向</a>|<a href=\\\"//data.eastmoney.com/zjlx/list.html\\\" target=\\\"_blank\\\">主力排名</a>|<a href=\\\"//data.eastmoney.com/bkzj/\\\" target=\\\"_blank\\\">板块资金</a>|<a href=\\\"//data.eastmoney.com/bkzj/hy.html\\\" target=\\\"_blank\\\">行业资金流向</a>|<a href=\\\"//data.eastmoney.com/bkzj/gn.html\\\" target=\\\"_blank\\\">概念资金流向</a>|<a href=\\\"//data.eastmoney.com/bkzj/dy.html\\\" target=\\\"_blank\\\">地域资金流向</a>|<a href=\\\"//data.eastmoney.com/bkzj/jlr.html\\\" target=\\\"_blank\\\">资金流监测</a>\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.1&sty=FCOIATC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=Amplitude&9=High&10=Low&11=Open&12=PreviousClose&13=FiveMinuteChangePercent&14=VolumeRate&15=TurnoverRate&16=PERation&17=PB&18=MarketValue&19=FlowCapital&20=ChangePercent60Day&21=ChangePercent360Day&22=Speed&23=ListingDate&24=LastUpdate\",\"fields\":\"HSIndex\"}}},\"index_sz\":{\"_comment\":\"深证系列指数\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/dpzjlx.html\\\" target=\\\"_blank\\\">两市资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs000001.html\\\" target=\\\"_blank\\\">沪市资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs399001.html\\\" target=\\\"_blank\\\">深市资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs399006.html\\\" target=\\\"_blank\\\">创业板资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs000003.html\\\" target=\\\"_blank\\\">沪B资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs399003.html\\\" target=\\\"_blank\\\">深B资金流</a>\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.5&sty=FCOIATC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=Amplitude&9=High&10=Low&11=Open&12=PreviousClose&13=FiveMinuteChangePercent&14=VolumeRate&15=TurnoverRate&16=PERation&17=PB&18=MarketValue&19=FlowCapital&20=ChangePercent60Day&21=ChangePercent360Day&22=Speed&23=ListingDate&24=LastUpdate\",\"fields\":\"HSIndex\"}}},\"index_components\":{\"_comment\":\"指数成份\",\"hotlinks\":{\"show\":true,\"template\":\"<a href=\\\"//data.eastmoney.com/zjlx/dpzjlx.html\\\" target=\\\"_blank\\\">两市资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs000001.html\\\" target=\\\"_blank\\\">沪市资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs399001.html\\\" target=\\\"_blank\\\">深市资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs399006.html\\\" target=\\\"_blank\\\">创业板资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs000003.html\\\" target=\\\"_blank\\\">沪B资金流</a>|<a href=\\\"//data.eastmoney.com/zjlx/zs399003.html\\\" target=\\\"_blank\\\">深B资金流</a>\"},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.IE.ALL&sty=FCOIATC\",\"mappings\":\"csv:0=MarketType&1=Code&2=Name&3=Close&4=Change&5=ChangePercent&6=Volume&7=Amount&8=Amplitude&9=High&10=Low&11=Open&12=PreviousClose&13=FiveMinuteChangePercent&14=VolumeRate&15=TurnoverRate&16=PERation&17=PB&18=MarketValue&19=FlowCapital&20=ChangePercent60Day&21=ChangePercent360Day&22=Speed&23=ListingDate&24=LastUpdate\",\"fields\":\"HSIndex\"}}}}");

/***/ }),

/***/ "./ClientApp/config/options.gridlist.cfg.json":
/*!****************************************************!*\
  !*** ./ClientApp/config/options.gridlist.cfg.json ***!
  \****************************************************/
/*! exports provided: options_shfe_all, options_shfe_call, options_shfe_put, options_dce_all, options_dce_call, options_dce_put, options_czce_all, options_ine_all, options_czce_call, options_czce_put, forex_exchange_icbc, forex_exchange_abc, forex_exchange_boc, forex_exchange_ccb, forex_exchange_bcm, forex_exchange_cmb, global_asia, global_euro, global_america, global_australia, global_qtzs, options_sh50etf_all, options_sh50etf_call, options_sh50etf_put, options_beanpulp_all, options_beanpulp_call, options_beanpulp_put, options_sugar_all, options_sugar_call, options_sugar_put, options_uscny_all, options_uscny_call, options_uscny_put, options_cu_all, options_cu_call, options_cu_put, options_ru_all, options_ru_call, options_ru_put, options_cf_all, options_cf_call, options_cf_put, options_c_all, options_c_call, options_c_put, options_sz50etf_txbj, options_sz50etf_all, options_sz50etf_rengou, options_sz50etf_rengu, options_kc50etf1_txbj, options_kc50etf1_all, options_kc50etf1_rengou, options_kc50etf1_rengu, options_kc50etf2_txbj, options_kc50etf2_all, options_kc50etf2_rengou, options_kc50etf2_rengu, options_sahs300etf_txbj, options_sahs300etf_all, options_sahs300etf_rengou, options_sahs300etf_rengu, options_sazz500etf_txbj, options_sazz500etf_all, options_sazz500etf_rengou, options_sazz500etf_rengu, options_sezz500etf_txbj, options_sezz500etf_all, options_sezz500etf_rengou, options_sezz500etf_rengu, options_secybetf_txbj, options_secybetf_all, options_secybetf_rengou, options_secybetf_rengu, options_sehs300etf_txbj, options_sehs300etf_all, options_sehs300etf_rengou, options_sehs300etf_rengu, options_zjcffex_txbj, options_zjcffex_all, options_zjcffex_rengou, options_zjcffex_rengu, options_zjcffex_mo_txbj, options_zjcffex_mo_all, options_zjcffex_mo_rengou, options_zjcffex_mo_rengu, options_zjcffex_zo_txbj, options_zjcffex_zo_all, options_zjcffex_zo_rengou, options_zjcffex_zo_rengu, options_zjcffex_ho_txbj, options_zjcffex_ho_all, options_zjcffex_ho_rengou, options_zjcffex_ho_rengu, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"options_shfe_all\":{\"_comment\":\"上期所\",\"navbar\":{\"show\":false,\"keys\":[\"options_shfe_all\",\"options_shfe_call\",\"options_shfe_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.SHFEOPTION&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_shfe_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_shfe_all\",\"options_shfe_call\",\"options_shfe_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=_SHFEOP.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_shfe_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_shfe_all\",\"options_shfe_call\",\"options_shfe_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=_SHFEOP.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_dce_all\":{\"_comment\":\"大商所\",\"navbar\":{\"show\":false,\"keys\":[\"options_dce_all\",\"options_dce_call\",\"options_dce_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.DCEOPTION&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_dce_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_dce_all\",\"options_dce_call\",\"options_dce_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DCEOP.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_dce_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_dce_all\",\"options_dce_call\",\"options_dce_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DCEOP.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_czce_all\":{\"_comment\":\"郑商所\",\"navbar\":{\"show\":false,\"keys\":[\"options_czce_all\",\"options_czce_call\",\"options_czce_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.CZCEOPTION&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_ine_all\":{\"_comment\":\"上期能源\",\"navbar\":{\"show\":false,\"keys\":[\"options_ine_all\",\"options_ine_call\",\"options_ine_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.INEOPTION&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_czce_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_czce_all\",\"options_czce_call\",\"options_czce_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CZCEOP.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_czce_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_czce_all\",\"options_czce_call\",\"options_czce_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CZCEOP.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"forex_exchange_icbc\":{\"_comment\":\"工商银行报价\",\"navbar\":{\"show\":true,\"keys\":[\"forex_exchange_icbc\",\"forex_exchange_abc\",\"forex_exchange_boc\",\"forex_exchange_ccb\",\"forex_exchange_bcm\",\"forex_exchange_cmb\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"forex_exchange_abc\":{\"_comment\":\"农业银行报价\",\"navbar\":{\"show\":true,\"keys\":[\"forex_exchange_icbc\",\"forex_exchange_abc\",\"forex_exchange_boc\",\"forex_exchange_ccb\",\"forex_exchange_bcm\",\"forex_exchange_cmb\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"forex_exchange_boc\":{\"_comment\":\"中国银行报价\",\"navbar\":{\"show\":true,\"keys\":[\"forex_exchange_icbc\",\"forex_exchange_abc\",\"forex_exchange_boc\",\"forex_exchange_ccb\",\"forex_exchange_bcm\",\"forex_exchange_cmb\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"forex_exchange_ccb\":{\"_comment\":\"建设银行报价\",\"navbar\":{\"show\":true,\"keys\":[\"forex_exchange_icbc\",\"forex_exchange_abc\",\"forex_exchange_boc\",\"forex_exchange_ccb\",\"forex_exchange_bcm\",\"forex_exchange_cmb\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"forex_exchange_bcm\":{\"_comment\":\"交通银行报价\",\"navbar\":{\"show\":true,\"keys\":[\"forex_exchange_icbc\",\"forex_exchange_abc\",\"forex_exchange_boc\",\"forex_exchange_ccb\",\"forex_exchange_bcm\",\"forex_exchange_cmb\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"forex_exchange_cmb\":{\"_comment\":\"招商银行报价\",\"navbar\":{\"show\":true,\"keys\":[\"forex_exchange_icbc\",\"forex_exchange_abc\",\"forex_exchange_boc\",\"forex_exchange_ccb\",\"forex_exchange_bcm\",\"forex_exchange_cmb\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"global_asia\":{\"_comment\":\"亚洲股市\",\"navbar\":{\"show\":true,\"keys\":[\"global_asia\",\"global_euro\",\"global_america\",\"global_australia\",\"global_qtzs\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"global_euro\":{\"_comment\":\"欧洲股市\",\"navbar\":{\"show\":true,\"keys\":[\"global_asia\",\"global_euro\",\"global_america\",\"global_australia\",\"global_qtzs\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"global_america\":{\"_comment\":\"美洲股市\",\"navbar\":{\"show\":true,\"keys\":[\"global_asia\",\"global_euro\",\"global_america\",\"global_australia\",\"global_qtzs\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"global_australia\":{\"_comment\":\"澳洲股市\",\"navbar\":{\"show\":true,\"keys\":[\"global_asia\",\"global_euro\",\"global_america\",\"global_australia\",\"global_qtzs\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"global_qtzs\":{\"_comment\":\"其他指数\",\"navbar\":{\"show\":true,\"keys\":[\"global_asia\",\"global_euro\",\"global_america\",\"global_australia\",\"global_qtzs\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"options_sh50etf_all\":{\"_comment\":\"上期所50etf\",\"navbar\":{\"show\":true,\"keys\":[\"options_sh50etf_all\",\"options_sh50etf_call\",\"options_sh50etf_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"options_sh50etf_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sh50etf_all\",\"options_sh50etf_call\",\"options_sh50etf_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.C.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"options_sh50etf_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sh50etf_all\",\"options_sh50etf_call\",\"options_sh50etf_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.OP.P.SO.510050.SH&sty=FCOL\",\"fields\":\"StockOptions\"}}},\"options_beanpulp_all\":{\"_comment\":\"大商所豆粕\",\"navbar\":{\"show\":false,\"keys\":[\"options_beanpulp_all\",\"options_beanpulp_call\",\"options_beanpulp_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.DCEOPMEAL&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_beanpulp_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_beanpulp_all\",\"options_beanpulp_call\",\"options_beanpulp_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DMEAL.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_beanpulp_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_beanpulp_all\",\"options_beanpulp_call\",\"options_beanpulp_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DMEAL.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_sugar_all\":{\"_comment\":\"郑商所白糖\",\"navbar\":{\"show\":false,\"keys\":[\"options_sugar_all\",\"options_sugar_call\",\"options_sugar_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.CZCEOPSUGAR&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_sugar_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sugar_all\",\"options_sugar_call\",\"options_sugar_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CSUGAR.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_sugar_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sugar_all\",\"options_sugar_call\",\"options_sugar_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CSUGAR.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_uscny_all\":{\"_comment\":\"港交所美元兑人民币\",\"navbar\":{\"show\":true,\"keys\":[\"options_uscny_all\",\"options_uscny_call\",\"options_uscny_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.HKUSDCNHOP&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_uscny_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_uscny_all\",\"options_uscny_call\",\"options_uscny_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._HUCOP.CP.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_uscny_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_uscny_all\",\"options_uscny_call\",\"options_uscny_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._HUCOP.CP.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_cu_all\":{\"_comment\":\"上期所铜\",\"navbar\":{\"show\":false,\"keys\":[\"options_cu_all\",\"options_cu_call\",\"options_cu_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.SHFEOPCOPPER&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_cu_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_cu_all\",\"options_cu_call\",\"options_cu_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._SCOPPER.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_cu_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_cu_all\",\"options_cu_call\",\"options_cu_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._SCOPPER.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_ru_all\":{\"_comment\":\"上期所橡胶\",\"navbar\":{\"show\":false,\"keys\":[\"options_ru_all\",\"options_ru_call\",\"options_ru_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.SHFEOPRUBBER&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_ru_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_ru_all\",\"options_ru_call\",\"options_ru_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._SRUBBER.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_ru_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_ru_all\",\"options_ru_call\",\"options_ru_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._SRUBBER.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_cf_all\":{\"_comment\":\"郑商所棉花\",\"navbar\":{\"show\":false,\"keys\":[\"options_cf_all\",\"options_cf_call\",\"options_cf_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.CZCEOPCOTTON&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_cf_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_cf_all\",\"options_cf_call\",\"options_cf_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CCOTTON.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_cf_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_cf_all\",\"options_cf_call\",\"options_cf_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._CCOTTON.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_c_all\":{\"_comment\":\"大商所玉米\",\"navbar\":{\"show\":false,\"keys\":[\"options_c_all\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C.DCEOPCORN&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_c_call\":{\"navbar\":{\"show\":true,\"keys\":[\"options_c_all\",\"options_c_call\",\"options_c_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DCORN.C.C&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_c_put\":{\"navbar\":{\"show\":true,\"keys\":[\"options_c_all\",\"options_c_call\",\"options_c_put\"]},\"gridtable\":{\"config\":{\"params\":\"?cmd=C._DCORN.C.P&sty=FC2UCO\",\"fields\":\"FuturesOptions\"}}},\"options_sz50etf_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sz50etf_txbj\",\"options_sz50etf_all\",\"options_sz50etf_rengou\",\"options_sz50etf_rengu\"]}},\"options_sz50etf_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sz50etf_txbj\",\"options_sz50etf_all\",\"options_sz50etf_rengou\",\"options_sz50etf_rengu\"]}},\"options_sz50etf_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sz50etf_txbj\",\"options_sz50etf_all\",\"options_sz50etf_rengou\",\"options_sz50etf_rengu\"]}},\"options_sz50etf_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sz50etf_txbj\",\"options_sz50etf_all\",\"options_sz50etf_rengou\",\"options_sz50etf_rengu\"]}},\"options_kc50etf1_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf1_txbj\",\"options_kc50etf1_all\",\"options_kc50etf1_rengou\",\"options_kc50etf1_rengu\"]}},\"options_kc50etf1_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf1_txbj\",\"options_kc50etf1_all\",\"options_kc50etf1_rengou\",\"options_kc50etf1_rengu\"]}},\"options_kc50etf1_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf1_txbj\",\"options_kc50etf1_all\",\"options_kc50etf1_rengou\",\"options_kc50etf1_rengu\"]}},\"options_kc50etf1_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf1_txbj\",\"options_kc50etf1_all\",\"options_kc50etf1_rengou\",\"options_kc50etf1_rengu\"]}},\"options_kc50etf2_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf2_txbj\",\"options_kc50etf2_all\",\"options_kc50etf2_rengou\",\"options_kc50etf2_rengu\"]}},\"options_kc50etf2_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf2_txbj\",\"options_kc50etf2_all\",\"options_kc50etf2_rengou\",\"options_kc50etf2_rengu\"]}},\"options_kc50etf2_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf2_txbj\",\"options_kc50etf2_all\",\"options_kc50etf2_rengou\",\"options_kc50etf2_rengu\"]}},\"options_kc50etf2_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_kc50etf2_txbj\",\"options_kc50etf2_all\",\"options_kc50etf2_rengou\",\"options_kc50etf2_rengu\"]}},\"options_sahs300etf_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sahs300etf_txbj\",\"options_sahs300etf_all\",\"options_sahs300etf_rengou\",\"options_sahs300etf_rengu\"]}},\"options_sahs300etf_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sahs300etf_txbj\",\"options_sahs300etf_all\",\"options_sahs300etf_rengou\",\"options_sahs300etf_rengu\"]}},\"options_sahs300etf_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sahs300etf_txbj\",\"options_sahs300etf_all\",\"options_sahs300etf_rengou\",\"options_sahs300etf_rengu\"]}},\"options_sahs300etf_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sahs300etf_txbj\",\"options_sahs300etf_all\",\"options_sahs300etf_rengou\",\"options_sahs300etf_rengu\"]}},\"options_sazz500etf_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sazz500etf_txbj\",\"options_sazz500etf_all\",\"options_sazz500etf_rengou\",\"options_sazz500etf_rengu\"]}},\"options_sazz500etf_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sazz500etf_txbj\",\"options_sazz500etf_all\",\"options_sazz500etf_rengou\",\"options_sazz500etf_rengu\"]}},\"options_sazz500etf_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sazz500etf_txbj\",\"options_sazz500etf_all\",\"options_sazz500etf_rengou\",\"options_sazz500etf_rengu\"]}},\"options_sazz500etf_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sazz500etf_txbj\",\"options_sazz500etf_all\",\"options_sazz500etf_rengou\",\"options_sazz500etf_rengu\"]}},\"options_sezz500etf_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sezz500etf_txbj\",\"options_sezz500etf_all\",\"options_sezz500etf_rengou\",\"options_sezz500etf_rengu\"]}},\"options_sezz500etf_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sezz500etf_txbj\",\"options_sezz500etf_all\",\"options_sezz500etf_rengou\",\"options_sezz500etf_rengu\"]}},\"options_sezz500etf_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sezz500etf_txbj\",\"options_sezz500etf_all\",\"options_sezz500etf_rengou\",\"options_sezz500etf_rengu\"]}},\"options_sezz500etf_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sezz500etf_txbj\",\"options_sezz500etf_all\",\"options_sezz500etf_rengou\",\"options_sezz500etf_rengu\"]}},\"options_secybetf_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_secybetf_txbj\",\"options_secybetf_all\",\"options_secybetf_rengou\",\"options_secybetf_rengu\"]}},\"options_secybetf_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_secybetf_txbj\",\"options_secybetf_all\",\"options_secybetf_rengou\",\"options_secybetf_rengu\"]}},\"options_secybetf_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_secybetf_txbj\",\"options_secybetf_all\",\"options_secybetf_rengou\",\"options_secybetf_rengu\"]}},\"options_secybetf_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_secybetf_txbj\",\"options_secybetf_all\",\"options_secybetf_rengou\",\"options_secybetf_rengu\"]}},\"options_sehs300etf_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sehs300etf_txbj\",\"options_sehs300etf_all\",\"options_sehs300etf_rengou\",\"options_sehs300etf_rengu\"]}},\"options_sehs300etf_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sehs300etf_txbj\",\"options_sehs300etf_all\",\"options_sehs300etf_rengou\",\"options_sehs300etf_rengu\"]}},\"options_sehs300etf_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sehs300etf_txbj\",\"options_sehs300etf_all\",\"options_sehs300etf_rengou\",\"options_sehs300etf_rengu\"]}},\"options_sehs300etf_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_sehs300etf_txbj\",\"options_sehs300etf_all\",\"options_sehs300etf_rengou\",\"options_sehs300etf_rengu\"]}},\"options_zjcffex_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_txbj\",\"options_zjcffex_all\",\"options_zjcffex_rengou\",\"options_zjcffex_rengu\"]}},\"options_zjcffex_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_txbj\",\"options_zjcffex_all\",\"options_zjcffex_rengou\",\"options_zjcffex_rengu\"]}},\"options_zjcffex_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_txbj\",\"options_zjcffex_all\",\"options_zjcffex_rengou\",\"options_zjcffex_rengu\"]}},\"options_zjcffex_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_txbj\",\"options_zjcffex_all\",\"options_zjcffex_rengou\",\"options_zjcffex_rengu\"]}},\"options_zjcffex_mo_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_mo_txbj\",\"options_zjcffex_mo_all\",\"options_zjcffex_mo_rengou\",\"options_zjcffex_mo_rengu\"]}},\"options_zjcffex_mo_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_mo_txbj\",\"options_zjcffex_mo_all\",\"options_zjcffex_mo_rengou\",\"options_zjcffex_mo_rengu\"]}},\"options_zjcffex_mo_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_mo_txbj\",\"options_zjcffex_mo_all\",\"options_zjcffex_mo_rengou\",\"options_zjcffex_mo_rengu\"]}},\"options_zjcffex_mo_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_mo_txbj\",\"options_zjcffex_mo_all\",\"options_zjcffex_mo_rengou\",\"options_zjcffex_mo_rengu\"]}},\"options_zjcffex_zo_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_zo_txbj\",\"options_zjcffex_zo_all\",\"options_zjcffex_zo_rengou\",\"options_zjcffex_zo_rengu\"]}},\"options_zjcffex_zo_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_zo_txbj\",\"options_zjcffex_zo_all\",\"options_zjcffex_zo_rengou\",\"options_zjcffex_zo_rengu\"]}},\"options_zjcffex_zo_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_zo_txbj\",\"options_zjcffex_zo_all\",\"options_zjcffex_zo_rengou\",\"options_zjcffex_zo_rengu\"]}},\"options_zjcffex_zo_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_zo_txbj\",\"options_zjcffex_zo_all\",\"options_zjcffex_zo_rengou\",\"options_zjcffex_zo_rengu\"]}},\"options_zjcffex_ho_txbj\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_ho_txbj\",\"options_zjcffex_ho_all\",\"options_zjcffex_ho_rengou\",\"options_zjcffex_ho_rengu\"]}},\"options_zjcffex_ho_all\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_ho_txbj\",\"options_zjcffex_ho_all\",\"options_zjcffex_ho_rengou\",\"options_zjcffex_ho_rengu\"]}},\"options_zjcffex_ho_rengou\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_ho_txbj\",\"options_zjcffex_ho_all\",\"options_zjcffex_ho_rengou\",\"options_zjcffex_ho_rengu\"]}},\"options_zjcffex_ho_rengu\":{\"navbar\":{\"show\":true,\"keys\":[\"options_zjcffex_ho_txbj\",\"options_zjcffex_ho_all\",\"options_zjcffex_ho_rengou\",\"options_zjcffex_ho_rengu\"]}}}");

/***/ }),

/***/ "./ClientApp/config/qqgs.cfg.json":
/*!****************************************!*\
  !*** ./ClientApp/config/qqgs.cfg.json ***!
  \****************************************/
/*! exports provided: qqgsMsg, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"qqgsMsg\":[{\"name\":\"富时/JSE南非40  \",\"id\":\"100.TOP40\"},{\"name\":\"澳大利亚标普200 \",\"id\":\"100.AS51\"},{\"name\":\"奥地利ATX  \",\"id\":\"100.ATX\"},{\"name\":\"比利时BFX \",\"id\":\"100.BFX\"},{\"name\":\"巴西BOVESPA  \",\"id\":\"100.BVSP\"},{\"name\":\"加拿大S&P/TSX \",\"id\":\"100.TSX\"},{\"name\":\"布拉格指数 \",\"id\":\"100.PX\"},{\"name\":\"法国CAC40 \",\"id\":\"100.FCHI\"},{\"name\":\"芬兰赫尔辛基 \",\"id\":\"100.HEX\"},{\"name\":\"德国DAX30\",\"id\":\"100.GDAXI\"},{\"name\":\"荷兰AEX\",\"id\":\"100.AEX\"},{\"name\":\"希腊雅典ASE\",\"id\":\"100.ASE\"},{\"name\":\"印度孟买SENSEX \",\"id\":\"100.SENSEX\"},{\"name\":\"冰岛ICEX \",\"id\":\"100.ICEXI\"},{\"name\":\"印尼雅加达综合\",\"id\":\"100.JKSE\"},{\"name\":\"日经225\",\"id\":\"100.N225\"},{\"name\":\"韩国KOSPI \",\"id\":\"100.KS11\"},{\"name\":\"爱尔兰综合\",\"id\":\"100.ISEQ\"},{\"name\":\"富时意大利MIB\",\"id\":\"100.MIB\"},{\"name\":\"富时马来西亚KLCI\",\"id\":\"100.KLSE\"},{\"name\":\"墨西哥BOLSA\",\"id\":\"100.MXX\"},{\"name\":\"新西兰50\",\"id\":\"100.NZ50\"},{\"name\":\"巴基斯坦卡拉奇\",\"id\":\"100.KSE100\"},{\"name\":\"波兰WIG\",\"id\":\"100.WIG\"},{\"name\":\"俄罗斯RTS\",\"id\":\"100.RTS\"},{\"name\":\"瑞典OMXSPI\",\"id\":\"100.OMXSPI\"},{\"name\":\"富时新加坡海峡时报\",\"id\":\"100.STI\"},{\"name\":\"斯里兰卡科伦坡\",\"id\":\"100.CSEALL\"},{\"name\":\"西班牙IBEX35\",\"id\":\"100.IBEX\"},{\"name\":\"瑞士SMI \",\"id\":\"100.SSMI\"},{\"name\":\"泰国SET\",\"id\":\"100.SET\"},{\"name\":\"台湾加权\",\"id\":\"100.TWII\"},{\"name\":\"英国富时100\",\"id\":\"100.FTSE\"},{\"name\":\"道琼斯\",\"id\":\" 100.DJIA\"},{\"name\":\"纳斯达克\",\"id\":\"100.NDX\"},{\"name\":\"标普500\",\"id\":\"100.SPX\"},{\"name\":\"越南胡志明\",\"id\":\"100.VNINDEX\"}]}");

/***/ }),

/***/ "./ClientApp/config/tsq.gridlist.fields.json":
/*!***************************************************!*\
  !*** ./ClientApp/config/tsq.gridlist.fields.json ***!
  \***************************************************/
/*! exports provided: TSQABStocks, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"TSQABStocks\":[{\"name\":\"number\",\"data\":\"$num\"},{\"name\":\"Code\",\"data\":\"f12\",\"title\":\"代码\",\"template\":\"<a href='/{{innerMktNumMap[f13]}}{{f12}}.html'>{{f12}}</a>\"},{\"name\":\"Name\",\"data\":\"f14\",\"title\":\"名称\",\"template\":\"<a href='/{{innerMktNumMap[f13]}}{{f12}}.html'>{{f14}}</a>\"},{\"name\":\"Links\",\"title\":\"相关链接\",\"template\":\"<a href='http://guba.eastmoney.com/list,{{f12}}.html'>股吧</a><a href='http://data.eastmoney.com/zjlx/{{f12}}.html'>资金流</a><a href='http://data.eastmoney.com/stockdata/{{f12}}.html'>数据</a>\",\"orderable\":false},{\"name\":\"Close\",\"data\":\"f2\",\"title\":\"最新价\",\"supressvalues\":[\"0\"],\"color\":\"{{f4}}\",\"template\":\"{{$current | decimalHandler(f1)}}\"},{\"name\":\"ChangePercent\",\"data\":\"f3\",\"title\":\"涨跌幅\",\"template\":\"{{$current | decimalHandler(2) | percentRender}}\",\"color\":\"{{f4}}\",\"ordering\":\"desc\"},{\"name\":\"Change\",\"data\":\"f4\",\"title\":\"涨跌额\",\"color\":true,\"template\":\"{{$current | decimalHandler(f1)}}\"},{\"name\":\"Volume\",\"data\":\"f5\",\"title\":\"成交量(手)\",\"template\":\"{{$current | numbericFormat}}\"},{\"name\":\"Amount\",\"data\":\"f6\",\"title\":\"成交额\",\"template\":\"{{$current | numbericFormat}}\"},{\"name\":\"Amplitude\",\"data\":\"f7\",\"title\":\"振幅\",\"template\":\"{{$current | decimalHandler(2) | percentRender}}\"},{\"name\":\"High\",\"data\":\"f15\",\"title\":\"最高\",\"supressvalues\":[\"0\"],\"color\":\"{{$current - f18}}\",\"template\":\"{{$current | decimalHandler(f1)}}\"},{\"name\":\"Low\",\"data\":\"f16\",\"title\":\"最低\",\"supressvalues\":[\"0\"],\"color\":\"{{$current - f18}}\",\"template\":\"{{$current | decimalHandler(f1)}}\"},{\"name\":\"Open\",\"data\":\"f17\",\"title\":\"今开\",\"supressvalues\":[\"0\"],\"color\":\"{{$current - f18}}\",\"template\":\"{{$current | decimalHandler(f1)}}\"},{\"name\":\"PreviousClose\",\"data\":\"f18\",\"title\":\"昨收\",\"template\":\"{{$current | decimalHandler(f1)}}\"},{\"name\":\"VolumeRate\",\"data\":\"f10\",\"title\":\"量比\",\"template\":\"{{$current | decimalHandler(2)}}\"},{\"name\":\"TurnoverRate\",\"data\":\"f8\",\"title\":\"换手率\",\"template\":\"{{$current | decimalHandler(2) | percentRender}}\"},{\"name\":\"PERation\",\"data\":\"f9\",\"title\":\"市盈率(动态)\",\"template\":\"{{$current | decimalHandler(2)}}\"},{\"name\":\"PB\",\"data\":\"f23\",\"title\":\"市净率\",\"visible\":false,\"template\":\"{{$current | decimalHandler(2)}}\"},{\"name\":\"MarketValue\",\"data\":\"f20\",\"title\":\"总市值\",\"template\":\"{{$current | numbericFormat}}\",\"visible\":false},{\"name\":\"FlowCapitalValue\",\"data\":\"f21\",\"title\":\"流通市值\",\"template\":\"{{$current | numbericFormat}}\",\"visible\":false},{\"name\":\"ChangePercent60Day\",\"data\":\"f24\",\"title\":\"60日涨跌幅\",\"template\":\"{{$current | decimalHandler(2) | percentRender}}\",\"color\":true,\"visible\":false},{\"name\":\"ChangePercent360Day\",\"data\":\"f25\",\"title\":\"年初至今涨跌幅\",\"template\":\"{{$current | decimalHandler(2) | percentRender}}\",\"color\":true,\"visible\":false},{\"name\":\"Speed\",\"data\":\"f22\",\"title\":\"涨速\",\"template\":\"{{$current | decimalHandler(2) | percentRender}}\",\"color\":true,\"visible\":false},{\"name\":\"FiveMinuteChangePercent\",\"data\":\"f11\",\"title\":\"五分钟涨跌\",\"template\":\"{{$current | decimalHandler(2) | percentRender}}\",\"color\":true,\"visible\":false},{\"data\":\"$favourite\"}]}");

/***/ }),

/***/ "./ClientApp/cookie/index.js":
/*!***********************************!*\
  !*** ./ClientApp/cookie/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * cookie
 */

var cookie = {
	get: function (name) {
		var xarr = document.cookie.match(new RegExp("(^| )" + name + "=([^;]*)(;|$)"));
		if (xarr != null)
			return decodeURIComponent(xarr[2]);
		return null;
	},
	set: function(key,value,expiredays,domain){
		var exdate = new Date();
		exdate.setDate(exdate.getDate() + expiredays);
		document.cookie = key + "=" + escape(value) + ";expires=" + exdate.toGMTString() + ";path=/;domain=" + domain;
	},
	del: function (key, domain) {
		var exdate = new Date((new Date).getTime() - 1);
		if (domain) {
			document.cookie = key + '=;path=/;expires=' + exdate.toGMTString() + ';domain=' + domain;
		}
		else{
			document.cookie = key + '=;path=/;expires=' + exdate.toGMTString();
		}
		
	}
};

module.exports = cookie;

/***/ }),

/***/ "./ClientApp/css/common.css":
/*!**********************************!*\
  !*** ./ClientApp/css/common.css ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/css/gridlist.css":
/*!************************************!*\
  !*** ./ClientApp/css/gridlist.css ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/favstock/index.js":
/*!*************************************!*\
  !*** ./ClientApp/favstock/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * 自选股
 */

var newzxg = __webpack_require__(/*! ../../src/modules/newzxg/web */ "./src/modules/newzxg/web.ts");

var user = __webpack_require__(/*! ../user */ "./ClientApp/user/index.js")
var islogin = user.get() ? true: false


var zxgurl = '//myfavor1.eastmoney.com/' //f=gsaandcheck
var zxgurl2 = '//myfavor1.eastmoney.com/' //f=gsaandcheck



var zxg = {
    data: function(zxgparams){
        var apistr = 'mystock_web'
        if(!islogin){
            apistr = 'mystock_webanonym'
        }
        return $.ajax({
            type: "GET",
            url: zxgurl + apistr + '?cb=?',
            data: zxgparams,
            dataType: "jsonp"
        });
    }
}


var zxg2 = {
    data: function(zxgparams){
        var apistr = 'mystock_web'
        if(!islogin) {
            apistr = 'mystock_webanonym'
        }
        return $.ajax({
            type: "GET",
            url: zxgurl2 + apistr,
            data: zxgparams,
            dataType: "jsonp",
            jsonp:'cb'
        });
    }
}




module.exports = {
    /**
     * 获取默认分组的自选股列表
     */
    getDefaultStocks: function(){
        
        // return zxg.data({
        //     f: 'gsaandcheck'
        // }).then(function(list){
        //     // console.log('原 list')
        //     // console.log(list)
        //     window._myFavor_list = list.data.list;
        //     return list.data.list
        // })
        return newzxg.default.defaultGroupList().then(function(back){
          var backlist = back.result.list.join(',')
          window._myFavor_list = backlist
          return backlist
        })
    },
    /**
     * 添加自选
     *
     */
    add: function(code){
        // return zxg2.data({
        //     f: 'asz',
        //     sc: code
        // }).then(function(list){
        //     // console.log(list)
        //    // return list.result
        //     if (list.result == 1) {
        //         return true
        //     }
        //     else{
        //         return false
        //     }
        // })
        return newzxg.default.addDefaultStock(code).then(function(back){
          return back.re
        })
    },
    del: function(code){
        // return zxg2.data({
        //     f: 'dsz',
        //     sc: code
        // }).then(function(list){
        //     // console.log(list)
        //     //return list.result
        //     if (list.result == 1) {
        //         return true
        //     }
        //     else{
        //         return false
        //     }
        // })
        return newzxg.default.deleteDefaultStock(code).then(function(back){
          return back.re
        })
    }
    // get: function(code){
    //     // return new jpromise(function(resolve, reject){
    //     //     resolve(false)
    //     // })
    //     return zxg2.data({
    //         f: 'gsaandcheck',
    //         sc: code
    //     }).then(function(list){
    //         // console.log(list)
    //         //return list.result
    //         //return false;
    //         if (list.data.check == 'True') {
    //             return true
    //         }
    //         else{
    //             return false
    //         }
    //     })

    // },
    // newget: function (code) {
    //     var url = 'https://myfavor.eastmoney.com/mystock?f=gsaandcheck&t=undefined&cb=jsonp1553678369631';

    //     $.ajax({
    //         type: "get",
    //         data: '',
    //         url: url,
    //         dataType: "jsonp",
    //         jsonp: "js",
    //         success: function (msg) {
    //             console.log(msg)

    //         }
    
    //     });

        



    // }
}

/***/ }),

/***/ "./ClientApp/formatNum.js":
/*!********************************!*\
  !*** ./ClientApp/formatNum.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function formatNum(num) {
    if (num == 0) {
        return num
    }
    if (num == undefined || num == '' || isNaN(num)) {
        return '';
    }

    var hz = '';
    if (num >= 100000000 || num <= -100000000) {
        num = num / 100000000;
        hz = '亿';
    } else if (num >= 10000 || num <= -10000) {
        num = num / 10000;
        hz = '万';
    } else {
        return num;
    }

    var num2 = num.toFixed(2);

    // if(parseInt(num) >= 1000){ //整数部分超过4位
    //   num2 = num.toFixed(1);
    // }

    return num2.toString() + hz;
}

/***/ }),

/***/ "./ClientApp/gridlist.js":
/*!*******************************!*\
  !*** ./ClientApp/gridlist.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// require css
__webpack_require__(/*! ./css/gridlist.css */ "./ClientApp/css/gridlist.css");

// require modules
var $ = __webpack_require__(/*! jquery */ "jquery");
var template = __webpack_require__(/*! ./modules/template-web */ "./ClientApp/modules/template-web.js");
var base = __webpack_require__(/*! ./base */ "./ClientApp/base.js");
var tpls = __webpack_require__("./ClientApp/templates sync recursive gridlist\\.art$");
var URI = __webpack_require__(/*! ./modules/uri/main */ "./ClientApp/modules/uri/main.js");

__webpack_require__(/*! ./modules/listview/main */ "./ClientApp/modules/listview/main.js");
__webpack_require__(/*! ./modules/jquery-plugins/jquery.ba-hashchange */ "./ClientApp/modules/jquery-plugins/jquery.ba-hashchange.js");

var fieldsmappings = __webpack_require__(/*! ./config/gridlist.fields.map.json */ "./ClientApp/config/gridlist.fields.map.json");
var pageconfigs = __webpack_require__("./ClientApp/config sync recursive gridlist\\.cfg\\.json$");
var fieldconfigs = __webpack_require__("./ClientApp/config sync recursive gridlist\\.fields\\.json$");


//
var bankuai = __webpack_require__(/*! ./gridlist3/newbankuai */ "./ClientApp/gridlist3/newbankuai.js");
var indexjson = __webpack_require__(/*! ./config/index.square.cfg.json */ "./ClientApp/config/index.square.cfg.json");
// css
__webpack_require__(/*! ./modules/listview/css/listview.css */ "./ClientApp/modules/listview/css/listview.css");
//


var orderfieldsmap = {
    'A': 'Code',
    'B': 'Close',
    'C': 'ChangePercent',
    'D': 'Change',
    'E': 'Amount',
    'F': 'Volume',
    'G': 'FiveMinuteChangePercent',
    'H': 'VolumeRate',
    'I': 'Peration',
    'J': 'TurnoverRate',
    'K': 'Amplitude',
    'L': 'ListingDate'
};
var ordertypemap = {
    '1': 'asc',
    '-1': 'desc'
};

function mergeLoader(loaders) {
    var keys = loaders.keys();
    var json = {};
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        $.extend(true, json, loaders(key));
    }
    return json;
}

/**
 * 统一列表类
 */
function gridlist(key) {
    base.call(this);
    this.selectedField = '';
    this.load = function () {
        var config = loadPageConfigs(key || (window.location.hash).substr(1));
        // console.info(key, config)
        renderNavbar.apply(this, [config]);
        renderToolbar.apply(this, [config]);
        renderHotModules.apply(this, [config]);
        renderL3Menu.apply(this, [config]);
        renderFieldSelector.apply(this, [config]);
        //this.gridview = renderMainTable.apply(this, [config]);   //之前的渲染main-table 的方法
        newrenderMainTable();

        injectPageRenderer.apply(this, [config]);
    }

    this.init = function () {
        this.beforeLoading();
        this.load();
        this.afterLoaded();
    }
    this.destroy = function () {
        if (this.gridview) this.gridview.destroy();
    }
}
gridlist.modulecache = {};
gridlist.pageconfigs = mergeLoader(pageconfigs);
gridlist.fieldconfigs = mergeLoader(fieldconfigs);
gridlist.tools = {
    'zjs_tips': function(){
        return $('<span><span style="color:gray">温馨提示：当前列表数据延时15分钟</span> <a href="https://zqhd.eastmoney.com/Html/aghd/pc/20171017/activity1.html?tz=webtg_l1_act_qqgs01_01_01_01_0" target="_blank"><strong>下载APP查看实时行情</strong></a></span>')
    },
    'refresh': function () {
        return $('<a class="checkNew"><em></em>查看最新</a>').click(function (e) {
            window.location.reload();
            return false;
        });
    },
    'pictable': function () {
        var self = this;
        var $dom = $('<a></a>')
        var uri = new URI(location),
            query = uri.search(true) || {};
        if (query.mode === 'pic') {
            // $dom.addClass('data-table-mode').html('<em></em>列表').click(function (e) {
            $dom.addClass('data-table-mode').html('').click(function (e) {
                window.location.href = uri.search(function (data) {
                    data.mode = 'data';
                }).toString();
                return false;
            });
        } else {
            //$dom.addClass('pic-table-mode').html('<em></em>多股同列').click(function (e) {
            $dom.addClass('pic-table-mode').html('').click(function (e) {
                var order, st, sr;
                if (self.gridview && self.gridview.datatable) {
                    order = self.gridview.datatable.order()[0];
                    var settings = self.gridview.datatable.column(order[0]).init();
                    st = (order instanceof Array) ? settings.columns[order[0]].name : '';
                    sr = (order instanceof Array) ? ordertypemap[order[1]] || '-1' : '';
                }
                window.location.href = uri.search(function (data) {
                    data.mode = 'pic';
                    if (st) data.sortType = st;
                    if (sr) data.sortRule = sr;
                }).toString();
                return false;
            });
        }
        return $dom;
    }
};
/**
 * 加载页面配置
 * @param {string} key 关键词
 */
function loadPageConfigs(key) {
    // console.info(key)
    key = key || 'default';
    var pc = gridlist.pageconfigs,
        _key = key.split('-')[0],
        cfg;
    if (!pc[_key]) {
        _key = 'default';
        cfg = pc[_key];
    } else {
        cfg = $.extend(true, {}, pc['default'], pc[_key]);
    }
    cfg.key = key;
    return cfg;
}

/**
 * 加载注入页面渲染器
 * @param {*} config 页面配置器
 */
function injectPageRenderer(config) {
    if (!config || !config.pageRenderer || config.pageRenderer.disabled)
        return false;
}

/**
 * 渲染导航栏
 * @param {*} config 页面配置器
 */
function renderNavbar(config) {

    var _cfg = config.navbar;
    if (!_cfg) return false;
    var self = this;
    var $dom = $(_cfg.container);
    if (_cfg.show) {
        $dom.show();
        $(_cfg.division).hide();
    } else {
        $dom.hide();
        $(_cfg.division).show();
    }
    $(this.menu.dom).one('menu.draw', function (e, json, data) {
        var $nav = $(_cfg.container);
        if ($nav.length > 0 && _cfg.show) {
            var mapped = self.sidemenu.getmap(json);
            var _menu_data = {};
            for (var i = 0; i < _cfg.keys.length; i++) {
                var mk = _cfg.keys[i];
                if (mapped.hasOwnProperty(mk)) {
                    _menu_data[mk] = mapped[mk];
                    if (_menu_data[mk].href) {
                        var newuri = new URI(_menu_data[mk].href).absoluteTo(location.href);
                        if (newuri.pathname() === location.pathname) {
                            _menu_data[mk].href = newuri.hash();
                        }
                    }
                }
            }
           // 针对T型报价处理
            var NavData = $.extend(true,{},_menu_data)
            // console.info(NavData)
            for(var key in NavData){
                if(key.indexOf("_txbj") >= 0){
                    NavData[key].name = "T型报价"
                }
            }

            var curkey = data ? data.key : null
            if(_cfg.navbar_key) curkey = _cfg.navbar_key
            // console.info(curkey)
            var html = template.render(_cfg.template, {
                menu: NavData,
                cur: curkey
            });
            $nav.html(html);
        }
    });
    if (this.menu.loaded) {
        this.menu.draw();
    }
}

/**
 * 渲染热门模块
 * @param {*} config 页面配置器
 */
function renderHotModules(config) {
    // console.info(config)
    var _cfg = config.hotlinks;
    // console.info(_cfg)
    if (!_cfg) return false;
    var $dom = $(_cfg.container),
        $wrapper = $(_cfg.container + '-wrapper');
    if ($dom.length > 0) {
        if (_cfg.show) $wrapper.show();
        else $wrapper.hide();
        if (_cfg.template) $dom.html(_cfg.template);
        else if (_cfg.templateFile) {
            var tpl = loadTplModules(_cfg.templateFile) || '';
            $dom.html(tpl);
        }
    }
}

/**
 * 渲染三级目录
 * @param {*} config 页面配置器
 */
function renderL3Menu(config) {
    var _cfg = config.l3menu;
    if (!_cfg) return false;
    var $dom = $(_cfg.container)
    if ($dom.length > 0) {
        if (_cfg.show) $dom.show();
        else $dom.hide();
        if (_cfg.data){ //$dom.html('<ul></ul>');
            var html = ['<ul>']
            for (var index = 0; index < _cfg.data.length; index++) {
                var element = _cfg.data[index];
                var classstr = ""
                if(element.on){
                    classstr = ' class="on"'
                }
                html.push('<li><a href="' + element.href + '" ' + classstr + ' target="_self">' + element.title + '</a></li>')
            }
            html.push('</ul>')
            $dom.html(html.join(''))
        }
    }
}

/**
 * 渲染工具栏
 * @param {*} config 页面配置器
 */
function renderToolbar(config) {
    var _cfg = config.toolbar;
    if (!_cfg) return false;
    var $dom = $(_cfg.container).empty();
    if ($dom.length > 0) {
        if (_cfg.show) $dom.show();
        else $dom.hide();
        for (var i = 0; i < _cfg.tools.length; i++) {
            var tool = gridlist.tools[_cfg.tools[i]];
            if (typeof tool === 'function') {
                var ele = tool.apply(this, [_cfg]);
                $dom.append($(ele));
            }
        }
    }
}

/**
 * 渲染自选指标模块
 * @param {*} config 
 */
function renderFieldSelector(config) {
    var self = this;
    var _cfg = config.customfields;
    if (!_cfg) return false;
    var $wrapper = $(_cfg.wrapper),
        $container = $(_cfg.container, $wrapper);
    if (!_cfg.show) {
        $wrapper.hide();
    } else {
        $wrapper.show();
        var query = new URI(location).search(true);
        var sortname = (query.st || query.sortType || '');
        for (var i = 0; i < _cfg.fields.length; i++) {
            var field = _cfg.fields[i];
            if (field[0].toUpperCase() === sortname.toUpperCase()) {
                field.push(true);
                this.selectedField = sortname;
            } else if (field[2]) {
                this.selectedField = field[0];
            }
        }
        if (!this.selectedField) this.selectedField = _cfg.fields[0][0];
        $container.html(template.render(_cfg.template, _cfg));
        //之前的 自选指标的 函数
        // $container.change(function (e) {
        //     var val = $('option:selected', this).val();
        //     var table = self.gridview.datatable;
        //     var idx = table.columns(':visible')[0].length - 2;
        //     var col = table.column(val + ':name');
        //     if (col[0].length > 0) {
        //         self.selectedField = val;
        //         table.column(idx + ':visIdx').visible(false, false);
        //         col.visible(true);
        //     }
        // });

    }
}

/**
 * 动态加载模块
 * @param {string} key 关键字
 */
function loadTplModules(key) {
    var cache = gridlist.modulecache;
    if (cache.hasOwnProperty(key)) return cache[key];
    var tpl = tpls.keys().indexOf(key) >= 0 ? tpls(key) : null;
    if (tpl) cache[key] = tpl;
    return tpl;
}

/**
 * 加载表格部分
 * @param {*} config 页面配置
 */
function renderMainTable(config) {
    var _cfg = Math.random() > 1 && config._gridtable ? config._gridtable : config.gridtable,
        type = 'data',
        selectedname = this.selectedField || '',
        opts;
    var query = new URI(location).search(true);
    if (query.mode) type = query.mode.toLowerCase();
    var mapping = {
        data: 'full',
        pic: 'pic'
    };
    // key中带有‘-’的直接设置cmd
    var key_cmd = config.key.split('-'),
        key = key_cmd[0],
        cmd = key_cmd[1];
    if (type === 'pic') {
        opts = _cfg['config-pic'] || {};
    } else {
        if (typeof _cfg.config.fields === 'string') {
            var _key = (_cfg.config.fields || '').replace('{{key}}', key);
            _cfg.config.fields = gridlist.fieldconfigs[_key];
        }
        if (!_cfg.config.fields) return false;
        if (cmd) {
            var _cmd = cmd = cmd.indexOf('.') > 0 ? cmd : 'C.' + cmd;
            _cfg.config.params = new URI(_cfg.config.params).setSearch('cmd', _cmd).toString();
        }
        opts = _cfg.config;

        if (_cfg.headerTemplate || _cfg.headerTemplateFile) {
            var tpl = _cfg.headerTemplate || loadTplModules(_cfg.headerTemplateFile);
            var html = template.render(tpl, {
                key: key
            });
            if (html) {
                var $header = $('thead', _cfg.container);
                if ($header.length == 0) $header = $('<thead></thead>').appendTo(_cfg.container);
                $header.html(html);
            }
        }

        for (var i = 0; i < _cfg.config.fields.length; i++) {
            var field = _cfg.config.fields[i];
            var name = field.name || field.data;
            if (selectedname.toUpperCase() === name.toUpperCase()) {
                field.visible = true;
            }
        }
    }
    if (!opts.mappings && opts.mappingsKey) {
        var params = new URI(opts.params).search(true);
        var mk = template.render(opts.mappingsKey, params);
        if (fieldsmappings.hasOwnProperty(mk)) {
            opts.mappings = fieldsmappings[mk];
        }
    }

    setRequestParams();
    var listtype = mapping[type];
    if (_cfg.sourceType === 'tsq') listtype = 'tsq.full';
    var container = $(_cfg.container);
    return container.ListView(listtype, opts);

    /**
     * 获取页面参数配置
     */
    function setRequestParams() {
        if (!location.search) return;
        var st = query.sortType || query.st || '';
        var sr = query.sortRule || query.sr || '-1';
        if (st && type === 'data') {
            if (orderfieldsmap.hasOwnProperty(st.toUpperCase())) st = orderfieldsmap[st.toUpperCase()];
            for (var i = 0; i < _cfg.config.fields.length; i++) {
                var field = _cfg.config.fields[i];
                var name = field.data || field.name;
                if (name.toUpperCase() === st.toUpperCase()) {
                    _cfg.config.order = [i, ordertypemap[sr]];
                }
            }
        } else if (type === 'pic') {
            _cfg['config-pic'].sort = [st, sr];
        }
    }
}


/**
 * 加载表格 新的方法
 * 首页 和 沪深个股  沪深指数
 */
function newrenderMainTable () {
    // console.log('新的方法');
    // //沪深个股 
    // var url = window.location.href;
    // var hu_plag = url.split("#")[1];
    // console.log(hu_plag);

    // //区分多种情况：
    // var new_bankuai = new bankuai(indexjson.ops4);

    // //沪股通 深股通
    // var new_bankuai_sh_hk_board = new bankuai(indexjson.ops5);

    // //两网几退市
    // var new_staq_net_board = new bankuai(indexjson.ops6);

    // switch(hu_plag) {
    //     //沪深a股
    //     case 'hs_a_board':
    //        new_bankuai.Bankuai("#table_wrapper", "m:0+t:6,m:0+t:80,m:1+t:2");
    //        break;
    //     //上证a股
    //     case 'sh_a_board':
    //         new_bankuai.Bankuai("#table_wrapper", "m:1+t:2");
    //         break;
    //     //深证a股
    //     case 'sz_a_board':
    //         new_bankuai.Bankuai("#table_wrapper", "m:0+t:6,m:0+t:80");
    //         break;
    //     //新股
    //     case 'newshares':
    //         new_bankuai.Bankuai("#table_wrapper", "m:0+f:24,m:1+f:24");
    //         break;
    //     //中小板
    //     case 'sme_board':
    //         new_bankuai.Bankuai("#table_wrapper", "m:0+t:13");
    //         break;
    //     //创业板
    //     case 'gem_board':
    //         new_bankuai.Bankuai("#table_wrapper", "m:0+t:80");
    //         break;

    //     //沪股通
    //     case 'sh_hk_board':
    //         new_bankuai_sh_hk_board.Bankuai("#table_wrapper", "b:BK0707");
    //         break;

    //     //深股通
    //     case 'sz_hk_board':
    //         new_bankuai_sh_hk_board.Bankuai("#table_wrapper", "b:BK0804");
    //         break;

    //     //b股
    //     case 'b_board':
    //         new_bankuai.Bankuai("#table_wrapper", "m:0+t:7,m:1+t:3");
    //         break;

    //     //上证ab股比价
    //     // case 'ab_comparison_sh':
    //     //     new_bankuai.Bankuai("#table_wrapper", "m:0+t:7,m:1+t:3");
    //     //     break;

    //      //风险警示板
    //      case 'st_board':
    //         new_bankuai.Bankuai("#table_wrapper", "m:0+f:4,m:1+f:4");
    //         break;

    //      //两网及退市
    //      case 'staq_net_board':
    //         new_staq_net_board.Bankuai("#table_wrapper", "m:0+s:3");
    //         break;

    //     //沪深指数  --- 上证系列指数
    //     case 'index_sh':
    //         var new_staq_net_board = new bankuai(indexjson.ops6);
    //         new_staq_net_board.Bankuai("#table_wrapper", "m:0+s:3");
    //         break;


    //     default:
    //         // new_bankuai.Bankuai("#table_wrapper", "m:0+t:6,m:0+t:80,m:1+t:2");
    //         break;
    // }


}







var page = new gridlist();
page.init();
$(window).hashchange(function (e) {
    try{
        clearInterval(window.cd)
    }
    catch(error){
    }
    page.destroy();
    page.load();
});

module.exports = gridlist;

/***/ }),

/***/ "./ClientApp/gridlist3/config.js":
/*!***************************************!*\
  !*** ./ClientApp/gridlist3/config.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var config = __webpack_require__(/*! ./heads */ "./ClientApp/gridlist3/heads.js");

module.exports = {

    futures: config["futures"],
    stocks: config["stocks"],

    bankuai: config["bankuai"],
    zijinliu: config["zijinliu"],
    zijinliuGegu: config["zijinliuGegu"],
    hushenAStock: config["hushenAStock"],
    hushenStockKcb: config["hushenStockKcb"],
    shhkBoard: config["shhkBoard"],
    staqnetBoard: config["staqnetBoard"],
    indexsh: config["indexsh"],
    neeqstocks: config["neeqstocks"],
    hkstocks: config["hkstocks"],
    hkstocks_rmb: config["hkstocks_rmb"],
    hkshstocks: config["hkshstocks"],
    abgu: config["abgu"],
    ahgu: config["ahgu"],
    ahgu2: config["ahgu2"],
    ahgu3: config["ahgu3"],
    hkindex: config["hkindex"],
    usstocks: config["usstocks"],
    usindex: config["usindex"],
    globalamerica: config["globalamerica"],
    globalamerica2: config["globalamerica2"],
    globalamericaOz: config["globalamericaOz"],
    globalamerica3: config["globalamerica3"],
    globalamerica4: config["globalamerica4"],
    conceptboard: config["conceptboard"],
    conceptboardDatil: config["conceptboardDatil"],
    hsgt: config["hsgt"],
    qhsc_jq: config["qhsc_jq"],
    fundcloseend: config["fundcloseend"],
    fundcloseend_reits: config["fundcloseend_reits"],
    fundcloseend2: config["fundcloseend2"],
    bond: config["bond"],
    bondnew: config["bondnew"],
    forex: config["forex"],
    forex2: config["forex2"],
    qqsc: config["qqsc"],
    gold: config["gold"],
    gold2: config["gold2"],
    hsbk: config["hsbk"],
    hsbkd: config["hsbkd"],
    hsbklz: config["hsbklz"],
    hszs: config["hszs"],
    hszs2: config["hszs2"],
    mgsc: config["mgsc"],
    mgsc3: config["mgsc3"],
    bondmine: config["bondmine"],
    indexqh: config["indexqh"],
    indexqhNew: config["indexqhNew"],
    zjs: config["zjs"],
    gjqh: config["gjqh"],
    hjqh: config["hjqh"],
    whpj: config["whpj"],
    ggsc: config["ggsc"],
    Zqzqzs: config["Zqzqzs"],
    opsnewgu: config["opsnewgu"],
    hkadr: config["hkadr"],
    hkstocks_cp_asc: config["hkstocks_cp_asc"],
    sh_a_cp_desc: config["sh_a_cp_desc"],
    AB5MinChangePercent: config["AB5MinChangePercent"],
    ABTurnoverRate: config["ABTurnoverRate"],
    ABVolumeRate: config["ABVolumeRate"],
    ABAmplitude: config["ABAmplitude"],
    ABAmount: config["ABAmount"],
    ABPE: config["ABPE"],
    ABPB: config["ABPB"],
    ABFlowCapitalValue: config["ABFlowCapitalValue"],
    ABMarketValue: config["ABMarketValue"],
    AB60DayChangePercent: config["AB60DayChangePercent"],
    AB360DayChangePercent: config["AB360DayChangePercent"],
    ABSpeed: config["ABSpeed"],
    BoardsCPAsc: config["BoardsCPAsc"],
    BoardsCPAscd: config["BoardsCPAscd"],
    BoardsTurnoverRate: config["BoardsTurnoverRate"],
    BoardsSpeed: config["BoardsSpeed"],
    BoardsAmount: config["BoardsAmount"],
    CommonVolume: config["CommonVolume"],
    CommonAmount: config["CommonAmount"],
    BoardsPosition: config["BoardsPosition"],
    MainCaptialFlow: config["MainCaptialFlow"],
    FFRanking: config["FFRanking"],
    BoardsCaptialFlow: config["BoardsCaptialFlow"],
    fullscreenlist: config["fullscreenlist"]
    
};

/***/ }),

/***/ "./ClientApp/gridlist3/css/square.css":
/*!********************************************!*\
  !*** ./ClientApp/gridlist3/css/square.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/gridlist3/getData.js":
/*!****************************************!*\
  !*** ./ClientApp/gridlist3/getData.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var tools = __webpack_require__(/*! ../modules/tools */ "./ClientApp/modules/tools.js");
var hqConfig = __webpack_require__(/*! ../Apiconfig */ "./ClientApp/Apiconfig.js");
var delayparams = __webpack_require__(/*! ../../src/modules/quotedelay */ "./src/modules/quotedelay/index.ts");


module.exports = function (pars, callback) {
    //61.152.230.207

    // http://61.152.230.32:38618/api/qt/clist/get?pi=0&pz=20&po=1&fs=m:113+t:15&fid=f3&fields=f1,f2,f3,f4,f5,f6,f15,f16,f17,f28,f34,f35,f108&ut=fa5fd1943c7b386f172d6893dbfba10b

    //http://61.152.230.32:38618/api/qt/clist/get


    //外牌汇价
    // var url = "http://61.129.249.233:18665/api/qt/clist/get"

    var url = window.location.href;
    var hu_plag = url.split("#")[1];


    //统一接口  测试地址 
    // var url = "http://61.152.230.191/api/qt/clist/get"


    //测试接口
    // var url = "http://61.129.249.233:18665/api/qt/clist/get"

    //正式接口
     //    var url = "http://" + Math.floor(Math.random()*100+1) +  ".push2.eastmoney.com/api/qt/clist/get";
        var url = hqConfig.getEnvPath("tsApi") + "api/qt/clist/get";

    var par = {
        pn: 0,
        pz: 20, // 每页大小
        // fs: "m:113+t:15",       // 证券过滤器
        // fs: "m:1+t:2",       // 证券过滤器
        po: 1, // 排序方向（正序填0，倒序填1，默认为1。）
        // fid: "f3",      // 排序字段
        np: 1,
        // fields: "f1,f12,f14,f2,f4,f3,f17,f15,f16,f28,f5,f6,f34,f35,f108",       // 需要获取的字段
        ut: "bd1d9ddb04089700cf9c27f6f7426281",
        fltt: 2,
        invt: 2,
        wbp2u: delayparams
    }

    par = $.extend(par, pars);

    $.ajax({
        url: url,
        method: "GET",
        data: tools.objToPars(par),
        dataType: "jsonp",
        jsonp: "cb",
        success: function (msg) {
            // console.log('------------------')
            // console.log(msg);
            // console.log('------------------')
            // if (msg.rc === 0) {
            // if(msg && msg.data && msg.data.diff instanceof Array && msg.data.diff.length > 0){
            //      msg.data.diff.forEach(function(item){
            //          if(item.f14){
            //              item.f14 = tools.txtLeft(item.f14, 12, false)
            //          }
            //        item = item
            //      })
            // }
            callback(msg);
            // }
        },
        error: function (err) {

        }
    });


};

/***/ }),

/***/ "./ClientApp/gridlist3/heads.js":
/*!**************************************!*\
  !*** ./ClientApp/gridlist3/heads.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * 
 * {
 *      title: {String} 显示的表头名称
 *      type: {String} 特殊类型，当前只有一个序列
 *      key: {string} 接口返回的字段名称
 *      order: {Boolean} 字段是否可排序 
 *      color: {int | String} 字段时候标记颜色， int表示个当前的数值比较，字符串表示用指定的Key和0比较，_开头的字段表示当前字段减去_key这个字段在比较
 *      suffix: {String} 单位
 *      href: {String} 跳转链接。需要和data一起使用，href中 使用 {{index}} 使用data中的数据
 *      data：{Array} href中要使用的数据
 * }
 * 
 */


var tools = __webpack_require__(/*! ./tools */ "./ClientApp/gridlist3/tools.js");


module.exports = {

    //首页板块
    bankuai: {
        fields: "f1,f2,f3,f14,f12,f13,f62,f128,f136,f152",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
                
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "主力净流入",
                key: "f62",
                color: "f62",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberIndex(that);
                },
                show: true
            },
            {
                title: "领涨股",
                key: "f128",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f141","f140","f128"],
                show: true,
                // cb: function(that, row){
                //     return tools.formatNumber3(that);
                // }
                newcb:  function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f136",
                // suffix: "%",
                color: "f136",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
        ],
        sumcount: 5
            
    },


    //首页资金流
    zijinliu: {
        fields: "f1,f2,f3,f14,f12,f13,f62,f128,f136,f152,f184",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                newcb:  function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "f3",
                order: false,
                show: true
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "主力净流入",
                key: "f62",
                color: "f62",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberIndex(that);
                },
                show: true
            },
            //净占比 字段需要修改
            {
                title: "主力净占比",
                key: "f184",
                color: "f184",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true
            }
        ],
        sumcount: 5
            
    },

    //沪深A股
    hushenAStock: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                color: "f4",
                order: true,
                show: true,
                name: 'Change',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                }
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'Amplitude'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber4(that);
                // },
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Low'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Open'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "量比",
                key: "f10",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberHSGGLB(that);
                },
                show: true,
                name: 'VolumeRate'
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "市盈率(动态)",
                key: "f9",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PERation'
            },
            {
                title: "市净率",
                key: "f23",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PB'
            },
            {
                title: "总市值",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "流通市值",
                key: "f21",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "60日涨跌幅",
                key: "f24",
                order: true,
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f24",
                show: false
            },
            {
                title: "年初至今涨跌幅",
                key: "f25",
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f25",
                order: true,
                show: false
            },
            {
                title: "涨速",
                key: "f22",
                // suffix: "%",
                color: "f22",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "5分钟涨跌",
                key: "f11",
                color: "f11",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 20


    },


     //沪深个股---科创板
     hushenStockKcb: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                color: "f4",
                order: true,
                show: true,
                name: 'Change',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                }
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.kcbMyformatNum(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'Amplitude'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber4(that);
                // },
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Low'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Open'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "量比",
                key: "f10",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberHSGGLB(that);
                },
                show: true,
                name: 'VolumeRate'
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "市盈率(动态)",
                key: "f9",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PERation'
            },
            {
                title: "市净率",
                key: "f23",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PB'
            },
            {
                title: "总市值",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "流通市值",
                key: "f21",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "60日涨跌幅",
                key: "f24",
                order: true,
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f24",
                show: false
            },
            {
                title: "年初至今涨跌幅",
                key: "f25",
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f25",
                order: true,
                show: false
            },
            {
                title: "涨速",
                key: "f22",
                // suffix: "%",
                color: "f22",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "5分钟涨跌",
                key: "f11",
                color: "f11",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 20


    },


     //沪深个股 --新股
     opsnewgu: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                color: "f4",
                order: true,
                show: true,
                name: 'Change',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                }
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'Amplitude'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber4(that);
                // },
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Low'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                color: "_f18",
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'Open'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                order: true,
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "市盈率(动态)",
                key: "f9",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PERation'
            },
            {
                title: "市净率",
                key: "f23",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PB'
            },
            {
                title: "上市时间",
                key: "f26",
                order: true,
                show: true,
                name: 'shtime',
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "总市值",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "流通市值",
                key: "f21",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "60日涨跌幅",
                key: "f24",
                order: true,
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f24",
                show: false
            },
            {
                title: "年初至今涨跌幅",
                key: "f25",
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f25",
                order: true,
                show: false
            },
            {
                title: "涨速",
                key: "f22",
                // suffix: "%",
                color: "f22",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "5分钟涨跌",
                key: "f11",
                color: "f11",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "量比",
                key: "f10",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberHSGGLB(that);
                },
                show: false,
                name: 'VolumeRate'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 20


    },

    //AB股比价
    abgu: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f201,f202,f203,f196,f197,f199,f195,f200",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "B股代码",
                key: "f201",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f202","f201"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f203",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f202","f201"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f202","f201"],
                show: true,
                name: 'Links_abgu'
            },
            {
                title: "最新价",
                key: "f196",
                fixedkey: 'f200',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f195",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f197",
                color: "f197",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "A股代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f3",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber2(that);
                // },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "比价（A/B）",
                key: "f199",
                // suffix: "%",
                color: "",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'ChangePercent'
            }
            
        ],
        sumcount: 20


    },

    //港股市场---Ah股比价
    ahgu: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f191,f192,f193,f186,f185,f187,f189,f188",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "名称",
                key: "f193",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f192","f191"],
                show: true,
                name: 'Name'
            },
            {
                title: "H股代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "最新价(HKD)",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                // cb: function(that, row){
                //     return tools.formatNumberNewPri(that);
                // },
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "港股吧",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'>A股吧</a>",
                data: ["f13","f12"],
                show: true,
                name: ''
            },
            {
                title: "A股代码",
                key: "f191",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f192","f191"],
                show: true,
                name: 'Code'
            },
            {
                title: "最新价(RMB)",
                key: "f186",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f185",
                order: false,
                show: true,
                // cb: function(that, row){
                //     return tools.formatNumberNewPri(that);
                // },
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f187",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f187",
                order: false,
                // cb: function(that, row){
                //     return tools.formatNumber2(that);
                // },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "A股吧",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'>A股吧</a>",
                data: ["f192","f191"],
                show: true,
                name: 'gangguba'
            },
           
            {
                title: "比价（A/H）",
                key: "f189",
                // suffix: "%",
                color: "",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "溢价（A/H）%",
                key: "f188",
                // suffix: "%",
                color: "",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'ChangePercent'
            }
            
        ],
        sumcount: 5


    },

    //沪深港通---AH股比价
    ahgu2: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f191,f192,f193,f186,f185,f187,f189,f188",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "名称",
                key: "f193",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f192","f191"],
                show: true,
                name: 'Name'
            },
            {
                title: "H股代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "最新价(HKD)",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumberNewPri(that);
                // },
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "港股吧",
                key: "",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'>A股吧</a>",
                data: ["f13","f12"],
                show: true,
                name: ''
            },
            {
                title: "A股代码",
                key: "f191",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f192","f191"],
                show: true,
                name: 'Code'
            },
            {
                title: "最新价(RMB)",
                key: "f186",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f185",
                order: true,
                show: true,
                // cb: function(that, row){
                //     return tools.formatNumberNewPri(that);
                // },
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f187",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f187",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber2(that);
                // },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "A股吧",
                key: "",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'>A股吧</a>",
                data: ["f192","f191"],
                show: true,
                name: 'gangguba'
            },
           
            {
                title: "比价（A/H）",
                key: "f189",
                // suffix: "%",
                color: "",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "溢价（A/H）%",
                key: "f188",
                // suffix: "%",
                color: "f188",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'ChangePercent'
            }
            
        ],
        sumcount: 20


    },

    //沪深港通---AH股比价  centerv2 小标签
    ahgu3: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f191,f192,f193,f186,f185,f187,f189,f188",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "名称",
                key: "f193",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f192","f191"],
                show: true,
                name: 'Name'
            },
            {
                title: "H股代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "最新价(HKD)",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                // cb: function(that, row){
                //     return tools.formatNumberNewPri(that);
                // },
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                // cb: function(that, row){
                //     return tools.formatNumber2(that);
                // },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "港股吧",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'>A股吧</a>",
                data: ["f13","f12"],
                show: true,
                name: ''
            },
            {
                title: "A股代码",
                key: "f191",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f192","f191"],
                show: true,
                name: 'Code'
            },
            {
                title: "最新价(RMB)",
                key: "f186",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f185",
                order: false,
                show: true,
                // cb: function(that, row){
                //     return tools.formatNumberNewPri(that);
                // },
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f187",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f187",
                order: false,
                // cb: function(that, row){
                //     return tools.formatNumber2(that);
                // },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "A股吧",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'>A股吧</a>",
                data: ["f192","f191"],
                show: true,
                name: 'gangguba'
            },
            {
                title: "比价（A/H）",
                key: "f189",
                // suffix: "%",
                color: "",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "溢价（A/H）%",
                key: "f188",
                // suffix: "%",
                color: "",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
            
        ],
        sumcount: 5


    },


    //沪股通  深股通
    shhkBoard: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'Amplitude'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber4(that);
                // },
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber4(that);
                // },
                show: true,
                name: 'Low'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber4(that);
                // },
                show: true,
                name: 'Open'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                // cb: function(that, row){
                //     return tools.formatNumber4(that);
                // },
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "市盈率(动态)",
                key: "f9",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PERation'
            },
            {
                title: "市净率",
                key: "f23",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PB'
            },
            {
                title: "上市时间",
                key: "f26",
                order: true,
                show: true,
                name: 'shtime',
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "总市值",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "流通市值",
                key: "f21",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "60日涨跌幅",
                key: "f24",
                order: true,
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f4",
                show: false
            },
            {
                title: "年初至今涨跌幅",
                key: "f25",
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f4",
                order: true,
                show: false
            },
            {
                title: "涨速",
                key: "f22",
                // suffix: "%",
                color: "f22",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false                
            },
            {
                title: "5分钟涨跌",
                key: "f11",
                color: "f11",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 20


    },


    //两网及退市
    staqnetBoard: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'neeq_stocks'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "委比",
                key: "f33",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag2(value, fixednum);
                },
                order: true,
                show: true,
                name: 'weibi'
            }
           
        ],
        sumcount: 20

    },


    //沪深指数---上证系列指数   深证系列指数
    indexsh: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'Amplitude'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "量比",
                key: "f10",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'VolumeRate'
            }
           
        ],
        sumcount: 20

    },


    //新三板
    neeqstocks: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f111",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                signIcon:"sanban",
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'neeq_stocks'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
               
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "委比",
                key: "f33",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag2(value, fixednum);
                },
                color: "f33",
                order: true,
                show: true,
                name: 'weibi'
            }
           
        ],
        sumcount: 20

    },


    //沪深港通---港股通 沪、深
    hkshstocks: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'hk_stocks'
            },
            {
                title: "最新价(HKD)",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量(股)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额(港元)",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 20


    },


    //港股--全部
    hkstocks: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'hk_stocks'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量(股)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
           
        ],
        sumcount: 20

    },


    //港股--人民币计价
    hkstocks_rmb: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'hk_stocks'
            },
            {
                title: "最新价(RMB)",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量(股)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额(人民币)",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
           
        ],
        sumcount: 20

    },

    //港股 --香港指数
    hkindex: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价(HKD)",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                key: "f17",
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量(股)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额(港元)",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            }
           
        ],
        sumcount: 20

    },

    //美股
    usstocks:  {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价(美元)",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "开盘价",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高价",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低价",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收价",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "总市值(美元)",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true
            },
            {
                title: "市盈率",
                key: "f115",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                show: true
            }
           
           
        ],
        sumcount: 20

    },


    //美股指数 
    usindex:  {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f124,f107",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型 <em class="circle " title="已收盘">●</em>
                show: true,
                name: 'number'

            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f13","f12"],
                show: true,
                name: 'usindex_name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "开盘价",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高价",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低价",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收价",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'zhenfu'
            },
            {
                title: "最新行情时间",
                key: "f124",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberTime(that);
                },
                name: 'newtime'
            }
           
        ],
        sumcount: 20

    },

    //全球股市
    globalamerica: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f124,f107",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型 <em class="circle " title="已收盘">●</em>
                show: true,
                name: 'number'

            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f13","f12"],
                show: true,
                name: 'usindex_name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "开盘价",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高价",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低价",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收价",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'zhenfu'
            },
            {
                title: "最新行情时间",
                key: "f124",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberTime(that);
                },
                name: 'newtime'
            }
           
        ],
        sumcount: 20

    },

    //全球股市  centerv2
    globalamerica2: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f124,f107",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f13","f12"],
                show: true,
                name: 'usindex_name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            }
           
        ],
        sumcount: 21

    },

    
    globalamericaOz: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f124,f107",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f13","f12"],
                show: true,
                name: 'usindex_name',
                wenhaoFlag:'<span id="GDR_title3" style="background: url(/center/images/ying_wen.png) no-repeat;display:inline-block;width:15px;height:14px;position:relative;top:2px;left: 4px;" title="" class="tooltip-f"></span>'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            }
           
        ],
        sumcount: 23

    },


    globalamerica3: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f124,f107",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f13","f12"],
                show: true,
                name: 'usindex_name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },

                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            }
           
        ],
        sumcount: 6

    },

    globalamerica4: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f124,f107",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f13","f12"],
                show: true,
                name: 'usindex_name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },

                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            }
           
        ],
        sumcount: 3

    },



    //沪深板块
    conceptboard : {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152,f124,f107,f104,f105,f140,f141,f207,f208,f209,f222",
        head: [
            {
                title: "排名",
                type: "seq",    // type 表示特殊类型 <em class="circle " title="已收盘">●</em>
                show: true,
                name: 'number'

            },
            {
                title: "板块名称",
                key: "f14",
                order: true,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f13","f12"],
                show: true,
                name: 'name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'concept_board'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "总市值",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true
            },
            {
                title: "上涨家数",
                key: "f104",
                color: 'red',
                order: true,
                show: true
            },
            {
                title: "下跌家数",
                key: "f105",
                color: 'green',
                order: true,
                show: true
            },
            {
                title: "领涨股票",
                key: "f128",
                order: false,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}"></a>',
                data: ["f141","f140"],
                show: true,
                name: 'name',
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "涨跌幅",
                key: "f136",
                // suffix: "%",
                color: "f136",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true,
                name: 'ChangePercent'
            },
            
           
        ],
        sumcount: 20

    },


    //沪深板块--里面小标签
    conceptboardDatil: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f45",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'Amplitude'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "量比",
                key: "f10",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberHSGGLB(that);
                },
                show: true,
                name: 'VolumeRate'
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "市盈率(动态)",
                key: "f9",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PERation'
            },
            {
                title: "市净率",
                key: "f23",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PB'
            },
            {
                title: "净利润",
                key: "f45",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "总市值",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "流通市值",
                key: "f21",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: false
            },
            {
                title: "60日涨跌幅",
                key: "f24",
                order: true,
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f24",
                show: false
            },
            {
                title: "年初至今涨跌幅",
                key: "f25",
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f25",
                order: true,
                show: false
            },
            {
                title: "涨速",
                key: "f22",
                // suffix: "%",
                color: "f22",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "5分钟涨跌",
                key: "f11",
                color: "f11",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: false
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 20


    },


   //沪深港通 
   hsgt:  {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
            
        ],
        sumcount: 5
            
    },

     //期货市场---金融期货--能源化工
   qhsc_jq:  {
    fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
    head: [
        {
            title: "序号",
            type: "seq",    // type 表示特殊类型
            show: true,
            name: 'number'

        },
        {
            title: "代码",
            key: "f12",
            order: false,
            href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
            data: ["f13","f12"],
            show: true,
            name: 'Code'
        },
        {
            title: "名称",
            key: "f14",
            order: false,
            href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
            data: ["f13","f12"],
            show: true
        },
        {
            title: "最新价",
            key: "f2",
            fixedkey: 'f1',
            newcb: function(value, fixednum){
                return tools.formatNumberFlag(value, fixednum);
            },
            // suffix: "%",
            color: "f3",
            order: false,
            show: true,
            name: 'Close'
        },
        {
            title: "涨跌额",
            key: "f4",
            fixedkey: 'f1',
            newcb: function(value, fixednum){
                return tools.formatNumberFlag(value, fixednum);
            },
            // suffix: "%",
            color: "f4",
            order: false,
            show: true,
            name: 'Change'
        },
        {
            title: "涨跌幅",
            key: "f3",
            fixedkey: 'f152',
            newcb: function(value, fixednum){
                return tools.formatNumberIndexZdf(value, fixednum);
            },
            // suffix: "%",
            color: "f3",
            order: false,
            show: true,
            name: 'ChangePercent'
        },
        {
            title: "所属交易所",
            key: "f13",
            order: false,
            data: ["f13"],
            newcb: function(value){
                return tools.formatNumberQhsc(value);
            },
            show: true
        }
       
        
    ],
    sumcount: 5
        
},

    //港股市场 centerv2
     //沪深港通 
     ggsc:  {
    fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
    head: [
        {
            title: "序号",
            type: "seq",    // type 表示特殊类型
            show: true,
            name: 'number'

        },
        {
            title: "代码",
            key: "f12",
            order: false,
            href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
            data: ["f13","f12"],
            show: true,
            name: 'Code'
        },
        {
            title: "名称",
            key: "f14",
            order: false,
            href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
            data: ["f13","f12"],
            show: true
        },
        {
            title: "最新价",
            key: "f2",
            fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
            },
            // suffix: "%",
            color: "_f18",
            order: false,
            show: true,
            name: 'Close'
        },
        {
            title: "涨跌额",
            key: "f4",
            fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
            // suffix: "%",
            color: "f4",
            order: false,
            show: true,
            name: 'Change'
        },
        {
            title: "涨跌幅",
            key: "f3",
            fixedkey: 'f152',
            newcb: function(value, fixednum){
                return tools.formatNumberIndexZdf(value, fixednum);
            },
            // suffix: "%",
            color: "f3",
            order: false,
            show: true,
            name: 'ChangePercent'
        },
        {
            title: "成交量(手)",
            key: "f5",
            order: false,
            cb: function(that, row){
                return tools.formatNumber(that);
            },
            show: true,
            name: 'Volume'
        },
        {
            title: "加自选",
            key: "addzixuan",
            order: false,
            href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
            data: ["f13","f12"],
            show: true,
            name: 'Links'
        }
        
    ],
    sumcount: 5
        
     },

     //港股市场--adr
     hkadr :  {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f213,f214,f220,f219,f217,f218",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'
            },
            {
                title: "港股名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "港股代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "ADR代码",
                key: "f213",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f214","f213"],
                show: true,
                name: 'Code'
            },
            {
                title: "ADR收市价(USD)",
                key: "f219",
                fixedkey: 'f1',
                    newcb: function(value, fixednum){
                        return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f217",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f217",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f217",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f218",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f218",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "折合每股港元",
                key: "f220",
                fixedkey: 'f1',
                    newcb: function(value, fixednum){
                        return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                order: true,
                show: true,
                name: 'Close'
            },
            
        ],
        sumcount: 20
            
    },


    //基金市场
    fundcloseend: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'fundcloseend_Links'
            },
            {
                title: "最新价",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                key: "f2",
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "开盘价",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高价",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低价",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            }
        ],
        sumcount: 20
            
    },

    //基金市场-reits
    fundcloseend_reits: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            // {
            //     title: "相关链接",
            //     key: "",
            //     order: false,
            //     href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
            //     data: ["f13","f12"],
            //     show: true,
            //     name: 'fundcloseend_Links'
            // },
            {
                title: "最新价",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                key: "f2",
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "开盘价",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高价",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低价",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            }
        ],
        sumcount: 20
            
    },

    //基金市场  内部 小标签
    fundcloseend2: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'fundcloseend_Links'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "开盘价",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Open'
            },
            {
                title: "最高价",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低价",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: false,
                show: true,
                name: 'PreviousClose'
            }
        ],
        sumcount: 5
            
    },

    //债券市场-centerv2-债券指数
    Zqzqzs: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: false,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量",
                key: "f5",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            }
        ],
        sumcount: 5
            
    },


    //债券市场
    bond: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            }
           
        ],
        sumcount: 20

    },

     //债券市场  按市场额度 排序
     bondnew: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f33,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            }
           
        ],
        sumcount: 20

    },


    //债券市场 centerv2
    bondmine: {
        fields: "f1,f2,f3,f4,f14,f12,f13,f62,f128,f136,f152,f184",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            }
        ],
        sumcount: 5
            
    },


    //外汇市场
    forex: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            }
        ],
        sumcount: 20
            
    },

    //外汇市场--外汇牌价
    whpj: {
        fields: "f1,f12,f13,f14,f31,f32,f142,f143,f124",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                show: true
            },
            {
                title: "现汇买入价",
                key: "f31",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "现钞买入价",
                key: "f142",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "现汇卖出价",
                key: "f32",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "现钞卖出价",
                key: "f143",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "更新时间",
                key: "f124",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberTime(that);
                },
                show: true,
                name: 'PreviousClose'
            }
   
        ],
        sumcount: 20
            
    },

    //外汇市场  centerv2
    forex2: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "开盘",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Low'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: false,
                show: true,
                name: 'PreviousClose'
            }
        ],
        sumcount: 5
            
    },


    //期权市场
    qqsc: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f28,f11,f62,f128,f136,f115,f152,f133,f108,f163,f161,f162",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "持仓量",
                key: "f108",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "行权价",
                key: "f161",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "剩余日",
                key: "f162",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "日增",
                key: "f163",
                order: true,
                color: "f163",
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "昨结",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: true,
                show: true,
                name: 'Open'
            }
        ],
        sumcount: 20
            
    },


    //黄金市场
    gold: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f28,f11,f62,f128,f136,f115,f152,f133,f124",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "品种",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨结",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "更新时间",
                key: "f124",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberTime(that);
                },
                show: true,
                name: 'PreviousClose'
            }
            
        ],
        sumcount: 20
            
    },


    //黄金市场--centerv2
    gold2: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f28,f11,f62,f128,f136,f115,f152,f133,f124",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "品种",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: false,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: false,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: false,
                show: true,
                name: 'Low'
            },
            {
                title: "昨结",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: false,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "更新时间",
                key: "f124",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberTime(that);
                },
                show: true,
                name: 'PreviousClose'
            }
            
        ],
        sumcount: 5
            
    },


    //沪深板块
    hsbk: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f133,f104,f105",
        head: [
            {
                title: "排名",
                type: "seq",    // type 表示特殊类型
                show: true,
                order: false,
                name: 'number'

            },
            {
                title: "板块名称",
                key: "f14",
                order: false,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}" title="{{2}}"></a>',
                data: ["f13","f12","f14"],
                show: true,
                name: 'name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'concept_board'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "换手率",
                key: "f8",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "涨跌家数",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'zhangdiejia'
            },
            {
                title: "领涨股票",
                key: "f128",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f141","f140","f128"],
                show: true,
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "涨跌幅",
                key: "f136",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f136",
                order: false,
                show: true
            }


            
        ],
        sumcount: 10
            
    },

    //沪深板块 跌幅榜
    hsbkd: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f133,f104,f105,f128,f136,f207,f208,f209,f222",
        head: [
            {
                title: "排名",
                type: "seq",    // type 表示特殊类型
                show: true,
                order: false,
                name: 'number'

            },
            {
                title: "板块名称",
                key: "f14",
                order: false,
                href: '<a href="//quote.eastmoney.com/unify/r/{{0}}.{{1}}" title="{{2}}"></a>',
                data: ["f13","f12","f14"],
                show: true,
                name: 'name'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'concept_board'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "换手率",
                key: "f8",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "涨跌家数",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'zhangdiejia'
            },
            {
                title: "领跌股票",
                key: "f207",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f209","f208","f207"],
                show: true,
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "涨跌幅",
                key: "f222",
                // suffix: "%",
                color: "f222",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },


            
        ],
        sumcount: 10
            
    },

    hsbklz: {
    fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152,f133,f104,f105",
    head: [
        {
            title: "板块名称",
            key: "f14",
            order: false,
            href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
            data: ["f13", "f12","f14"],
            show: true
        },
        {
            title: "涨跌幅",
            key: "f3",
            // suffix: "%",
            color: "f3",
            order: false,
            fixedkey: 'f152',
            newcb: function(value, fixednum){
                return tools.formatNumberIndexZdf(value, fixednum);
            },
            show: true
        },
        {
            title: "领涨股票",
            key: "f128",
            order: false,
            href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
            data: ["f141","f140","f128"],
            show: true,
            cb: function(that, row){
                return tools.formatNumber3(that);
            }
        },
        {
            title: "涨跌幅",
            key: "f136",
            fixedkey: 'f152',
            newcb: function(value, fixednum){
                return tools.formatNumberIndexZdf(value, fixednum);
            },
            // suffix: "%",
            color: "f136",
            order: false,
            show: true
        },
    ],
    sumcount: 5

    },


    //沪深指数 --上证系列  深圳系列
    hszs: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: false,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Low'
            }
           
        ],
        sumcount: 5


    },

    //沪深指数 --沪深重要指数
    hszs2: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "昨收",
                key: "f18",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: false,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Low'
            }
           
        ],
        sumcount: 50


    },



    //美股市场
    mgsc: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'mgsc_name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            }
           
        ],
        sumcount: 5


    },


    mgsc3: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f11,f62,f128,f136,f115,f152",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'mgsc_name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            }
           
            
           
        ],
        sumcount: 5


    },


    //期货市场--港交所--股票期货
    indexqh :{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f31,f32,f108,f163,f211,f212,f5,f30",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "买入价",
                key: "f31",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "卖出价",
                key: "f32",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "买量",
                key: "f211",
                // suffix: "%",
                color: "red",
                order: true,
                show: true,
                name: 'buycount',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "卖量",
                key: "f212",
                // suffix: "%",
                color: "green",
                order: true,
                show: true,
                name: 'sellcount',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "总量",
                key: "f5",
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Change',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "现量",
                key: "f30",
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Change',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "持仓量",
                key: "f108",
                show:true,
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "日增",
                key: "f163",
                order: true,
                color: "f163",
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "昨结算",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            }
        ],
        sumcount: 20
            
    },

   
    //期货市场--港交所--除了 股票期货  的其他期货
    indexqhNew :{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f31,f32,f108,f163,f211,f212,f5,f30",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                // href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                // data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                // href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                // data: ["f13","f12"],
                show: true
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "买入价",
                key: "f31",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "卖出价",
                key: "f32",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "买量",
                key: "f211",
                // suffix: "%",
                color: "red",
                order: true,
                show: true,
                name: 'buycount',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "卖量",
                key: "f212",
                // suffix: "%",
                color: "green",
                order: true,
                show: true,
                name: 'sellcount',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "总量",
                key: "f5",
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Change',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "现量",
                key: "f30",
                // suffix: "%",
                color: "",
                order: true,
                show: true,
                name: 'Change',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "持仓量",
                key: "f108",
                show:true,
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "日增",
                key: "f163",
                order: true,
                color: "f163",
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "昨结算",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            }
        ],
        sumcount: 20
            
    },



    //中金所
    zjs: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f28,f22,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f28",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f28",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨结",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "买盘(外盘)",
                key: "f34",
                show: true,
                order: true
            },
            {
                title: "卖盘(内盘)",
                key: "f35",
                show: true,
                order: true
            },
            {
                title: "持仓量",
                key: "f108",
                show: true,
                order: true
            }
            
            
        ],
        sumcount: 20


    },


    //期货市场--国际期货
    gjqh: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: true,
                show: true,
                name: 'Low'
            },
            {
                title: "昨结",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: true,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "买盘(外盘)",
                key: "f34",
                show: true,
                order: true
            },
            {
                title: "卖盘(内盘)",
                key: "f35",
                show: true,
                order: true
            },
            {
                title: "持仓量",
                key: "f108",
                show: true,
                order: true
            }
            
            
        ],
        sumcount: 20


    },


   //黄金市场--上海黄金期货
    hjqh: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108,f211,f212",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "代码",
                key: "f12",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: false,
                show: true,
                name: 'Change'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: false,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "今开",
                key: "f17",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Open'
            },
            {
                title: "最高",
                key: "f15",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Hign'
            },
            {
                title: "最低",
                key: "f16",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "_f18",
                order: false,
                show: true,
                name: 'Low'
            },
            {
                title: "昨结",
                key: "f28",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                order: false,
                show: true,
                name: 'PreviousClose'
            },
            {
                title: "成交量(手)",
                key: "f5",
                order: false,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "买量(手)",
                key: "f211",
                // suffix: "%",
                color: "red",
                order: false,
                show: true,
                name: 'buycount',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "卖量(手)",
                key: "f212",
                // suffix: "%",
                color: "green",
                order: false,
                show: true,
                name: 'sellcount',
                cb: function(that, row){
                    return tools.formatNumber(that);
                }
            },
            {
                title: "持仓(手)",
                key: "f108",
                show: true,
                order: false
            }
            
            
        ],
        sumcount: 5


    },



    //开始首页的自选指标  模块
    //全部港股跌幅
    hkstocks_cp_asc: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }

            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            }
            
        ],
        sumcount: 5
            
    },


    //全部港股  成交量
    CommonVolume: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Volume'
            }
        ],
        sumcount: 5
            
    },

     // 成交额
    CommonAmount: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            }
        ],
        sumcount: 5
            
    },


    //沪A涨幅
    sh_a_cp_desc: {
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨跌额",
                key: "f4",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f4",
                order: true,
                show: true,
                name: 'Change'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //沪5分钟涨幅
    AB5MinChangePercent :{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "五分钟涨跌幅",
                key: "f11",
                color: "f11",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //换手率
    ABTurnoverRate:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //量比
    ABVolumeRate:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "量比",
                key: "f10",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber4(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //振幅
    ABAmplitude:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "振幅",
                key: "f7",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'Amplitude'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //成交额
    ABAmount:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //市盈率 
    ABPE:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "市盈率",
                key: "f9",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PERation'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //市净率
    ABPB:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "市净率",
                key: "f23",
                order: true,
                show: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                name: 'PB'
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //流通市值
    ABFlowCapitalValue:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "流通市值",
                key: "f21",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //总市值
    ABMarketValue:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "总市值",
                key: "f20",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //60日涨跌幅
    AB60DayChangePercent:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "60日涨跌幅",
                key: "f24",
                order: true,
                // suffix: "%",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f24",
                show: true
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //年初至今涨跌幅
    AB360DayChangePercent:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "年初至今涨跌幅",
                key: "f25",
                order: true,
                suffix: "%",
                color: "f25",
                show: true
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //涨速
    ABSpeed:{
        fields: "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f26,f22,f28,f11,f62,f128,f136,f115,f152,f34,f35,f108",
        head: [
            {
                title: "名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                name: 'Name',
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "_f18",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "涨速",
                key: "f22",
                order: true,
                suffix: "%",
                color: "f22",
                show: true
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 5
            
    },


    //行业涨跌幅  概念 地域   涨
    BoardsCPAsc:{
        fields: "f1,f2,f3,f14,f12,f13,f62,f128,f136,f152",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "主力净流入",
                key: "f62",
                color: "f62",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberIndex(that);
                },
                show: true
            },
            {
                title: "领涨股",
                key: "f128",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f141","f140","f128"],
                show: true,
                // cb: function(that, row){
                //     return tools.formatNumber3(that);
                // }
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f136",
                // suffix: "%",
                color: "f136",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
        ],
        sumcount: 5
            
    },


    //行业涨跌幅  概念 地域   跌幅
    BoardsCPAscd:{
        fields: "f1,f2,f3,f14,f12,f13,f62,f128,f136,f152,f207,f208,f209,f222",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "主力净流入",
                key: "f62",
                color: "f62",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberIndex(that);
                },
                show: true
            },
            {
                title: "领跌股",
                key: "f207",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f209","f208","f207"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f222",
                // suffix: "%",
                color: "f222",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
        ],
        sumcount: 5
            
    },



    //行业 概念  地域  换手率
    BoardsTurnoverRate: {
        fields: "f1,f2,f3,f8,f14,f12,f13,f62,f128,f136,f152",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "换手率",
                key: "f8",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "领涨股",
                key: "f128",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f141","f140","f128"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f136",
                // suffix: "%",
                color: "f136",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
        ],
        sumcount: 5
            
    },




    //行业 概念 地域 涨速
    BoardsSpeed: {
        fields: "f1,f2,f3,f8,f14,f12,f13,f22,f62,f128,f136,f152",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "涨速",
                key: "f22",
                color: 'f22',
                order: true,
                cb: function(that, row){
                    return tools.formatNumber2(that);
                },
                show: true,
                name: 'TurnoverRate'
            },
            {
                title: "领涨股",
                key: "f128",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f141","f140","f128"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f136",
                // suffix: "%",
                color: "f136",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
        ],
        sumcount: 6
            
    },


    //行业 概念 地域  成交额
    BoardsAmount: {
        fields: "f1,f2,f3,f6,f8,f14,f12,f13,f22,f62,f128,f136,f152",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "成交额",
                key: "f6",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'Amount'
            },
            {
                title: "领涨股",
                key: "f128",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f141","f140","f128"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f136",
                // suffix: "%",
                color: "f136",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
        ],
        sumcount: 6
            
    },


    //行业板块 增仓
    BoardsPosition: {
        fields: "f1,f2,f3,f6,f8,f14,f12,f13,f22,f62,f128,f136,f152,f184,f225,f226",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "增仓占比",
                key: "f184",
                color: "f184",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberZCZB(that);
                },
                show: true,
                name: 'zczb'
            },
            {
                title: "排名",
                key: "f225",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'paim'
            },
            {
                title: "排行变化",
                key: "f226",
                color: "f226",
                order: true,
                cb: function(that, row){
                    return tools.formatPaiming(that);
                },
                show: true,
                name: 'pmchange'
            }
        ],
        sumcount: 6
            
    },


    //大盘资金流向
    MainCaptialFlow: {
        fields: "f1,f2,f3,f14,f12,f13,f62,f128,f136,f152,f184",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "f3",
                order: false,
                show: true
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "主力净流入",
                key: "f62",
                color: "f62",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberIndex(that);
                },
                show: true
            },
            //净占比 字段需要修改
            {
                title: "净占比",
                key: "f184",
                color: "f184",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberJZB(that);
                },
                show: true
            }
        ],
        sumcount: 5
            
    },


    //主力排名
    FFRanking: {
        fields: "f1,f2,f3,f14,f12,f13,f62,f128,f136,f152,f184,f223",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "f3",
                order: false,
                show: true
            },
            //净占比 字段需要修改
            {
                title: "净占比",
                key: "f184",
                color: "f184",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberJZB(that);
                },
                show: true
            },
            {
                title: "排名",
                key: "f223",
                order: true,
                cb: function(that, row){
                    return tools.formatNumber(that);
                },
                show: true,
                name: 'paim'
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            }
            
        ],
        sumcount: 5
            
    },


    //行业资金流
    BoardsCaptialFlow: {
        fields: "f1,f2,f3,f6,f8,f14,f12,f13,f22,f62,f128,f136,f152,f204,f184",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='/center/boardlist.html#boards2-{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13", "f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "主力净流入",
                key: "f62",
                color: "f62",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberIndex(that);
                },
                show: true
            },
            //净占比 字段需要修改
            {
                title: "净占比",
                key: "f184",
                color: "f184",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberJZB(that);
                },
                show: true
            },
            {
                title: "主力流入最大股",
                key: "f204",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f206", "f205","f204"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            }
        ],
        sumcount: 5
            
    },


     //个股资金流 流入和流出
     zijinliuGegu: {
        fields: "f1,f2,f3,f14,f12,f13,f62,f128,f136,f152,f184",
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}' title='{{2}}'></a>",
                data: ["f13","f12","f14"],
                show: true,
                newcb: function(value){
                    return tools.txtPoint(value);
                }
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                color: "f3",
                order: false,
                show: true
            },
            {
                title: "涨跌幅",
                key: "f3",
                // suffix: "%",
                color: "f3",
                order: false,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true
            },
            {
                title: "主力净流入",
                key: "f62",
                color: "f62",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberIndex(that);
                },
                show: true
            },
            //净占比 字段需要修改
            {
                title: "净占比",
                key: "f184",
                color: "f184",
                order: false,
                cb: function(that, row){
                    return tools.formatNumberJZB(that);
                },
                show: true
            }
        ],
        sumcount: 5
            
    },




    //债券市场  可转债比价表
    fullscreenlist: {
        fields: "f1,f152,f2,f3,f12,f13,f14,f227,f228,f229,f230,f231,f232,f233,f234,f235,f236,f237,f238,f239,f240,f241,f242,f26,f243",
        head: [
            {
                title: "序号",
                type: "seq",    // type 表示特殊类型
                show: true,
                name: 'number'

            },
            {
                title: "转债代码",
                key: "f12",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Code'
            },
            {
                title: "转债名称",
                key: "f14",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f2",
                fixedkey: 'f1',
                newcb: function(value, fixednum){
                    return tools.formatNumberFlag(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f3",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                // suffix: "%",
                color: "f3",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "相关链接",
                key: "",
                order: false,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f13","f12"],
                show: true,
                name: 'fullscreen_Links'
            },
            {
                title: "正股代码",
                key: "f232",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f233","f232"],
                show: true,
                name: 'Code'
            },
            {
                title: "正股名称",
                key: "f234",
                order: true,
                href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                data: ["f233","f232"],
                show: true,
                name: 'Name'
            },
            {
                title: "最新价",
                key: "f229",
                fixedkey: 'f1',
                cb: function(that, row){
                    return tools.formatNumberJiaZ(that, 2);
                },
                color: "f230",
                order: true,
                show: true,
                name: 'Close'
            },
            {
                title: "涨跌幅",
                key: "f230",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                color: "f230",
                order: true,
                show: true,
                name: 'ChangePercent'
            },
            {
                title: "转股价",
                key: "f235",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "转股价值",
                key: "f236",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberJiaZ(that, 4);
                },
                show: true,
                name: 'zgValue'
            },
            {
                title: "转股溢价率",
                key: "f237",
                order: true,
                color: "f237",
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true,
                name: 'zgYjb'
            },
            {
                title: "纯债溢价率",
                key: "f238",
                color: "f238",
                order: true,
                fixedkey: 'f152',
                newcb: function(value, fixednum){
                    return tools.formatNumberIndexZdf(value, fixednum);
                },
                show: true,
                name: 'czYjl'
            },
            {
                title: "回售触发价",
                key: "f239",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                show: true,
                name: 'hsCfj'
            },
            {
                title: "强赎触发价",
                key: "f240",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                show: true,
                name: 'qsCfj'
            },
            {
                title: "到期赎回价",
                key: "f241",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                show: true,
                name: 'dqShj'
            },
            {
                title: "纯债价值",
                key: "f227",
                order: true,
                cb: function(that, row){
                    return tools.formatNumberSyl(that);
                },
                show: true,
                name: 'Volume'
            },
            {
                title: "开始转股日",
                key: "f242",
                order: true,
                show: true,
                name: 'shtime',
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "上市日期",
                key: "f26",
                order: true,
                show: true,
                name: 'shtime',
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "申购日期",
                key: "f243",
                order: true,
                show: true,
                name: 'shtime',
                cb: function(that, row){
                    return tools.formatNumber3(that);
                }
            },
            {
                title: "加自选",
                key: "addzixuan",
                order: false,
                // href: "<a href='//quote.eastmoney.com/unify/r/{{0}}.{{1}}'></a>",
                // data: ["f13","f12"],
                show: true,
                name: 'Links'
            }
        ],
        sumcount: 50


    },


    //债券市场  可转债比价表
    txbj: {
        fields: 'f1,f2,f3,f4,f5,f12,f13,f14,f108,f152,f161,f249,f250,f330,f339,f340,f341,f342,f343,f344,f345,f346,f347',
        head: [
            {
                title: "名称",
                key: "f14",
                order: false,
                name: 'gouName',
                tips:"非标准合约第一次调整，行权价增加标识A；第二次调整，行权价增加标识B"
            },
            {
                title: "最新",
                key: "f2",
                order: true,
                name: 'gouZxj'
            },
            {
                title: "涨跌幅",
                key: "f3",
                order: true,
                name: 'gouZdf'
            },
            {
                title: "涨跌额",
                key: "f4",
                order: true,
                name: 'gouZde'
            },
            {
                title: "持仓量",
                key: "f108",
                order: true,
                name: 'gouCcl'
            },
            {
                title: "成交量",
                key: "f5",
                order: true,
                name: 'gouCjl'
            },
            {
                title: "隐含波动率",
                key: "f249",
                order: true,
                name: 'gouYxbd',
                tips:"隐含波动率(Implied Volatility)是将市场上的期权或权证交易价格代入权证理论价格模型<Black-Scholes模型>，反推出来的波动率数值"
            },
            {
                title: "折溢价率",
                key: "f250",
                order: true,
                name: 'gouYxbd',
                tips:'期权到期前，标的物价格需要变动多少百分比才可让期权投资者在到期日实现损益平衡。溢价率衡量期权风险高低，该值越高，实现损益平衡越不容易，投资风险越高'
            },
            {
                title: "行权价",
                key: "f161",
                order: true,
                name: 'xqj',
                tips:"T型报价的行权价以同一行权价格为中心，左侧为认购期权的相关行情，右侧为认沽期权相关行情"
            },
            {
                title: "名称",
                key: "f340",
                order: false,
                name: 'guName',
                tips:"非标准合约第一次调整，行权价增加标识A；第二次调整，行权价增加标识B"
            },
            {
                title: "最新",
                key: "f339",
                order: true,
                name: 'guZxj'
            },
            {
                title: "涨跌幅",
                key: "f341",
                order: true,
                name: 'guZdf'
            },
            {
                title: "涨跌额",
                key: "f342",
                order: true,
                name: 'guZde'
            },
            {
                title: "持仓量",
                key: "f345",
                order: true,
                name: 'guCcl'
            },
            {
                title: "成交量",
                key: "f344",
                order: true,
                name: 'guCjl'
            },
            {
                title: "隐含波动率",
                key: "f346",
                order: true,
                name: 'guYxbd',
                tips:"隐含波动率(Implied Volatility)是将市场上的期权或权证交易价格代入权证理论价格模型<Black-Scholes模型>，反推出来的波动率数值"
            },
            {
                title: "折溢价率",
                key: "f347",
                order: true,
                name: 'guYxbd',
                tips:'期权到期前，标的物价格需要变动多少百分比才可让期权投资者在到期日实现损益平衡。溢价率衡量期权风险高低，该值越高，实现损益平衡越不容易，投资风险越高'
            },
           
        ],
        sumcount: 50


    }


};

/***/ }),

/***/ "./ClientApp/gridlist3/index.order.js":
/*!********************************************!*\
  !*** ./ClientApp/gridlist3/index.order.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
    ChangePercent: 'f3',
    Amount: 'f6',
    Volume: 'f5',
    TurnoverRate: 'f8',
    Speed: 'f22',
    ChangePercent360Day: 'f25',
    ChangePercent60Day: 'f24',
    MarketValue: 'f20',
    FlowCapitalValue: 'f21',
    PB: 'f23',
    PERation: 'f115',
    Amplitude: 'f7',
    VolumeRate: 'f10',
    FiveMinuteChangePercent: 'f11',
    PERation : 'f9',
    zxj:'f229', //最新价
    kzzZdf:'f230', //可转债对应的A股或A股对应的可转债的涨跌幅
    kzzZgj:'f235', //可转债的转股价
    zgValue:'f236',//可转债的转股价值
    zgYjb:'f237',//可转债的转股溢价率
    czYjl:'f238',//可转债的纯债溢价率
    hsCfj:'f239',//可转债的回售触发价
    qsCfj:'f240',//可转债的强赎触发价
    dqShj:'f241',//可转债的到期赎回价
    czjz:'f227',//可转债的纯债价值
    kszgr:'f242',//可转债的开始转股日
    ssrq:'f26',//上市日期
    sgrq:'f243'//可转债的申购日期
}

/***/ }),

/***/ "./ClientApp/gridlist3/newbankuai.js":
/*!*******************************************!*\
  !*** ./ClientApp/gridlist3/newbankuai.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/polyfills/json-polyfill.js */ "./ClientApp/modules/polyfills/json-polyfill.js");
__webpack_require__(/*! ../modules/jquery-plugins/jquery-tooltips/jquery.tooltip */ "./ClientApp/modules/jquery-plugins/jquery-tooltips/jquery.tooltip.js");

var changeNum = __webpack_require__(/*! ../readomNum */ "./ClientApp/readomNum/index.js");
var formatNum = __webpack_require__(/*! ../formatNum */ "./ClientApp/formatNum.js");

var getData = __webpack_require__(/*! ./getData */ "./ClientApp/gridlist3/getData.js");

var paging = __webpack_require__(/*! ./paging */ "./ClientApp/gridlist3/paging.js");


var config = __webpack_require__(/*! ./config */ "./ClientApp/gridlist3/config.js");
var index_order = __webpack_require__(/*! ./index.order.js */ "./ClientApp/gridlist3/index.order.js");


var favstock = __webpack_require__(/*! ../favstock */ "./ClientApp/favstock/index.js");
var tools = __webpack_require__(/*! ../modules/tools.js */ "./ClientApp/modules/tools.js");


__webpack_require__(/*! ./css/square.css */ "./ClientApp/gridlist3/css/square.css");  //表格样式


var table_refresh_cd;

function bankuai(ops,mdName) {
    this.config = config[ops.type];
    this.mdName = mdName || "";
    var head = this.config.head;
    this.tableHead = head;

    var dft = {
        container: "",
        orderDur: false,      //排序方向（正序填0,false ; 倒序填1, true，默认为1。）
        index: 1,
        pagesize: this.config.sumcount
    }
    this.ops = $.extend(dft, ops);
    // this.ops = dft;
    this.page = new paging();

    this.codearr = [];

    this.mycontent = '';
    this.myfs = '';

    //设置我的自选数据
    this._myFavor_list = null;

}

// bankuai.prototype.Bankuai = function(content, fs) {

bankuai.prototype.Bankuai = function(content, fs, codes) {
    try{
        clearInterval(table_refresh_cd)
    }
    catch(error){
    }    
    //   console.log('bankuai 进来了')
    //   console.log(fs)
        this.fs = fs;
        this.content = content
        this.codes = codes
     //板块模块
        this.getBankuai(content, fs, codes);

        // this.pageClick(content, fs);
        if(this.ops.thclick != false) {
            $('.dataTable thead th').css('cursor', 'default');
            this.addEvent(content, fs, codes);
        }
       

        //select
        this.addEventSelect(content, fs, codes);


        //自选股 添加
        this.add(content);

        //删除
        this.del(content);
}

/**
 * 设置自刷
 * @param {*} refresh_time 自刷时间 秒
 */
bankuai.prototype.refreshInit = function(refresh_time){
  //console.info('设置自刷')
  var _this = this
    try{
        clearInterval(table_refresh_cd)
    }
    catch(error){
    }   
  table_refresh_cd = setInterval(function(){
      _this.getBankuai(_this.content, _this.fs, _this.codes)
  }, refresh_time * 1000);
}


bankuai.prototype.pageClick = function(content, fs, sumpage,codes) {
    //paging 的点击事件
    var that = this;
    that.page.onPage = function (index) {
        that.ops.index = index;

        if(index > sumpage) {
            that.ops.index = sumpage;
        }
        that.getDataBank(content, fs, codes);
            
    }
    

}



bankuai.prototype.hoverFn = function() {
    //默认
    $("#digest-industry").show();
    $("#digest-concept").hide();
    $("#digest-region").hide();

    $("#digest-industry").hover(function() {
        $("#digest-industry").show();
        $("#digest-concept").hide();
        $("#digest-region").hide();
    })

    $("#digest-concept").hover(function() {
        $("#digest-industry").hide();
        $("#digest-concept").show();
        $("#digest-region").hide();
    })


    $("#digest-region").hover(function() {
        $("#digest-industry").hide();
        $("#digest-concept").hide();
        $("#digest-region").show();
    })

}



bankuai.prototype.getBankuai = function(content, fs, codes) {
    var that = this;

    //判断是否要倒序
    if(this.getParam('sr') == 0 || this.getParam('sr') == 1) {
        // console.log('倒序')
        this.ops.orderDur = true;
    }

    //是否正序
    if(this.getParam('sr') == -1) {
        this.ops.orderDur = false;
    }

    //获取url上面的 需要 排序字段  that.ops
    if(that.getParam('st')) {
        that.ops.order = index_order[that.getParam('st')];
    }


    //增加板块的 首页跳转 第一次默认加载
    var url = window.location.href;
    var hu_plag = url.split("#")[1];
    if(hu_plag == 'region_board' || hu_plag == 'concept_board' || hu_plag == 'industry_board') {
        // console.info(that.ops.orderDur)
        if(that.ops.orderDur == false) {
            that.tableHead[10].title = '领涨股票';  //修改头部
            that.tableHead[10].key = 'f128';
            //涨跌幅
            that.tableHead[11].key = 'f136';
            that.tableHead[11].color = 'f136';
            that.createHead(content, fs);
            that.getDataBank(content, fs, codes);
        }
        if(that.ops.orderDur == true) {
            that.tableHead[10].title = '领跌股票';
            that.tableHead[10].key = 'f207';
            that.tableHead[10].data =["f209","f208"];
            //涨跌幅
            that.tableHead[11].key = 'f222';
            that.tableHead[11].color = 'f222';
            that.createHead(content, fs);
            that.getDataBank(content, fs, codes);


        }


    }else {

    //第一次默认展示  自选指标  首页跳转链接
    var arr = {
        'PB': '市净率',
        'MarketValue': '总市值',
        'FlowCapitalValue': '流通市值',
        'FlowCapitalValue': '流通市值',
        'ChangePercent60Day': '60日涨跌幅',
        'ChangePercent360Day': '年初至今涨跌幅',
        'Speed': '涨速',
        'FiveMinuteChangePercent': '5分钟涨跌',
        'VolumeRate': '量比'
    }
    if(that.getParam('st')) {
            for(var i=0;i< that.tableHead.length; i++) {
                    var title =  that.tableHead[i].title;
                    //先全部置为false
                    if(title == '总市值' || title == '流通市值' || title == '60日涨跌幅' || title == '年初至今涨跌幅' || title == '涨速' || title == '5分钟涨跌' || title == '量比') {
                        that.tableHead[i].show = false;
                    }
                    if(title == arr[that.getParam('st')]) {
                        that.tableHead[i].show = true;
                    }
            }
                
            //重新渲染表格
            that.createHead(content, fs);
            that.getDataBank(content, fs, codes);
        
    }else {

        that.createHead(content, fs);
        that.getDataBank(content, fs, codes);
       
    }

}


    
    

}


bankuai.prototype.createHead = function (content, fs) {
    var head = this.tableHead;
    // console.log('w d head')
    // console.log(head)

    var tr = $('<tr role="row"></tr>');
    for (var i = 0; i < head.length; i++) {
        var item = head[i];

        if(item) {
        

        if(item.show == true) {
            // console.log(item.key, this.ops.order);

            if(item.title == '序号' || item.title == '加自选' || item.order == false) {
               var th = $('<th style="" class="listview-col-'+item.name +' sorting_disabled" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span style="color:#333">'+item.title+'</span><b class="icon"></b></th>');
            } 
            else if(item.key == this.ops.order) { 
                if(this.ops.orderDur == 1) {

                    //区分可转债比价页面
                    if(item.name == 'zgValue') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_asc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="转股价值=正股价/转股价*100" class="tooltip-f">转股价值<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'zgYjb') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_asc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="转股溢价率 = （转债最新价 – 转股价值）/ 转股价值" class="tooltip-f">转股溢价率<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'czYjl') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_asc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="纯债溢价率 = （转债最新价 – 纯债价值）/ 纯债价值" class="tooltip-f">纯债溢价率<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'hsCfj') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_asc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="满足回售触发条件时，可转债持有人有权将其持有的可转债全部或部分按债券面值加上当期应计利息的价格回售给公司" class="tooltip-f">回售触发价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'qsCfj') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_asc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="满足赎回触发条件时，公司有权按照债券面值加当期应计利息的价格赎回全部或部分未转股的可转债" class="tooltip-f">强赎触发价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'dqShj') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_asc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="公司有权以债券发行说明书中规定的到期赎回价买回其发行在外债券" class="tooltip-f">到期赎回价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    
                    else {
                       var th = $('<th style="" class="listview-col-' + item.name +' sorting_asc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>'+item.title+'</span><b class="icon"></b></th>');
                    }

                }  
                
                else {

                    if(item.name == 'zgValue') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_desc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="转股价值=正股价/转股价*100" class="tooltip-f">转股价值<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'zgYjb') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_desc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="转股溢价率 = （转债最新价 – 转股价值）/ 转股价值" class="tooltip-f">转股溢价率<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    } 
                    else if(item.name == 'czYjl') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_desc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="纯债溢价率 = （转债最新价 – 纯债价值）/ 纯债价值" class="tooltip-f">纯债溢价率<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'hsCfj') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_desc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="满足回售触发条件时，可转债持有人有权将其持有的可转债全部或部分按债券面值加上当期应计利息的价格回售给公司" class="tooltip-f">回售触发价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'qsCfj') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_desc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="满足赎回触发条件时，公司有权按照债券面值加当期应计利息的价格赎回全部或部分未转股的可转债" class="tooltip-f">强赎触发价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    else if(item.name == 'dqShj') {
                        var th = $('<th style="" class="listview-col-' + item.name +' sorting_desc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="公司有权以债券发行说明书中规定的到期赎回价买回其发行在外债券" class="tooltip-f">到期赎回价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
                    }
                    

                    else {
                      var th = $('<th style="" class="listview-col-' + item.name +' sorting_desc" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>'+item.title+'</span><b class="icon"></b></th>');
                   }
               
                }

            //    $(".tooltip").hide();
               
           } 
           //可转债比价
           else if(item.name == 'zgValue') {
              var th = $('<th style="" class="listview-col-' + item.name +' sorting" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="转股价值=正股价/转股价*100" class="tooltip-f">转股价值<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
           }
           else if(item.name == 'zgYjb') {
            var th = $('<th style="" class="listview-col-' + item.name +' sorting" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="转股溢价率 = （转债最新价 – 转股价值）/ 转股价值" class="tooltip-f">转股溢价率<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
           }
           else if(item.name == 'czYjl') {
            var th = $('<th style="" class="listview-col-' + item.name +' sorting" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="纯债溢价率 = （转债最新价 – 纯债价值）/ 纯债价值" class="tooltip-f">纯债溢价率<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
           }
           else if(item.name == 'hsCfj') {
            var th = $('<th style="" class="listview-col-' + item.name +' sorting" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="满足回售触发条件时，可转债持有人有权将其持有的可转债全部或部分按债券面值加上当期应计利息的价格回售给公司" class="tooltip-f">回售触发价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
           }
           else if(item.name == 'qsCfj') {
            var th = $('<th style="" class="listview-col-' + item.name +' sorting" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="满足赎回触发条件时，公司有权按照债券面值加当期应计利息的价格赎回全部或部分未转股的可转债" class="tooltip-f">强赎触发价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
           }
           else if(item.name == 'dqShj') {
            var th = $('<th style="" class="listview-col-' + item.name +' sorting" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + '<span  title="公司有权以债券发行说明书中规定的到期赎回价买回其发行在外债券" class="tooltip-f">到期赎回价<em class="help-icon"></em></span>' + '</span><b class="icon"></b></th>');
           }

           else {
              var th = $('<th style="" class="listview-col-' + item.name +' sorting" rowspan="1" colspan="1" aria-label="'+ item.title +'"><span>' + item.title + '</span><b class="icon"></b></th>');
           }
        
            th.attr("data-key", item.key);
            
            tr.append(th)

        }


    }

        
    }
    $(content).find("table thead").html("");
    $(content).find("table thead").append(tr)
    // var thead1 = $("<thead></thead>").append(tr)
    // $(content).find("table").html("").append(thead1);

    // this.table.find("thead").html("").append(tr);      background-color: #fff;font-weight: bold;border: none;
}


bankuai.prototype.getDataBank = function (content, fs, codes) {
   
    var that = this;
    var ops = this.ops;
    var config = this.config;
    //增加首页的跳转问题
    // console.log(ops);
    // console.log(that.getParam('st'))
    // console.log(that.getParam('sr'))


    var par = {
        fid: ops.order,
        po: ops.orderDur ? "0" : "1",
        pn: ops.index,
        pz: config.sumcount,
        fs: fs,
        fields: config.fields
       
    }
    getData(par, function (msg) {
        // console.log('getData  进来了')
        var data = msg.data;
        // console.log(data)
        if(data){
            var list = data.diff;

            var total = data.total;
            var sumpage = Math.ceil(total / ops.pagesize);
            ops.sumPage = sumpage;
    
            if (sumpage > 1) {
                var page = that.page;
                page.setOps({
                    index: ops.index,
                    sumPage: ops.sumPage
                });

                that.pageClick(content, fs, sumpage, codes);
    
                $(".dataTables_paginate").show();
            }else {
                //若是不足以分页 将分页隐藏
                $(".dataTables_paginate").hide();
            }
    
            that.setBody(content, list, codes);

        } else {

            //若数据为空 则将表格置为空
            list = [];
            $(".dataTables_paginate").hide();
            that.setBody(content, list, codes)

        }
       
    });
}


bankuai.prototype.addEvent = function (content, fs, codes) {
    var that = this;
    // console.log('that.ops.orderDur', that.ops.orderDur)
    // console.log(fs)
    //解除事件绑定
    $(content).find("thead").off();

    $(content).find("thead").on("click", "th", function () {
        var key = $(this).attr("data-key");

        //板块 领涨股票和相关涨跌幅 不排序
        if(key == 'f128' || key == 'f136'){
            return false
        }

        //加自选不可点击
        if (key && key!= 'addzixuan') {
            if (key == that.ops.order) {
                that.ops.orderDur = !that.ops.orderDur;
            } else {
                that.ops.order = key;
                that.ops.orderDur = true;
            }

            //点击  增加板块的涨跌幅排序问题
            var url = window.location.href;
            var hu_plag = url.split("#")[1];
            if(hu_plag == 'region_board' || hu_plag == 'concept_board' || hu_plag == 'industry_board') {
                // console.log('region_board');
                // console.log(that.ops.orderDur);
                // console.log(that.tableHead)
                // console.log(that.config)

                if(that.ops.orderDur == false) {
                    that.tableHead[10].title = '领涨股票';  //修改头部
                    that.tableHead[10].key = 'f128';
                    that.tableHead[10].data =["f141","f140"];
                    //涨跌幅
                    that.tableHead[11].key = 'f136';
                    that.tableHead[11].color = 'f136';
                    that.createHead(content, fs);
                    that.getDataBank(content, fs, codes);
                }
                if(that.ops.orderDur == true) {
                    that.tableHead[10].title = '领跌股票';
                    that.tableHead[10].key = 'f207';
                    that.tableHead[10].data =["f209","f208"];
                    
                    //涨跌幅
                    that.tableHead[11].key = 'f222';
                    that.tableHead[11].color = 'f222';
                    that.createHead(content, fs);
                    that.getDataBank(content, fs, codes);
                }

            }else {
                that.createHead(content, fs);
                that.getDataBank(content, fs, codes);
            }

            
        }

        


    });
}


bankuai.prototype.addEventSelect = function (content, fs) {
    var that = this;


    $('#custom-fields').change(function(){ 
        var p2 = $(this).val();//这就是selected的值 
        var arr = {
            'PB': '市净率',
            "JLV":"净利润",
            'MarketValue': '总市值',
            'FlowCapitalValue': '流通市值',
            'ChangePercent60Day': '60日涨跌幅',
            'ChangePercent360Day': '年初至今涨跌幅',
            'Speed': '涨速',
            'FiveMinuteChangePercent': '5分钟涨跌',
            'VolumeRate': '量比'
        }
        for(var i=0;i< that.tableHead.length; i++) {
            var title =  that.tableHead[i].title;
            //先全部置为false
            if(title == '市净率' || title == '总市值' || title == '流通市值' || title == '60日涨跌幅' || title == '年初至今涨跌幅' || title == '涨速' || title == '5分钟涨跌'|| title == '量比' || title=="净利润") {
                that.tableHead[i].show = false;
            }
            if(title == arr[p2]) {
                that.tableHead[i].show = true;
                that.config.selectVal = p2;
            }
        }


        //重新渲染表格
        that.createHead(content, fs);
        that.createBody(content, fs);


    });

    

}


bankuai.prototype.setBody = function (content, list, codes) {
    var that = this;
    that.body = list;  //纯列表的数据  没有加自选的选项
    
   
    if (that.ops.zixuan == true) {
        // console.log('获取加自选的数据');
        // window._myFavor_list

        //若传入第三个参数的话  就表示之前请求过自选List ==codes  不用再请求
        if(codes) {
            ShowZixuan(codes);

        }else {
            var data1 = favstock.getDefaultStocks();
            data1.then(function (res) {
                ShowZixuan(res);
                
            });

    }



    function ShowZixuan(res) {
        if(res) {
                
            that.zixuanList = res.split(',');

            //遍历之前的数据 将加自选的数据 添加上去
            for(var i = 0; i < that.body.length; i++) {
                var item = that.body[i];
                var makScode = item.f13 + '.' + item.f12;
                if(item.f13 == "128"){
                    makScode = '116.'+ item.f12;
                }
                var isZisuan = false;
        
                if(that.in_array(makScode, that.zixuanList)) {
                    isZisuan = true;
                } else {
                    isZisuan = false;
                }
                item.isZisuan = isZisuan;
            }

            // console.log(that.body);
            that.createBody(content);

        }

    }


  }


    that.createBody(content);
}


//加自选
bankuai.prototype.add = function(content) {
    var tabcontent = content+ '-table';

    $(tabcontent).on('click', '.addzx', function() {
        console.log('add')
        var _that = $(this);
        var myscode = $(this).attr("data-myscode");
        // console.log('myscode', myscode)
        var data = favstock.add(myscode);
        data.then(function(res) {
            // console.log('add: ' + res)
            if(res == true) {
                _that.addClass('hide');
                _that.removeClass('show');
                _that.siblings('.delzx').addClass('show');
                _that.siblings('.delzx').removeClass('hide');

            }
        })
    });


    //增加首页的加自选功能
    $("#optional-blocks-wrapper").off();
    $("#optional-blocks-wrapper").on('click', '.addzx', function(e) {
        var _that = $(this);
        var myscode = $(this).attr("data-myscode");
        // console.log('myscode', myscode)
        var data = favstock.add(myscode);
        data.then(function(res) {
            // console.log('add: ' + res)
            if(res == true) {
                _that.addClass('hide');
                _that.removeClass('show');
                _that.siblings('.delzx').addClass('show');
                _that.siblings('.delzx').removeClass('hide');

            }
        })

        e.stopPropagation();//停止事件冒泡
       
        
    });

}


//删自选
bankuai.prototype.del =  function(content) {
    var tabcontent = content+ '-table'
    $(tabcontent).on('click', '.delzx', function() {
        // console.log('del')   #table_wrapper-table
        var _that = $(this);
        var myscode = $(this).attr("data-myscode");
        var data = favstock.del(myscode);
        data.then(function(res) {
            _that.addClass('hide');
            _that.removeClass('show');
            _that.siblings('.addzx').addClass('show');
            _that.siblings('.addzx').removeClass('hide');
        })
    });

    //增加首页的删自选
    $("#optional-blocks-wrapper").on('click', '.delzx', function() {
        // console.log('del')   #table_wrapper-table
        var _that = $(this);
        var myscode = $(this).attr("data-myscode");
        var data = favstock.del(myscode);
        data.then(function(res) {
            _that.addClass('hide');
            _that.removeClass('show');
            _that.siblings('.addzx').addClass('show');
            _that.siblings('.addzx').removeClass('hide');
        })
    })

}



//科创板行情数据---加自选 数据
bankuai.prototype.getKcbHQData = function (secides) {

    var url = "//push2.eastmoney.com/api/qt/ulist/get?";

    var pars = {
        secids: secides,
        pz: 20,
        pi: 0,
        ut: 'bd1d9ddb04089700cf9c27f6f7426281',
        po: 1,
        fields: 'f2,f3,f4,f5,f6,f12',
        fltt: 2,
        invt: 2,
        np: 1
    }

    return $.ajax({
        type: "get",
        data: pars,
        url: url,
        dataType: "jsonp",
        jsonp: "cb"

    });

}


//获取url上面的参数
bankuai.prototype.getParam = function (name) {
    var urlpara = location.search;
    var par = {};
    if (urlpara != "") {
        urlpara = urlpara.substring(1, urlpara.length);
        var para = urlpara.split("&");
        var parname;
        var parvalue;
        for (var i = 0; i < para.length; i++) {
            parname = para[i].substring(0, para[i].indexOf("="));
            parvalue = para[i].substring(para[i].indexOf("=") + 1, para[i].length);
            par[parname] = parvalue;
        }
    }
    if (typeof (par[name]) != "undefined") {
        return par[name];
    } else {
        return null;
    }
}


bankuai.prototype.formatData = function () {
    var list = this.body;

    // 这些字段会根据f1 进行缩放
    var fks = ["f2", "f4", "f15", "f16", "f17", "f18", "f28", "f31", "f32"];
    // 这些字段会固定放大100倍
    var fk100 = ["f3", "f7", "f8", "f9", "f10", "f11", "f22", "f23", "f24", "f25", "f33"];
    // 这些字段会根据f152 进行缩放
    var fk152 = ["f115"];

    var fksstr = fks.join(",") + ",";
    var fk100str = fk100.join(",") + ",";
    var fk152str = fk152.join(",") + ",";

    for (var i = 0, len = list.length; i < len; i++) {
        var item = list[i];
        var f1 = Math.pow(10, item.f1);
        for (var key in item) {
            if (fksstr.indexOf(key + ",") > -1) {
                item[key] = (item[key] / f1).toFixed(item.f1);
            }
            if (fk100str.indexOf(key + ",") > -1) {
                item[key] = (item[key] / 100).toFixed(2);
            }
            if (fk152str.indexOf(key + ",") > -1) {
                var sf = Math.pow(10, item.f152)
                item[key] = (item[key] / sf).toFixed(item.f152);
            }
        }
    }

}


bankuai.prototype.createBody = function (content) {
    var that = this;
    var cont = content + '-table';
    var contbody = $(cont).find("tbody");

    //分两种情况 可传table外面的div id  但要求tableid = div id + '-table'   第二种情况可直接传table的id
    if(contbody.length == 0) {
        contbody = $(content).find("tbody");
    }
    if(that.config.selectVal && $("#custom-fields").length){
        $("#custom-fields").val(that.config.selectVal)
    }

    var body = $(contbody);

    body.html("");
    var list = this.body;
    var head = this.tableHead;

    for (var i = 0; i < list.length; i++) {
        var item = list[i];

        var tr = $("<tr></tr>");
        if (i % 2 == 0) {
            tr.addClass("odd")
        } else {
            tr.addClass("even")
        }
        
        for (var j = 0; j < head.length; j++) {
            var row = head[j];
            // console.log(row)

            if(row) {

            if(row.show == true) {
            var sp = "";
            var td = $("<td></td>");
            if(row.title == '名称' || row.title == '领涨股' || row.title == '领跌股' || row.title == '主力流入最大股') {
                var td = $("<td class='mywidth'></td>");
            }
            if(row.title == '板块名称' || row.title == '领涨股票' || row.title == '领跌股票') {
                var td = $("<td class='mywidth3'></td>");

            }
            if(row.title == '名称' && row.name == 'usindex_name') {
                if(item.f107 == 5) {
                    var td = $("<td class='mywidth' style='text-align:left;padding-left:5px;'><em class='circle' title='已收盘'>●</em></td>");
                }else if(item.f107 == 3) {
                    var td = $("<td class='mywidth' style='text-align:left;padding-left:5px;'><em class='circle' title='盘中休息'>●</em></td>");
                }
                else {
                    var td = $("<td class='mywidth' style='text-align:left;padding-left:5px;'><em class='trading' title='交易中'>●</em></td>");
                }
                
            }
            if(row.title == '最新价' || row.title == '涨跌幅') {
                var td = $("<td class='mywidth2'></td>");
            }
            if(row.title == '相关链接' && row.name == 'Links') {
                var td = $('<td class=" listview-col-Links"><a href="http://guba.eastmoney.com/list,'+ item.f12 +'.html">股吧</a>&nbsp;<a href="http://data.eastmoney.com/zjlx/'+ item.f12 +'.html">资金流</a>&nbsp;<a href="http://data.eastmoney.com/stockdata/'+ item.f12 +'.html">数据</a></td>');
            }
            //abgu
            if(row.title == '相关链接' && row.name == 'Links_abgu') {
                var td = $('<td class=" listview-col-Links"><a href="http://guba.eastmoney.com/list,'+ item.f201 +'.html">股吧</a>&nbsp;<a href="http://data.eastmoney.com/zjlx/'+ item.f201 +'.html">资金流</a>&nbsp;<a href="http://data.eastmoney.com/stockdata/'+ item.f201 +'.html">数据</a></td>');
            }

            if(row.title == '相关链接' && row.name == 'neeq_stocks') {
                var td = $('<td class=" listview-col-neeq_stocks"><a href="http://guba.eastmoney.com/list,'+ item.f12 +'.html">股吧</a>&nbsp;<a href="http://so.eastmoney.com/Web/s?keyword='+ item.f14 +'">资讯</a></td>');
            }

            if(row.title == '相关链接' && row.name == 'hk_stocks') {
                if((item.f19 == 3 || item.f19 == 4)) {
                    var td = $('<td class=" listview-col-Links"><a href="http://guba.eastmoney.com/list,hk'+ item.f12 +'.html">股吧</a>&nbsp;<a href="http://so.eastmoney.com/Web/s?keyword='+ item.f14 +'">资讯</a>&nbsp;<a href="http://emweb.securities.eastmoney.com/PC_HKF10/CoreReading/index?type=web&code='+ item.f12 +'&color=b">档案</a></td>');
                }else {
                    var td = $('<td class=" listview-col-Links">&nbsp;<a href="http://so.eastmoney.com/Web/s?keyword='+ item.f14 +'">资讯</a>&nbsp;</td>');
                }
            }
            if(row.title == '相关链接' && row.name == 'concept_board') {
                var td = $('<td class=" listview-col-Links"><a href="http://guba.eastmoney.com/list,'+ item.f12 +'.html">股吧</a>&nbsp;<a href="http://data.eastmoney.com/bkzj/'+ item.f12 +'.html">资金流</a>&nbsp;<a href="http://data.eastmoney.com/report/'+ (item.f12).replace('BK','') +'yb.html">研报</a></td>');
            }

            
            if(row.title == '相关链接' && row.name == 'fullscreen_Links') {
                var td = $('<td class=" listview-col-Links"><a href="http://guba.eastmoney.com/list,'+ item.f12 +'.html">股吧</a>&nbsp;<a href="http://data.eastmoney.com/kzz/detail/'+ item.f12 +'.html">详细</a>&nbsp;</td>');
            }

            if(row.title == '相关链接' && row.name == 'fundcloseend_Links') {
                var td = $('<td class=" listview-col-Links"><a href="http://fund.eastmoney.com/'+ item.f12 +'.html">估算图</a>&nbsp;<a href="http://guba.eastmoney.com/list,of'+ item.f12 +'.html">基金吧</a>&nbsp;<a href="http://fund.eastmoney.com/f10/'+ (item.f12) +'.html">档案</a></td>');
            }
            if(row.title == '涨跌家数' && row.name == 'zhangdiejia') {
                var td = $('<td><span style="color: red;">'+item['f104']+'</span>/<span style="color: green;">'+item['f105']+'</span></td>');
            }

            if(row.title == '买量' && row.name == 'buycount') {
                var td = $('<td style="color: red;"></td>');
            }
            if(row.title == '上涨家数') {
                var td = $('<td style="color: red;"></td>');
            }
            if(row.title == '下跌家数') {
                var td = $('<td style="color: green;"></td>');
            }
            if(row.title == '卖量' && row.name == 'sellcount') {
                var td = $('<td style="color: green;"></td>');
            }

            if(row.title == '港股吧') {
                var td = $('<td class=" listview-col-Links"><a href="http://guba.eastmoney.com/list,hk'+ item.f12 +'.html">港股吧</a></td>');
            }

            if(row.title == 'A股吧') {
                var td = $('<td class=" listview-col-Links"><a href="http://guba.eastmoney.com/topic,'+ item.f191 +'.html">A股吧</a></td>');
            }


            if(row.title == '名称' && row.name == 'mgsc_name') {
                var td = $("<td class='text_overflow' title='"+item.f14+"'></td>");
            }
           
            var mycode1 = item.f13 + '.' + item.f12;
            // 128市场不支持加自选
            if(item.f13 == "128"){
                mycode1 = '116.'+ item.f12;
            }
            if(row.title == '加自选') {
                if(item.isZisuan == false) {
                    var td = $('<td class=" listview-col-add"><a class="addzx show" target="_self" onclick="return false;" href="javascript:void(0);" data-myscode='+ mycode1 +'></a><a class="delzx hide" target="_self" onclick="return false;" href="javascript:void(0);" data-myscode='+ mycode1 +'></a></td>');
                } else if(item.isZisuan == true) {
                    var td = $('<td class=" listview-col-add"><a class="addzx hide" target="_self" onclick="return false;" href="javascript:void(0);" data-myscode='+ mycode1 +'></a><a class="delzx show" target="_self" onclick="return false;" href="javascript:void(0);" data-myscode='+ mycode1 +'></a></td>');
                } else {
                    var td = $('<td class=" listview-col-add"><a class="addzx show" target="_self" onclick="return false;" href="javascript:void(0);" data-myscode='+ mycode1 +'></a><a class="delzx hide" target="_self" onclick="return false;" href="javascript:void(0);" data-myscode='+ mycode1 +'></a></td>');

                }
            }

            // 新三板添加市场层级和定价方式 标识
            if(row.title === "名称" && row.signIcon === "sanban"){
                var signIcon = "";

                if (item.f111 & 256) { 
                    // 基础层
                    signIcon += '<i class="icon_sb jc"></i>'
                 } else if (item.f111 & 512) {
                    //  是创新层 
                    signIcon+= '<i class="icon_sb chuang"></i>'
                }else if (item.f111 & 2048) { 
                    // 是精选层
                    signIcon+= '<i class="icon_sb jing"></i>'
                 }


                if (item.f111 & 32) { 
                    // 是三板做市 
                    signIcon+= '<i class="icon_sb shi"></i>'
                 }else if (item.f111 & 64) { 
                    //  是连续竞价
                    signIcon+= '<i class="icon_sb lian"></i>'
                  }
                if (item.f111 & 128) { 
                    // 是集合竞价
                    signIcon+= '<i class="icon_sb jh"></i>'
                 }
                 var td = $('<td style="text-align:left;padding-left:6px;"><span class="signIcon">'+signIcon+'</span></td>');
            }


            if (row.type) {
                if (row.type == "seq") {
                    td.text((i + 1)+ (that.ops.pagesize*(this.ops.index -1)))
                }
            } else {
                var txt = "";
                if (row.key) {
                    txt = item[row.key];
                    if(row.title == '名称'){
                        txt = tools.txtLeft(txt, 12, true)
                    }
                }

                if (row.cb) {
                    txt = row.cb(item[row.key], item);
                }

                if(row.newcb) {
                    txt = row.newcb(item[row.key], item[row.fixedkey]);
                }

                if (row.suffix) {
                    txt += row.suffix;
                }

                if (row.color !== undefined) {
                    sp = $("<span></span>");
                    var c = row.color;
                    var f1, f2;
                    if (typeof c == "number") {
                        f1 = item[row.key];
                        f2 = c;
                    } else if (c.indexOf("_") == 0) {
                        f1 = item[row.key];
                        f2 = item[c.substr(1)];
                    }
                    else {
                        f1 = item[c];
                        f2 = 0;
                    }
                    var diff = f1 - f2;
                    if (diff > 0) {
                        sp.addClass("red")
                    } else if (diff < 0) {
                        sp.addClass("green")
                    }
                    else {
                        sp.addClass("fair")
                    }
                }

                // //国际贵金属现货去除链接
                // if(that.mdName === "nobalmetal_spotgoods"){
                //     row.href = "";
                // }

                if (row.href) {
                    // console.info(row.href)
                    var data = row.data;
                    var href = row.href;

                    for (var ii = 0; ii < data.length; ii++) {
                        var reg = RegExp("\\{\\{" + ii + "\\}\\}");

                        var newcode = item[data[ii]];

                        //处理延时港股市场问题
                        if(newcode == '128') {
                            newcode = '116'
                        }
                        href = href.replace(reg, newcode);

                        
                    }
                   
                    
                    sp = $(href);
                }

                if (sp) {
                    sp.html(txt)
                    td.append(sp);

                    //给欧洲斯托克50
                    if(row.wenhaoFlag && item[row.key] == '欧洲斯托克50') {
                        td.append($(row.wenhaoFlag));

                    }
                } else {
                    td.html(txt);
                }
            }
            tr.append(td);

            }

        }
            
        }
        body.append(tr);
    }


}


bankuai.prototype.in_array = function(stringToSearch, arrayToSearch) {
    for (s = 0; s < arrayToSearch.length; s++) {
     thisEntry = arrayToSearch[s].toString();
     if (thisEntry == stringToSearch) {
      return true;
     }
    }
    return false;
}


module.exports = bankuai;

/***/ }),

/***/ "./ClientApp/gridlist3/paging.js":
/*!***************************************!*\
  !*** ./ClientApp/gridlist3/paging.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {



function paging(ops) {
    this.ops = {
        container: ".dataTables_paginate",
        sumPage: 20,
        index: 10
    }

    this.ops = $.extend(this.ops, ops);
    this.box = $(this.ops.container);
    this.onPage = function(){}
    
    // this.init();
    // this.create();

    this.addEvn();
}

paging.prototype.init = function () {
    this.box.html("");
    var index = this.ops.index;
    
    var arr = [
        {
            title: index,
            index: index,
            cls: "current"
        }
    ];

    var index1 = index;
    var len = index - 3;
    while (--index1 > len) {
        if (index1 > 0) {
            arr.unshift({
                title: index1,
                index: index1
            });
        }
    }
    if (index1 >= 2) {
        arr.unshift({
            title: "…",
            index: ""
        });
    }
    if (index1 >= 1) {
        arr.unshift({
            title: 1,
            index: 1
        });
    }
    arr.unshift({
        title: "上一页",
        index: (index - 1) > 0 ? (index - 1) : 1
    });


    var sumPage = this.ops.sumPage;
    var index2 = index;
    len = index + 3;
    if (index2 > sumPage) {
        index2 = sumPage;
    }
    while (++index2 < len) {
        if (index2 <= sumPage) {
            arr.push({
                title: index2,
                index: index2
            });
        }
    }
    if (index2 <= sumPage - 1) {
        arr.push({
            title: "…",
            index: ""
        });
    }

    if (index2 <= sumPage) {
        arr.push({
            title: sumPage,
            index: sumPage
        });
    }
    arr.push({
        title: "下一页",
        index: (index + 1) > sumPage ? sumPage : (index + 1)
    });
    this.btns = arr;
}


paging.prototype.setOps = function(ops){
    this.ops = $.extend(this.ops, ops);

    if (this.ops.sumPage > 1) {
        this.init();
        this.create();
    }
}


paging.prototype.addEvn = function() {
    var that = this;
    this.box.off();
    this.box.on("click", ".paginate_button", function(){
        var index = $(this).attr("data-index");
        if (index) {
            that.onPage(index / 1);
        }

        return false
    });

    //增加go点击事件
    this.box.on("click", ".paginte_go", function() {
        var index = $(".paginate_input").val();
        if (index) {
            that.onPage(index / 1);
        }

    });

}


paging.prototype.create = function () {
    var box = this.box;
    box.html("");

    var arr = this.btns;

    var paginate_page;
    for (var i = 0, len = arr.length; i < len; i++) {
        var item = arr[i];

        if (i == 0) {
            var previous = $('<a class="previous paginate_button">上一页</a>')
            previous.attr("data-index", item.index);
            if (item.index == 1 && arr[item.index].cls) {
                previous.addClass("disabled")
            }
            box.append(previous);
        } else if (i == len - 1) {
            var next = $('<a class="next paginate_button">下一页</a>');
            next.attr("data-index", item.index);
           
            // if (item.index === this.ops.sumPage) {
            //     next.addClass("disabled")
            // }
            if (this.ops.index === this.ops.sumPage) {
                next.addClass("disabled")
            }

            box.append(next);
        } else {
            if (!paginate_page) {
                paginate_page = $("<span></span>").addClass("paginate_page");
                box.append(paginate_page);
            }
            var pbtn = $('<a class="paginate_button"></a>');
            pbtn.text(item.title);
            pbtn.attr("data-index", item.index);
            if (item.cls) {
                pbtn.addClass(item.cls);
            }

            //增加 判断若为... 设为不可点击
            if(item.title == "…") {
                pbtn.addClass("disabled")
            }

            paginate_page.append(pbtn);
        }
    }

    var html = $('<span class="paginate_of">  转到</span><input class="paginate_input" type="text"><a class="paginte_go">GO</a>');
    box.append(html);
    box.find("input").val(this.ops.index);

}



module.exports = paging;

/***/ }),

/***/ "./ClientApp/gridlist3/tools.js":
/*!**************************************!*\
  !*** ./ClientApp/gridlist3/tools.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {

    formatNumber: function (num) {
        if (num == 0) {
            return '0.00'
        }

        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                if (n > 10000 && n < 100000000) {
                    res = (num / 10000).toFixed(2) + "万";
                } else if (n > 100000000) {
                    res = (num / 100000000).toFixed(2) + "亿";
                } else if (n == 0) {
                    res = '-';
                } else {
                    res = num.toFixed(0);
                }
            }
        } catch (error) {
            res = "-"
        }

        return res;
    },

    //沪深个股 保留两位小数
    formatNumberHSGGLB: function (num) {
        if (num == 0) {
            return '0.00'
        }

        try {
            return num.toFixed(2);
        } catch (error) {
            return "-"
        }


    },

    //主力净流入  新 首页保留2位小数
    formatNumberIndex: function (item) {
        if (item == '-') {
            return '-';

        }

        if (item == 0) {
            return '0.00'
        }

        var res = "";
        try {
            var fixed = typeof fixed === "number" && fixed >= 0 ? fixed : NaN;
            try {
                var n = Math.abs(item / 1);
                if (typeof item == "number") {

                    if ((n >= 0 && n < 1)) {
                        return item.toFixed(2);
                    } else if ((n >= 1 && n < 1e2)) {
                        return item.toFixed(2);
                    } else if ((n >= 1e2 && n < 1e3)) {
                        return item.toFixed(1);
                    } else if ((n >= 1e3 && n < 1e4) ) {
                        return item.toFixed(0);
                    } else if ((n >= 1e4 && n < 1e6) ) {
                        item = item / 10000;
                        return item.toFixed(fixed || 2) + "万";
                    } else if ((n >= 1e6 && n < 1e7) ) {
                        item = item / 10000;
                        return item.toFixed(fixed || 1) + "万";
                    } else if ((n >= 1e7 && n < 1e8) ) {
                        item = item / 10000;
                        return item.toFixed(fixed || 0) + "万";
                    } else if ((n >= 1e8 && n < 1e10) ) {
                        item = item / 1e8;
                        return item.toFixed(fixed || 2) + "亿";
                    } else if ((n >= 1e10 && n < 1e11) ) {
                        item = item / 1e8;
                        return item.toFixed(fixed || 1) + "亿";
                    } else if ((n >= 1e11 && n < 1e12) ) {
                        item = item / 1e8;
                        return item.toFixed(fixed || 0) + "亿";
                    } else if ((n >= 1e12 && n < 1e13) ) {
                        item = item / 1e12;
                        return item.toFixed(fixed || 1) + "万亿";
                    } else if ((n >= 1e13) || (n < 0 && n > -1e16)) {
                        item = item / 1e12;
                        return item.toFixed(fixed || 0) + "万亿";
                    } else {
                        return item.toFixed(0);
                    }
                }
            } catch (error) {
                item = "-"
            }

            return item;

        } catch (error) {
            return "-"
        }


    },

    //科创板全屏 成交量new
    kcbMyformatNum: function (num) {
        if (num == '-') {
            return '-';
        }

        if (num == undefined || num == '' || isNaN(num) || num == '-') {
            return '';
        }


        var hz = '';
        var num2 = '';
        try {
            if (num >= 0 && num <= 99.999999999) {
                num2 = parseFloat(num).toFixed(2);
            } else if (num >= 100 && num <= 999) {
                num2 = parseFloat(num).toFixed(1);
            } else if (num >= 1000) {
                // num2 = parseFloat(num).toFixed(0);
                if (num > 10000 && num < 100000000) {
                    num2 = (num / 10000).toFixed(2) + "万";
                } else if (num > 100000000) {
                    num2 = (num / 100000000).toFixed(2) + "亿";
                } else if (num == 0) {
                    num2 = '-';
                } else {
                    num2 = num.toFixed(0);
                }
            }


            //处理小于0
            if (num < 0) {
                num = Math.abs(num);

                if (num >= 0 && num <= 99) {
                    num2 = parseFloat(num).toFixed(2);
                } else if (num >= 100 && num <= 999) {
                    num2 = parseFloat(num).toFixed(1);
                } else if (num >= 1000) {
                    num2 = parseFloat(num).toFixed(0);
                }

                num2 = '-' + num2;

            }

            return num2.toString() + hz;

        } catch (error) {
            return '-';
        }


    },

    formatNumber_0: function (num) {
        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                if (n > 10000 && n < 100000000) {
                    res = (num / 10000).toFixed(0) + "万";
                } else if (n > 100000000) {
                    res = (num / 100000000).toFixed(2) + "亿";
                } else {
                    res = num;
                }
            }
        } catch (error) {
            res = "-"
        }

        return res;
    },

    //振幅
    formatNumber2: function (num) {
        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                res = n.toFixed(2)
            }
        } catch (error) {
            res = "-"
        }

        if (num >= 0) {
            return res + '%';
        } else {
            return '-';
        }


    },

    //净占比
    formatNumberJZB: function (num) {
        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                res = n.toFixed(2)
            }
        } catch (error) {
            res = "-"
        }

        if (num >= 0) {
            return res + '%';
        } else if (num < 0) {

            return '-' + res + '%';


        } else {
            return '-';
        }


    },

    //增仓占比
    formatNumberZCZB: function (num) {
        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                res = n.toFixed(2)
            }
        } catch (error) {
            res = "-"
        }

        if (num >= 0) {
            return res + '%';
        } else if (num < 0) {
            return '-' + res + '%';;
        } else {
            return '-'
        }


    },

    //市盈率
    formatNumberSyl: function (num) {

        if (num > 0) {
            return num.toFixed(2);
        } else if (num < 0) {
            return num.toFixed(2);
        } else {
            return '-'
        }


    },


    //转股价值
    formatNumberJiaZ: function (num, number) {

        if (num > 0) {
            return num.toFixed(number);
        } else if (num < 0) {
            return num.toFixed(number);
        } else {
            return '-'
        }


    },

    formatNumber3: function (num) {
        var str = num;
        if (typeof str == "number") {
            return str.toString().substr(0, 4) + '-' + str.toString().substr(4, 2) + '-' + str.toString().substr(6, 2);
        } else if (typeof str == "string") {
            return str
        } else {
            return '-'
        }


    },

    //涨跌额 最新价 2位小数
    formatNumber4: function (num) {
        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                res = n.toFixed(2)
            }
        } catch (error) {
            res = "-"
        }

        if (num > 0) {
            return res;
        } else if (num < 0) {
            return '-' + res;
        } else if (num == 0) {
            return '0.00';
        } else {
            return '-'
        }


    },



    formatNumberTime: function (shijianchuo) {
        var time = new Date(shijianchuo * 1000);
        var y = time.getFullYear();
        var m = time.getMonth() + 1;
        var d = time.getDate();
        var h = time.getHours();
        var mm = time.getMinutes();
        var s = time.getSeconds();
        return y + '-' + add0(m) + '-' + add0(d) + ' ' + add0(h) + ':' + add0(mm) + ':' + add0(s);


        function add0(m) {
            return m < 10 ? '0' + m : m
        }
    },


    //港股 涨跌额  2位
    formatNumberZde: function (num) {
        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                res = n.toFixed(2)
            }
        } catch (error) {
            res = "-"
        }

        if (num > 0) {
            return res;
        } else if (num < 0) {
            return '-' + res;
        } else if (num == 0) {
            return '0.00';
        } else {
            return '-'
        }


    },

    //排名
    formatPaiming: function (num) {
        if (num == 0) {
            return '-'
        }

        var res = "";
        try {
            var n = Math.abs(num / 1);
            if (typeof n == "number") {
                if (n > 10000 && n < 100000000) {
                    res = (num / 10000).toFixed(2) + "万";
                } else if (n > 100000000) {
                    res = (num / 100000000).toFixed(2) + "亿";
                } else if (n == 0) {
                    res = '-';
                } else {
                    res = num.toFixed(0);
                }
            }
        } catch (error) {
            res = "-"
        }

        if (res > 0) {
            res = "+" + res;
        }

        return res;
    },


    //根据参数 f1 f152 进行保留小数位数  最新价 涨跌额
    formatNumberFlag: function (value, fixednum) {
        // console.log(value)
        // console.log(fixednum)
        var res = "";
        try {
            var n = Math.abs(value / 1);
            if (typeof n == "number") {
                res = n.toFixed(fixednum)
            }
        } catch (error) {
            res = "-"
        }

        if (value > 0) {
            return res;
        } else if (value < 0) {
            return '-' + res;
        } else if (value == 0) {
            return (0).toFixed(fixednum);
        } else {
            return '-'
        }


    },


    //委比
    formatNumberFlag2: function (value, fixednum) {
        // console.log(value)
        // console.log(fixednum)
        var res = "";
        try {
            var n = Math.abs(value / 1);
            if (typeof n == "number") {
                res = n.toFixed(fixednum)
            }
        } catch (error) {
            res = "-"
        }

        if (value > 0) {
            return res + '%';
        } else if (value < 0) {
            return '-' + res + '%';
        } else if (value == 0) {
            return '-';
        } else {
            return '-'
        }


    },


    //首页 流通市值 涨跌幅 涨跌幅为0  显示0.00%
    formatNumberIndexZdf: function (value, fixednum) {
        // console.log(value)
        // console.log(fixednum)
        var res = "";
        try {
            var n = Math.abs(value / 1);
            if (typeof n == "number") {
                res = n.toFixed(fixednum)
            }
        } catch (error) {
            res = "-"
        }

        if (value > 0) {
            return res + '%';
        } else if (value < 0) {
            return '-' + res + '%';
        } else if (value == 0) {
            return '0.00%';
        } else {
            return '-'
        }


    },

    txtPoint: function (value) {
        var len = value.length,
            charCode = -1,
            realLength = 0
            strChar=[];
        for (var i = 0; i < len; i++) {
            charCode = value.charCodeAt(i);
            strChar[realLength]=value.charAt(i);
            if (charCode >= 0 && charCode <= 128)
            {
                realLength += 1; // 英文                
            }
            else{
                strChar[realLength+1]="";
                realLength += 2; // 中文
            }
        }
        if (realLength > 8) {
            value = strChar.slice(0,6).join("")+ '..';
        }

        return value
    },

    formatNumberQhsc: function (value) {
        var obj = {
            '1': '上交所',
            '8': '中金所',
            '220': '中金所',
            '113': '上期所',
            '114': '大商所',
            '115': '郑商所',
            '116': '港交所',
            '142': '上期能源'
        }

        var markentname = '';
        if (value) {
            if (obj[value]) {
                markentname = obj[value];
            } else {
                markentname = '国际期货';
            }
        }

        return markentname;

    },
    /**
     * 用于对比判断色值
     * 
     * @param {Number} one 数值1
     * @param {Number} two 数值2 
     * @param {String[]} arr 颜色数组
     */
    getColor:function(one,two,arr){
        if(!arr){
            arr = ["red","green"]
        }
        var diff = !!two ? parseFloat(one) - parseFloat(two) : parseFloat(one);
        return !!diff ? (diff == 0 ? '' : diff > 0 ? arr[0] : arr[1]) : '';
    },
    
    
    quoteLink: function (code, market) {
        return 'http://quote.eastmoney.com/unify/r/' + market + '.' + code;
    },
    toFixed: function (data, num) {
        if (data === '' || data === undefined || data === null || data === '-' || isNaN(data)) {
            return '-';
        }
        num = isNaN(parseInt(num)) ? 2 : parseInt(num);
        return parseFloat(data).toFixed(num);
    },
    toPercent: function (data,num) {
        if (data === '' || data === undefined || data === null || data === '-' || isNaN(data)) {
            return '-';
        }
        num = isNaN(parseInt(num)) ? 2 : parseInt(num);
        return !isNaN(parseFloat(data)) ? parseFloat(data).toFixed(num) + '%' : '-';
    },
    /**
   * 字符串截取 
   * 
   * @param {string} txt 输入文本
   * @param {int} n 截取多少个字 一个汉字算2个
   * @param {boolean} needtip 是否需要全文提示
   * @returns 
   */
  txtLeft: function (txt, n, needtip) {
    if( txt == null || txt == "" ){
      return "";
    }
    var thislength = 0;
    for (var i = 0; i < txt.length; i++) {
      if (txt.charCodeAt(i) > 255) {
        thislength += 2;
      }
      else {
        thislength++;
      }
      if (thislength > n + 3) {
        if(needtip){
          return '<span title="' + txt + '">' + txt.substring(0, i) + "...</span>";
        }
        else{
          return txt.substring(0, i) + "...";
        }
        break;
      }
    }
    return txt;
  }
};

/***/ }),

/***/ "./ClientApp/modules/asyncloaders.js":
/*!*******************************************!*\
  !*** ./ClientApp/modules/asyncloaders.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var URI = __webpack_require__(/*! ./uri/main */ "./ClientApp/modules/uri/main.js");
var extend = __webpack_require__(/*! ./utils.extend */ "./ClientApp/modules/utils.extend.js");
var memcache = __webpack_require__(/*! ./utils.cache */ "./ClientApp/modules/utils.cache.js");
/**
 * 异步图片加载器
 * @param {object} setting 加载配置
 * @param {string} setting.url 图片地址
 * @param {object} setting.data 地址数据
 * @param {boolean} setting.cache 是否使用缓存
 * @param {number|string} setting.height 图片高度
 * @param {number|string} setting.width 图片宽度
 * @param {function} setting.success 成功回调
 * @param {function} setting.error 异常回调
 */
function imgLoader(setting) {
    if (typeof (setting) !== "object" || !setting["url"]) return false;
    var fCallback = typeof (setting["success"]) === "function" ? setting["success"] : null;
    var uri = new URI(setting["url"]);
    if (setting["data"]) {
        uri.setSearch(setting["data"]);
    }
    if (!setting["cache"]) {
        uri.setSearch('_', +(new Date));
    }
    var _image = document.createElement("img");
    if (typeof (setting["height"]) === "number" && setting["height"] > 0) {
        _image.setAttribute("height", setting["height"] + "px");
    } else if (setting["height"]) {
        _image.setAttribute("height", setting["height"]);
    }
    if (typeof (setting["width"]) === "number" && setting["width"] > 0) {
        _image.setAttribute("width", setting["width"] + "px");
    } else if (setting["width"]) {
        _image.setAttribute("width", setting["width"]);
    }
    _image.setAttribute('src', uri.toString());
    if (typeof (setting["error"]) === "function") {
        _image.onerror = function () {
            setting["error"](_image);
        };
    }
    _image.onload = _image.onreadystatechange = function (evt) {
        if (!_image.readyState || /loaded|complete/.test(_image.readyState)) {
            // Handle memory leak in IE
            _image.onload = _image.onreadystatechange = null;
            // Callback if not abort
            if (fCallback) fCallback(_image);
        }
    };
    return _image;
}

/**
 * 异步脚本加载器
 * @param {object} options 加载配置
 * @param {string} options.url 地址
 * @param {string|function} options.id 生成脚本的id，用于判断是否已加载
 * @param {boolean} options.checkrepeat 是否查重
 * @param {string} options.charset 脚本编码
 * @param {function} options.success 成功回调
 * @param {function} options.error 失败回调
 */
function scriptLoader(options) {
    if (!scriptLoader.cache) scriptLoader.cache = new memcache();
    var self = this;
    var _opt = extend({
        url: '',
        id: '',
        charset: 'utf-8',
        checkrepeat: true,
        data: null,
        success: null,
        error: function () {
            console.error('load script error: ' + _opt.url);
        }
    }, options);
    if (!_opt.url) return false;
    var fCallback = typeof _opt.success === 'function' ? _opt.success : false;
    var uri = new URI(_opt.url);
    if (_opt.data) {
        uri.setSearch(_opt.data);
    }
    var url = this.url = uri.toString();
    var id = this.id = _opt.id || scriptLoader.generateId(url);
    
    if (_opt.checkrepeat && check()) {
        if (fCallback) fCallback.apply(this, [scriptLoader.cache[url], null]);
        return;
    }
    this.script = null;
    /**
     * 加载脚本
     */
    this.load = function () {
        var _script = this.script = document.createElement("script");
        _script.id = id;
        _script.className = 'ns-script-loader';
        _script.charset = _opt.charset;
        _script.async = true;
        _script.defer = true;
        _script.src = url;
        if (typeof _opt.error === 'function') {
            _script.onerror = function (evt) {
                _opt.error.apply(self, [evt]);
            };
        }
        
        _script.onload = _script.onreadystatechange = function (evt) {
            if (!_script.readyState || /loaded|complete/.test(_script.readyState)) {
                // Handle memory leak in IE
                _script.onload = _script.onreadystatechange = null;
                scriptLoader.cache.set(url, _script);
                // Callback if not abort
                if (typeof fCallback === 'function') fCallback.apply(self, [_script, evt]);
                document.getElementsByTagName('head')[0].removeChild(_script);
            }
        };
        document.getElementsByTagName('head')[0].appendChild(_script);
    }

    /**
     * 移除当前脚本
     */
    this.destory = function () {
        document.getElementsByTagName('head')[0].removeChild(this.script);
    }

    this.load();

    function check() {
        return scriptLoader.cache[url] || !!document.getElementById(id);
    }
}

/**
 * 自动生成脚本ID
 * @param {string} url url地址
 */
scriptLoader.generateId = function (url) {
    if (!url) return '';
    return 'script-' + hashCode(url);
}

/**
 * 移除脚本
 * @param {string} id DOM对象ID
 */
scriptLoader.remove = function (id) {
    var dom = document.getElementById(id);
    if (dom) {
        document.getElementsByTagName('head')[0].removeChild(dom);
    }
}

/**
 * 生成HASHCODE
 * @param {string} str 字符串
 */
function hashCode(str) {
    var hash = 0;
    if (str.length == 0) return hash;
    for (i = 0; i < str.length; i++) {
        var char = str.charCodeAt(i);
        hash = ((hash << 5) - hash) + char;
        hash = hash & hash; // Convert to 32bit integer
    }
    return hash;
}

module.exports = {
    imgLoader: imgLoader,
    scriptLoader: scriptLoader
};

/***/ }),

/***/ "./ClientApp/modules/favouriteclient.js":
/*!**********************************************!*\
  !*** ./ClientApp/modules/favouriteclient.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var URI = __webpack_require__(/*! ./uri/main */ "./ClientApp/modules/uri/main.js");
var cookie = __webpack_require__(/*! ./utils.cookie */ "./ClientApp/modules/utils.cookie.js");
var JSONP = __webpack_require__(/*! ./jsonp */ "./ClientApp/modules/jsonp.js");

var utils = FavouriteClient.utils = __webpack_require__(/*! ./utils */ "./ClientApp/modules/utils.js");

/**
 * 自选股方法
 * @param {object} options 配置项
 * @param {object} options.server 远程接口端配置
 * @param {string} options.server.baseUrl 自选股接口基地址
 * @param {object} options.server.paths 自选股接口地址配置
 * @param {string} options.server.paths.login 登陆自选股接口地址
 * @param {string} options.server.paths.anonymous 非登陆自选股接口地址
 * @param {object} options.quote 行情配置型
 * @param {string} options.quote.baseUrl 行情接口基地址
 * @param {object} options.quote.data 行情接口参数
 * @param {number} options.quote.update 行情更新频率
 * @param {function} options.quote.dataResolver 行情数据解析器
 * @param {object} options.cookie cookie配置项
 * @param {boolean} options.cookie.disabled 是否禁用COOKIE
 * @param {string} options.cookie.name COOKIE名称
 * @param {string} options.cookie.domain COOKIE域
 * @param {number} options.cookie.expires COOKIE超时
 * @param {object} options.localStorage localStorage配置项
 * @param {boolean} options.localStorage.disabled 是否禁用localStorage
 * @param {string} options.localStorage.key localStorage键
 * @param {Array<string>} options.defaultstocks 默认自选股票
 * @param {function} options.onerror 错误回调
 */
function FavouriteClient(options) {
    var self = this;
    var _opt = utils.extend(utils.extend({}, defaults, true), options || {}),
        inited = false;
    var stocks = this.stocks = new StockInfoList();
    /**
     * 检查自选股登录状态
     */
    this.checkLogin = function () {
        var ct = cookie('ct'),
            ut = cookie('ut'),
            uidal = cookie('uidal');
        return !!ct && !!ut && !!uidal;
    }

    /**
     * 获取自选股列表
     * @param {function} callback 对调函数
     * @param {function} onerror 错误回调
     */
    this.getlist = function (callback, onerror) {
        if (inited) {
            if (typeof callback === 'function') callback(this.stocks);
            return this.stocks;
        }
        // 从cookie中获取自选股ID
        var local = cookie(_opt.cookie.name);
        var qids = _opt.defaultstocks;
        // 从服务器获取自选股列表, 失败时本地获取
        requestFavorApi({
            f: 'gsaandcheck',
            t: _opt.t
        }, self_cb, function () {
            if (local) qids = local.split('~');
            fromlocal(qids);
            if (typeof callback === 'function') callback.apply(this, [this.stocks]);
        });
        //fromquote(qids);

        function self_cb(json) {
            if (json && json.data && typeof json.data.list === 'string' && json.data.list) {
                var list = json.data.list.split(',');
                for (var i = 0; i < list.length; i++) {
                    var ele = list[i];
                    if (typeof ele !== 'string') continue;
                    var items = ele.split('|');
                    self.stocks.add(new StockInfo(items[0], parseInt(items[1]) || items[1]))
                }
            }
            try {
                if (typeof callback === 'function') {
                    var ss = self.stocks.clone();
                    if (ss.length < _opt.displayCount) {
                        fromlocal.apply(self, [qids, ss]);
                        ss.splice(_opt.displayCount, ss.length - _opt.displayCount);
                    }
                    callback.apply(self, [ss]);
                }
            } catch (e) {
                console.error(e);
            }
            setCookie.apply(self);
            inited = true;
        }

        function fromlocal(ids, collection) {
            collection = collection || this.stocks;
            if (ids instanceof Array && ids.length > 0) {
                for (var i = 0; i < ids.length; i++) {
                    var cid = ids[i],
                        code_market = cid ? cid.split('-') : [];
                    if (code_market.length > 0) {
                        collection.add(new StockInfo(code_market[0], code_market[1]));
                    }
                }
            }
        }
    }

    /**
     * 加自选
     * @param {string} code 股票代码
     * @param {string} market 市场
     * @param {function} callback 回调函数
     * @param {function} onerror 错误回调
     */
    this.add = function (code, market, callback, onerror) {
        var stock;
        if (code instanceof StockInfo) {
            stock = code;
        } else {
            stock = new StockInfo(code, market);
        }
        this.stocks.add(stock);
        requestFavorApi({
            f: 'asz',
            sc: stock.toFavorId(),
            t: _opt.t
        }, callback, onerror || _opt.onerror);
        setCookie.apply(self);
        return stock;
    }

    /**
     * 批量加自选
     * @param {Array<StockInfo>} stockList 股票信息
     * @param {function} callback 回调函数
     * @param {function} onerror 错误回调
     */
    this.addbatch = function (stockList, callback, onerror) {
        var codes = [];
        for (var i = 0; i < stockList.length; i++) {
            var ele = stockList[i];
            var idx = this.stocks.add(ele);
            if (idx >= 0) {
                codes.push(ele.toFavorId());
            }
        }
        setCookie.apply(self);
        if (codes.length > 0) {
            requestFavorApi({
                f: 'aszlot',
                sc: codes.join(','),
                t: _opt.t
            }, callback, onerror);
        }
    }

    /**
     * 删自选
     * @param {string} code 股票代码
     * @param {string} market 市场
     * @param {function} callback 回调函数
     * @param {function} onerror 错误回调
     */
    this.remove = function (code, market, callback, onerror) {
        var stock;
        if (code instanceof StockInfo) {
            stock = code;
        } else {
            stock = new StockInfo(code, market);
        }
        if (this.stocks.remove(stock)) {
            setCookie.apply(self);
            requestFavorApi({
                f: 'dsz',
                sc: stock.toFavorId(),
                t: _opt.t
            }, callback, onerror);
            return stock;
        }
    }

    /**
     * 检查股票是否已加自选
     * @param {string} code 股票代码
     * @param {string} market 市场
     */
    this.checkfavor = function (code, market) {
        var stock;
        if (code instanceof StockInfo) {
            stock = code;
        } else {
            stock = new StockInfo(code, market);
        }
        return this.stocks.contains(stock);
    }

    /**
     * 修改自选股顺序
     * @param {string|StockInfo} stock 股票信息
     * @param {number} position 位置
     */
    this.move = function (stock, position) {
        this.stocks.move(stock, position);
        setCookie.apply(self);
        var params = {
            f: 'ssz',
            sc: stock.toFavorId(),
            t: _opt.t
        };
        var previous = this.stocks[position - 1],
            next = this.stocks[position + 1];
        if (previous) params['sc1'] = previous;
        if (next) params['sc2'] = next;
        requestFavorApi(params)
    }

    /**
     * 根据自选股获取行情数据
     * @param {number} count 请求股票条数
     * @param {function} callback 回调函数
     * @param {function} onerror 错误回调
     */
    this.getQuote = function (count, callback, onerror) {
        var qid;
        var qc = utils.extend({}, _opt.quote, true),
            len = count || this.stocks.length;
        var cmds = this.stocks.slice(0, len).join(',');
        utils.extend(qc, {
            data: {
                cmd: cmds
            }
        }, true);
        load();
        if (qc.update > 0) {
            qid = setInterval(load, qc.update);
        }

        function load() {
            if (this.stocks.length <= 0) return;
            jsonp(qc.baseUrl, qc.data, function (json) {
                if (json) {
                    var data = json;
                    if (typeof qc.dataResolver === 'function')
                        data = qc.dataResolver.apply(self, [json]);
                    if (typeof callback === 'function')
                        callback.apply(self, [data]);
                }
            }, onerror);
        }
    }

    function setCookie() {
        if (_opt.cookie && !_opt.cookie.disabled) {
            var list = [];
            for (var i = 0; i < (!this.stocks ? 0 : this.stocks.length); i++) {
                var id = this.stocks[i],
                    info = this.stocks.get(id);
                if (info) list.push(info.toString());
            }
            cookie(_opt.cookie.name, list.join('~'), _opt.cookie);
        }
    }

    function requestFavorApi(data, callback, onerror) {
        var url = '';
        if (self.checkLogin()) {
            url = new URI(_opt.server.paths.login).absoluteTo(_opt.server.baseUrl).toString();
        } else {
            url = new URI(_opt.server.paths.anonymous).absoluteTo(_opt.server.baseUrl).toString();
        }
        var error = onerror || _opt.onerror;
        jsonp(url, data, function (json) {
            if (json && json.result == 1) {
                if (typeof callback === 'function') {
                    callback(json);
                }
            } else if (error === 'function') {
                error(json.data.msg);
            }
        }, error);
    }

    /**
     * 行情系统添加对象
     * @param {Array<string>} quoteIds 行情ID
     */
    function fromQuote(quoteIds, onerror) {
        if (quoteIds instanceof Array && quoteIds.length > 0) {
            var quote = utils.extend({}, _opt.quote, true);
            utils.extend(quote, {
                data: {
                    cmd: quoteIds.join(','),
                    sty: 'MFGB'
                }
            }, true);
            // 根据ID获取码表市场代码
            jsonp(quote.baseUrl, quote.data, function (json) {
                if (json instanceof Array) {
                    /* (0) Code, (1) MarketType */
                    for (var i = 0; i < json.length; i++) {
                        var code_market = typeof json[i] === 'string' ? json[i].split(',') : [];
                        if (code_market.length > 0) {
                            self.stocks.add(new StockInfo(code_market[0], code_market[1]));
                        }
                    }
                }
            }, onerror || _opt.onerror);
        }
    }

    function jsonp(url, data, success, error) {
        JSONP(url, data, 'cb', success, error);
    }
}

/**
 * 自选股列表容器
 */
function StockInfoList() {
    var cache = this.cache = new utils.ObjectCache();
    this.get = function (key) {
        return cache[key];
    }
    /**
     * 添加
     * @param {StockInfo} item 自选股信息
     */
    this.add = function (item) {
        if (item instanceof StockInfo && !this.contains(item.id)) {
            cache[item.id] = item;
            return this.push(item.id) - 1;
        } else return -1;
    }
    /**
     * 移除
     * @param {string|StockInfo} key 对象ID
     */
    this.remove = function (key) {
        var _key = key;
        if (key instanceof StockInfo) {
            _key = key.id;
        }
        var idx = this.indexOf(_key),
            val = this[idx];
        if (idx < 0) return false;
        this.splice(idx, 1);
        return cache.remove(_key);
    }

    /**
     * 清空容器
     */
    this.clear = function () {
        cache.clear();
        this.splice(0, this.length);
    }

    /**
     * 移动位置
     * @param {string|StockInfo} item 股票信息
     * @param {number} position 位置索引
     */
    this.move = function (item, position) {
        var key = item;
        if (item instanceof StockInfo) {
            key = item.id;
        }
        var idx = this.indexOf(_key),
            val = this[idx];
        if (idx >= 0) {
            this.splice(idx, 1);
            this.splice(position, 0, val);
            return this;
        }
    }

    /**
     * 是否包含对象
     * @param {string|StockInfo} key 对象ID
     */
    this.contains = function (key) {
        var _key = key;
        if (key instanceof StockInfo) {
            _key = key.id;
        }
        return cache.hasOwnProperty(_key);
    }
    this.clone = function () {
        var clone = new StockInfoList();
        for (var i = 0; i < this.length; i++) {
            var element = this.get(this[i]);
            clone.add(element);
        }
        return clone;
    }
}
StockInfoList.prototype = new Array();

/**
 * 自选股市场映射
 */
var mapping = StockInfo.shortMarketMapping = {
    '1': 'sh',
    '2': 'sz',
    '_TB': 'sz'
}

/**
 * 自选股股票信息
 * @param {string} code 代码
 * @param {string} market 市场
 */
function StockInfo(code, market) {
    this.id = code + market;
    this.code = code || '';
    this.market = market || '';
    this.shortMarket = mapping[market];
    this.toFavorId = function () {
        var _mkt = this.market;
        if (parseInt(_mkt)) _mkt = '0' + _mkt;
        return this.code + '|' + _mkt + '|01';
    }
    this.toString = function () {
        return this.code + '-' + this.market;
    }
}

FavouriteClient.version = '2.0.0';
FavouriteClient.stockinfo = StockInfo;
FavouriteClient.stockcontainer = StockInfoList;

var defaults = FavouriteClient.defaults = {
    server: {
        baseUrl: '//myfavor1.eastmoney.com',
        paths: {
            login: '/mystock',
            anonymous: '/mystock_anonym'
        }
    },
    quote: {
        baseUrl: '//nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=CT',
        data: {
            sty: 'e1ii',
            st: 'z',
            token: '4f1862fc3b5e77c150a2b985b12db0fd'
        },
        update: 15 * 1000
    },
    cookie: {
        disabled: true,
        name: 'emhqfavor',
        path: '/',
        domain: 'eastmoney.com',
        expires: 365
    },
    localStorage: {
        disabled: false,
        key: 'myfavor',
        serializer: JSON.stringify,
        deserializer: JSON.parse
    },
    displayCount: 5,
    defaultstocks: ['000001-2', '600000-1', '300059-2', '000001-2', '000002-2', '000004-2', '000005-2', '000006-2', '000008-2', '000009-2', '000010-2', '000011-2', '000012-2', '000014-2', '000016-2', '000017-2', '000018-2'],
    onerror: function (e) {
        console.error(e);
    }
};
module.exports = FavouriteClient;

/***/ }),

/***/ "./ClientApp/modules/jquery-plugins/jquery-actual.js":
/*!***********************************************************!*\
  !*** ./ClientApp/modules/jquery-plugins/jquery-actual.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
$.fn.addBack = $.fn.addBack || $.fn.andSelf;
$.fn.extend({
    actual: function (method, options) {
        // check if the jQuery method exist
        if (!this[method]) {
            throw '$.actual => The jQuery method "' + method + '" you called does not exist';
        }

        var defaults = {
            absolute: false,
            clone: false,
            includeMargin: false,
            display: 'block'
        };

        var configs = $.extend(defaults, options);

        var $target = this.eq(0);
        var fix, restore;

        if (configs.clone === true) {
            fix = function () {
                var style = 'position: absolute !important; top: -1000 !important; ';

                // this is useful with css3pie
                $target = $target.
                clone().
                attr('style', style).
                appendTo('body');
            };

            restore = function () {
                // remove DOM element after getting the width
                $target.remove();
            };
        } else {
            var tmp = [];
            var style = '';
            var $hidden;

            fix = function () {
                // get all hidden parents
                $hidden = $target.parents().addBack().filter(':hidden');
                style += 'visibility: hidden !important; display: ' + configs.display + ' !important; ';

                if (configs.absolute === true) style += 'position: absolute !important; ';

                // save the origin style props
                // set the hidden el css to be got the actual value later
                $hidden.each(function () {
                    // Save original style. If no style was set, attr() returns undefined
                    var $this = $(this);
                    var thisStyle = $this.attr('style');

                    tmp.push(thisStyle);
                    // Retain as much of the original style as possible, if there is one
                    $this.attr('style', thisStyle ? thisStyle + ';' + style : style);
                });
            };

            restore = function () {
                // restore origin style values
                $hidden.each(function (i) {
                    var $this = $(this);
                    var _tmp = tmp[i];

                    if (_tmp === undefined) {
                        $this.removeAttr('style');
                    } else {
                        $this.attr('style', _tmp);
                    }
                });
            };
        }

        fix();
        // get the actual value with user specific methed
        // it can be 'width', 'height', 'outerWidth', 'innerWidth'... etc
        // configs.includeMargin only works for 'outerWidth' and 'outerHeight'
        var actual = /(outer)/.test(method) ?
            $target[method](configs.includeMargin) :
            $target[method]();

        restore();
        // IMPORTANT, this plugin only return the value of the first element
        return actual;
    }
});
module.exports = $.fn.actual;

/***/ }),

/***/ "./ClientApp/modules/jquery-plugins/jquery-tooltips/jquery.parser.js":
/*!***************************************************************************!*\
  !*** ./ClientApp/modules/jquery-plugins/jquery-tooltips/jquery.parser.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * EasyUI for jQuery 1.5.4.2
 * 
 * Copyright (c) 2009-2018 www.jeasyui.com. All rights reserved.
 *
 * Licensed under the freeware license: http://www.jeasyui.com/license_freeware.php
 * To use it on other terms please contact us: info@jeasyui.com
 *
 */
/**
 * parser - EasyUI for jQuery
 * 
 */

module.exports = (function($){
	$.easyui = {
		/**
		 * Get the index of array item, return -1 when the item is not found.
		 */
		indexOfArray: function(a, o, id){
			for(var i=0,len=a.length; i<len; i++){
				if (id == undefined){
					if (a[i] == o){return i;}
				} else {
					if (a[i][o] == id){return i;}
				}
			}
			return -1;
		},
		/**
		 * Remove array item, 'o' parameter can be item object or id field name.
		 * When 'o' parameter is the id field name, the 'id' parameter is valid.
		 */
		removeArrayItem: function(a, o, id){
			if (typeof o == 'string'){
				for(var i=0,len=a.length; i<len; i++){
					if (a[i][o] == id){
						a.splice(i, 1);
						return;
					}
				}
			} else {
				var index = this.indexOfArray(a,o);
				if (index != -1){
					a.splice(index, 1);
				}
			}
		},
		/**
		 * Add un-duplicate array item, 'o' parameter is the id field name, if the 'r' object is exists, deny the action.
		 */
		addArrayItem: function(a, o, r){
			var index = this.indexOfArray(a, o, r ? r[o] : undefined);
			if (index == -1){
				a.push(r ? r : o);
			} else {
				a[index] = r ? r : o;
			}
		},
		getArrayItem: function(a, o, id){
			var index = this.indexOfArray(a, o, id);
			return index==-1 ? null : a[index];
		},
		forEach: function(data, deep, callback){
			var nodes = [];
			for(var i=0; i<data.length; i++){
				nodes.push(data[i]);
			}
			while(nodes.length){
				var node = nodes.shift();
				if (callback(node) == false){return;}
				if (deep && node.children){
					for(var i=node.children.length-1; i>=0; i--){
						nodes.unshift(node.children[i]);
					}
				}
			}
		}
	};

	$.parser = {
		auto: true,
		onComplete: function(context){},
		plugins:['draggable','droppable','resizable','pagination','tooltip',
		         'linkbutton','menu','menubutton','splitbutton','switchbutton','progressbar',
				 'tree','textbox','passwordbox','filebox','combo','combobox','combotree','combogrid','combotreegrid','tagbox','numberbox','validatebox','searchbox',
				 'spinner','numberspinner','timespinner','datetimespinner','calendar','datebox','datetimebox','slider',
				 'layout','panel','datagrid','propertygrid','treegrid','datalist','tabs','accordion','window','dialog','form'
		],
		parse: function(context){
			var aa = [];
			for(var i=0; i<$.parser.plugins.length; i++){
				var name = $.parser.plugins[i];
				var r = $('.easyui-' + name, context);
				if (r.length){
					if (r[name]){
						r.each(function(){
							$(this)[name]($.data(this, 'options')||{});
						});
					} else {
						aa.push({name:name,jq:r});
					}
				}
			}
			if (aa.length && window.easyloader){
				var names = [];
				for(var i=0; i<aa.length; i++){
					names.push(aa[i].name);
				}
				easyloader.load(names, function(){
					for(var i=0; i<aa.length; i++){
						var name = aa[i].name;
						var jq = aa[i].jq;
						jq.each(function(){
							$(this)[name]($.data(this, 'options')||{});
						});
					}
					$.parser.onComplete.call($.parser, context);
				});
			} else {
				$.parser.onComplete.call($.parser, context);
			}
		},
		
		parseValue: function(property, value, parent, delta){
			delta = delta || 0;
			var v = $.trim(String(value||''));
			var endchar = v.substr(v.length-1, 1);
			if (endchar == '%'){
				v = parseFloat(v.substr(0, v.length-1));
				if (property.toLowerCase().indexOf('width') >= 0){
					v = Math.floor((parent.width()-delta) * v / 100.0);
				} else {
					v = Math.floor((parent.height()-delta) * v / 100.0);
				}
			} else {
				v = parseInt(v) || undefined;
			}
			return v;
		},
		
		/**
		 * parse options, including standard 'data-options' attribute.
		 * 
		 * calling examples:
		 * $.parser.parseOptions(target);
		 * $.parser.parseOptions(target, ['id','title','width',{fit:'boolean',border:'boolean'},{min:'number'}]);
		 */
		parseOptions: function(target, properties){
			var t = $(target);
			var options = {};
			
			var s = $.trim(t.attr('data-options'));
			if (s){
				if (s.substring(0, 1) != '{'){
					s = '{' + s + '}';
				}
				options = (new Function('return ' + s))();
			}
			$.map(['width','height','left','top','minWidth','maxWidth','minHeight','maxHeight'], function(p){
				var pv = $.trim(target.style[p] || '');
				if (pv){
					if (pv.indexOf('%') == -1){
						pv = parseInt(pv);
						if (isNaN(pv)){
							pv = undefined;
						}
					}
					options[p] = pv;
				}
			});
				
			if (properties){
				var opts = {};
				for(var i=0; i<properties.length; i++){
					var pp = properties[i];
					if (typeof pp == 'string'){
						opts[pp] = t.attr(pp);
					} else {
						for(var name in pp){
							var type = pp[name];
							if (type == 'boolean'){
								opts[name] = t.attr(name) ? (t.attr(name) == 'true') : undefined;
							} else if (type == 'number'){
								opts[name] = t.attr(name)=='0' ? 0 : parseFloat(t.attr(name)) || undefined;
							}
						}
					}
				}
				$.extend(options, opts);
			}
			return options;
		}
	};
	$(function(){
		var d = $('<div style="position:absolute;top:-1000px;width:100px;height:100px;padding:5px"></div>').appendTo('body');
		$._boxModel = d.outerWidth()!=100;
		d.remove();
		d = $('<div style="position:fixed"></div>').appendTo('body');
		$._positionFixed = (d.css('position') == 'fixed');
		d.remove();
		
		if (!window.easyloader && $.parser.auto){
			$.parser.parse();
		}
	});
	
	/**
	 * extend plugin to set box model width
	 */
	$.fn._outerWidth = function(width){
		if (width == undefined){
			if (this[0] == window){
				return this.width() || document.body.clientWidth;
			}
			return this.outerWidth()||0;
		}
		return this._size('width', width);
	};
	
	/**
	 * extend plugin to set box model height
	 */
	$.fn._outerHeight = function(height){
		if (height == undefined){
			if (this[0] == window){
				return this.height() || document.body.clientHeight;
			}
			return this.outerHeight()||0;
		}
		return this._size('height', height);
	};
	
	$.fn._scrollLeft = function(left){
		if (left == undefined){
			return this.scrollLeft();
		} else {
			return this.each(function(){$(this).scrollLeft(left)});
		}
	};
	
	$.fn._propAttr = $.fn.prop || $.fn.attr;
	
	$.fn._size = function(options, parent){
		if (typeof options == 'string'){
			if (options == 'clear'){
				return this.each(function(){
					$(this).css({width:'',minWidth:'',maxWidth:'',height:'',minHeight:'',maxHeight:''});
				});
			} else if (options == 'fit'){
				return this.each(function(){
					_fit(this, this.tagName=='BODY' ? $('body') : $(this).parent(), true);
				});
			} else if (options == 'unfit'){
				return this.each(function(){
					_fit(this, $(this).parent(), false);
				});
			} else {
				if (parent == undefined){
					return _css(this[0], options);
				} else {
					return this.each(function(){
						_css(this, options, parent);
					});
				}
			}
		} else {
			return this.each(function(){
				parent = parent || $(this).parent();
				$.extend(options, _fit(this, parent, options.fit)||{});
				var r1 = _setSize(this, 'width', parent, options);
				var r2 = _setSize(this, 'height', parent, options);
				if (r1 || r2){
					$(this).addClass('easyui-fluid');
				} else {
					$(this).removeClass('easyui-fluid');
				}
			});
		}
		
		function _fit(target, parent, fit){
			if (!parent.length){return false;}
			var t = $(target)[0];
			var p = parent[0];
			var fcount = p.fcount || 0;
			if (fit){
				if (!t.fitted){
					t.fitted = true;
					p.fcount = fcount + 1;
					$(p).addClass('panel-noscroll');
					if (p.tagName == 'BODY'){
						$('html').addClass('panel-fit');
					}
				}
				return {
					width: ($(p).width()||1),
					height: ($(p).height()||1)
				};
			} else {
				if (t.fitted){
					t.fitted = false;
					p.fcount = fcount - 1;
					if (p.fcount == 0){
						$(p).removeClass('panel-noscroll');
						if (p.tagName == 'BODY'){
							$('html').removeClass('panel-fit');
						}
					}
				}
				return false;
			}
		}
		function _setSize(target, property, parent, options){
			var t = $(target);
			var p = property;
			var p1 = p.substr(0,1).toUpperCase() + p.substr(1);
			var min = $.parser.parseValue('min'+p1, options['min'+p1], parent);// || 0;
			var max = $.parser.parseValue('max'+p1, options['max'+p1], parent);// || 99999;
			var val = $.parser.parseValue(p, options[p], parent);
			var fluid = (String(options[p]||'').indexOf('%') >= 0 ? true : false);
			
			if (!isNaN(val)){
				var v = Math.min(Math.max(val, min||0), max||99999);
				if (!fluid){
					options[p] = v;
				}
				t._size('min'+p1, '');
				t._size('max'+p1, '');
				t._size(p, v);
			} else {
				t._size(p, '');
				t._size('min'+p1, min);
				t._size('max'+p1, max);
			}
			return fluid || options.fit;
		}
		function _css(target, property, value){
			var t = $(target);
			if (value == undefined){
				value = parseInt(target.style[property]);
				if (isNaN(value)){return undefined;}
				if ($._boxModel){
					value += getDeltaSize();
				}
				return value;
			} else if (value === ''){
				t.css(property, '');
			} else {
				if ($._boxModel){
					value -= getDeltaSize();
					if (value < 0){value = 0;}
				}
				t.css(property, value+'px');
			}
			function getDeltaSize(){
				if (property.toLowerCase().indexOf('width') >= 0){
					return t.outerWidth() - t.width();
				} else {
					return t.outerHeight() - t.height();
				}
			}
		}
	};
	
})(jQuery);

/**
 * support for mobile devices
 */
(function($){
	var longTouchTimer = null;
	var dblTouchTimer = null;
	var isDblClick = false;
	
	function onTouchStart(e){
		if (e.touches.length != 1){return}
		if (!isDblClick){
			isDblClick = true;
			dblClickTimer = setTimeout(function(){
				isDblClick = false;
			}, 500);
		} else {
			clearTimeout(dblClickTimer);
			isDblClick = false;
			fire(e, 'dblclick');
//			e.preventDefault();
		}
		longTouchTimer = setTimeout(function(){
			fire(e, 'contextmenu', 3);
		}, 1000);
		fire(e, 'mousedown');
		if ($.fn.draggable.isDragging || $.fn.resizable.isResizing){
			e.preventDefault();
		}
	}
	function onTouchMove(e){
		if (e.touches.length != 1){return}
		if (longTouchTimer){
			clearTimeout(longTouchTimer);
		}
		fire(e, 'mousemove');
		if ($.fn.draggable.isDragging || $.fn.resizable.isResizing){
			e.preventDefault();
		}
	}
	function onTouchEnd(e){
//		if (e.touches.length > 0){return}
		if (longTouchTimer){
			clearTimeout(longTouchTimer);
		}
		fire(e, 'mouseup');
		if ($.fn.draggable.isDragging || $.fn.resizable.isResizing){
			e.preventDefault();
		}
	}
	
	function fire(e, name, which){
		var event = new $.Event(name);
		event.pageX = e.changedTouches[0].pageX;
		event.pageY = e.changedTouches[0].pageY;
		event.which = which || 1;
		$(e.target).trigger(event);
	}
	
	if (document.addEventListener){
		document.addEventListener("touchstart", onTouchStart, true);
		document.addEventListener("touchmove", onTouchMove, true);
		document.addEventListener("touchend", onTouchEnd, true);
	}
});



/***/ }),

/***/ "./ClientApp/modules/jquery-plugins/jquery-tooltips/jquery.tooltip.js":
/*!****************************************************************************!*\
  !*** ./ClientApp/modules/jquery-plugins/jquery-tooltips/jquery.tooltip.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * EasyUI for jQuery 1.5.4.2
 * 
 * Copyright (c) 2009-2018 www.jeasyui.com. All rights reserved.
 *
 * Licensed under the freeware license: http://www.jeasyui.com/license_freeware.php
 * To use it on other terms please contact us: info@jeasyui.com
 *
 */
var jq = __webpack_require__(/*! jquery */ "jquery");
__webpack_require__(/*! ./jquery.parser */ "./ClientApp/modules/jquery-plugins/jquery-tooltips/jquery.parser.js");
module.exports = (function ($) {
    function _1(_2) {
        $(_2).addClass("tooltip-f");
    };

    function _3(_4) {
        var _5 = $.data(_4, "tooltip").options;
        $(_4).unbind(".tooltip").bind(_5.showEvent + ".tooltip", function (e) {
            $(_4).tooltip("show", e);
        }).bind(_5.hideEvent + ".tooltip", function (e) {
            $(_4).tooltip("hide", e);
        }).bind("mousemove.tooltip", function (e) {
            if (_5.trackMouse) {
                _5.trackMouseX = e.pageX;
                _5.trackMouseY = e.pageY;
                $(_4).tooltip("reposition");
            }
        });
    };

    function _6(_7) {
        var _8 = $.data(_7, "tooltip");
        if (_8.showTimer) {
            clearTimeout(_8.showTimer);
            _8.showTimer = null;
        }
        if (_8.hideTimer) {
            clearTimeout(_8.hideTimer);
            _8.hideTimer = null;
        }
    };

    function _9(_a) {
        var _b = $.data(_a, "tooltip");
        if (!_b || !_b.tip) {
            return;
        }
        var _c = _b.options;
        var _d = _b.tip;
        var _e = {
            left: -100000,
            top: -100000
        };
        if ($(_a).is(":visible")) {
            _e = _f(_c.position);
            if (_c.position == "top" && _e.top < 0) {
                _e = _f("bottom");
            } else {
                if ((_c.position == "bottom") && (_e.top + _d._outerHeight() > $(window)._outerHeight() + $(document).scrollTop())) {
                    _e = _f("top");
                }
            }
            if (_e.left < 0) {
                if (_c.position == "left") {
                    _e = _f("right");
                } else {
                    $(_a).tooltip("arrow").css("left", _d._outerWidth() / 2 + _e.left);
                    _e.left = 0;
                }
            } else {
                if (_e.left + _d._outerWidth() > $(window)._outerWidth() + $(document)._scrollLeft()) {
                    if (_c.position == "right") {
                        _e = _f("left");
                    } else {
                        var _10 = _e.left;
                        _e.left = $(window)._outerWidth() + $(document)._scrollLeft() - _d._outerWidth();
                        $(_a).tooltip("arrow").css("left", _d._outerWidth() / 2 - (_e.left - _10));
                    }
                }
            }
        }
        _d.css({
            left: _e.left,
            top: _e.top,
            zIndex: (_c.zIndex != undefined ? _c.zIndex : ($.fn.window ? $.fn.window.defaults.zIndex++ : ""))
        });
        _c.onPosition.call(_a, _e.left, _e.top);

        function _f(_11) {
            _c.position = _11 || "bottom";
            _d.removeClass("tooltip-top tooltip-bottom tooltip-left tooltip-right").addClass("tooltip-" + _c.position);
            var _12, top;
            var _13 = $.isFunction(_c.deltaX) ? _c.deltaX.call(_a, _c.position) : _c.deltaX;
            var _14 = $.isFunction(_c.deltaY) ? _c.deltaY.call(_a, _c.position) : _c.deltaY;
            if (_c.trackMouse) {
                t = $();
                _12 = _c.trackMouseX + _13;
                top = _c.trackMouseY + _14;
            } else {
                var t = $(_a);
                _12 = t.offset().left + _13;
                top = t.offset().top + _14;
            }
            switch (_c.position) {
                case "right":
                    _12 += t._outerWidth() + 12 + (_c.trackMouse ? 12 : 0);
                    top -= (_d._outerHeight() - t._outerHeight()) / 2;
                    break;
                case "left":
                    _12 -= _d._outerWidth() + 12 + (_c.trackMouse ? 12 : 0);
                    top -= (_d._outerHeight() - t._outerHeight()) / 2;
                    break;
                case "top":
                    _12 -= (_d._outerWidth() - t._outerWidth()) / 2;
                    top -= _d._outerHeight() + 12 + (_c.trackMouse ? 12 : 0);
                    break;
                case "bottom":
                    _12 -= (_d._outerWidth() - t._outerWidth()) / 2;
                    top += t._outerHeight() + 12 + (_c.trackMouse ? 12 : 0);
                    break;
            }
            return {
                left: _12,
                top: top
            };
        };
    };

    function _15(_16, e) {
        var _17 = $.data(_16, "tooltip");
        var _18 = _17.options;
        var tip = _17.tip;
        if (!tip) {
            tip = $("<div tabindex=\"-1\" class=\"tooltip\">" + "<div class=\"tooltip-content\"></div>" + "<div class=\"tooltip-arrow-outer\"></div>" + "<div class=\"tooltip-arrow\"></div>" + "</div>").appendTo("body");
            _17.tip = tip;
            _19(_16);
        }
        _6(_16);
        _17.showTimer = setTimeout(function () {
            $(_16).tooltip("reposition");
            tip.show();
            _18.onShow.call(_16, e);
            var _1a = tip.children(".tooltip-arrow-outer");
            var _1b = tip.children(".tooltip-arrow");
            var bc = "border-" + _18.position + "-color";
            _1a.add(_1b).css({
                borderTopColor: "",
                borderBottomColor: "",
                borderLeftColor: "",
                borderRightColor: ""
            });
            _1a.css(bc, tip.css(bc));
            _1b.css(bc, tip.css("backgroundColor"));
        }, _18.showDelay);
    };

    function _1c(_1d, e) {
        var _1e = $.data(_1d, "tooltip");
        if (_1e && _1e.tip) {
            _6(_1d);
            _1e.hideTimer = setTimeout(function () {
                _1e.tip.hide();
                _1e.options.onHide.call(_1d, e);
            }, _1e.options.hideDelay);
        }
    };

    function _19(_1f, _20) {
        var _21 = $.data(_1f, "tooltip");
        var _22 = _21.options;
        if (_20) {
            _22.content = _20;
        }
        if (!_21.tip) {
            return;
        }
        var cc = typeof _22.content == "function" ? _22.content.call(_1f) : _22.content;
        _21.tip.children(".tooltip-content").html(cc);
        _22.onUpdate.call(_1f, cc);
    };

    function _23(_24) {
        var _25 = $.data(_24, "tooltip");
        if (_25) {
            _6(_24);
            var _26 = _25.options;
            if (_25.tip) {
                _25.tip.remove();
            }
            if (_26._title) {
                $(_24).attr("title", _26._title);
            }
            $.removeData(_24, "tooltip");
            $(_24).unbind(".tooltip").removeClass("tooltip-f");
            _26.onDestroy.call(_24);
        }
    };
    $.fn.tooltip = function (_27, _28) {
        if (typeof _27 == "string") {
            return $.fn.tooltip.methods[_27](this, _28);
        }
        _27 = _27 || {};
        return this.each(function () {
            var _29 = $.data(this, "tooltip");
            if (_29) {
                $.extend(_29.options, _27);
            } else {
                $.data(this, "tooltip", {
                    options: $.extend({}, $.fn.tooltip.defaults, $.fn.tooltip.parseOptions(this), _27)
                });
                _1(this);
            }
            _3(this);
            _19(this);
        });
    };
    $.fn.tooltip.methods = {
        options: function (jq) {
            return $.data(jq[0], "tooltip").options;
        },
        tip: function (jq) {
            return $.data(jq[0], "tooltip").tip;
        },
        arrow: function (jq) {
            return jq.tooltip("tip").children(".tooltip-arrow-outer,.tooltip-arrow");
        },
        show: function (jq, e) {
            return jq.each(function () {
                _15(this, e);
            });
        },
        hide: function (jq, e) {
            return jq.each(function () {
                _1c(this, e);
            });
        },
        update: function (jq, _2a) {
            return jq.each(function () {
                _19(this, _2a);
            });
        },
        reposition: function (jq) {
            return jq.each(function () {
                _9(this);
            });
        },
        destroy: function (jq) {
            return jq.each(function () {
                _23(this);
            });
        }
    };
    $.fn.tooltip.parseOptions = function (_2b) {
        var t = $(_2b);
        var _2c = $.extend({}, $.parser.parseOptions(_2b, ["position", "showEvent", "hideEvent", "content", {
            trackMouse: "boolean",
            deltaX: "number",
            deltaY: "number",
            showDelay: "number",
            hideDelay: "number"
        }]), {
            _title: t.attr("title")
        });
        t.attr("title", "");
        if (!_2c.content) {
            _2c.content = _2c._title;
        }
        return _2c;
    };
    $.fn.tooltip.defaults = {
        position: "bottom",
        content: null,
        trackMouse: false,
        deltaX: 0,
        deltaY: 0,
        showEvent: "mouseenter",
        hideEvent: "mouseleave",
        showDelay: 200,
        hideDelay: 100,
        onShow: function (e) {},
        onHide: function (e) {},
        onUpdate: function (_2d) {},
        onPosition: function (_2e, top) {},
        onDestroy: function () {}
    };
})(jq);

/***/ }),

/***/ "./ClientApp/modules/jquery-plugins/jquery.ba-hashchange.js":
/*!******************************************************************!*\
  !*** ./ClientApp/modules/jquery-plugins/jquery.ba-hashchange.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * jQuery hashchange event - v1.3 - 7/21/2010
 * http://benalman.com/projects/jquery-hashchange-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery hashchange event
//
// *Version: 1.3, Last updated: 7/21/2010*
// 
// Project Home - http://benalman.com/projects/jquery-hashchange-plugin/
// GitHub       - http://github.com/cowboy/jquery-hashchange/
// Source       - http://github.com/cowboy/jquery-hashchange/raw/master/jquery.ba-hashchange.js
// (Minified)   - http://github.com/cowboy/jquery-hashchange/raw/master/jquery.ba-hashchange.min.js (0.8kb gzipped)
// 
// About: License
// 
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
// 
// About: Examples
// 
// These working examples, complete with fully commented code, illustrate a few
// ways in which this plugin can be used.
// 
// hashchange event - http://benalman.com/code/projects/jquery-hashchange/examples/hashchange/
// document.domain - http://benalman.com/code/projects/jquery-hashchange/examples/document_domain/
// 
// About: Support and Testing
// 
// Information about what version or versions of jQuery this plugin has been
// tested with, what browsers it has been tested in, and where the unit tests
// reside (so you can test it yourself).
// 
// jQuery Versions - 1.2.6, 1.3.2, 1.4.1, 1.4.2
// Browsers Tested - Internet Explorer 6-8, Firefox 2-4, Chrome 5-6, Safari 3.2-5,
//                   Opera 9.6-10.60, iPhone 3.1, Android 1.6-2.2, BlackBerry 4.6-5.
// Unit Tests      - http://benalman.com/code/projects/jquery-hashchange/unit/
// 
// About: Known issues
// 
// While this jQuery hashchange event implementation is quite stable and
// robust, there are a few unfortunate browser bugs surrounding expected
// hashchange event-based behaviors, independent of any JavaScript
// window.onhashchange abstraction. See the following examples for more
// information:
// 
// Chrome: Back Button - http://benalman.com/code/projects/jquery-hashchange/examples/bug-chrome-back-button/
// Firefox: Remote XMLHttpRequest - http://benalman.com/code/projects/jquery-hashchange/examples/bug-firefox-remote-xhr/
// WebKit: Back Button in an Iframe - http://benalman.com/code/projects/jquery-hashchange/examples/bug-webkit-hash-iframe/
// Safari: Back Button from a different domain - http://benalman.com/code/projects/jquery-hashchange/examples/bug-safari-back-from-diff-domain/
// 
// Also note that should a browser natively support the window.onhashchange 
// event, but not report that it does, the fallback polling loop will be used.
// 
// About: Release History
// 
// 1.3   - (7/21/2010) Reorganized IE6/7 Iframe code to make it more
//         "removable" for mobile-only development. Added IE6/7 document.title
//         support. Attempted to make Iframe as hidden as possible by using
//         techniques from http://www.paciellogroup.com/blog/?p=604. Added 
//         support for the "shortcut" format $(window).hashchange( fn ) and
//         $(window).hashchange() like jQuery provides for built-in events.
//         Renamed jQuery.hashchangeDelay to <jQuery.fn.hashchange.delay> and
//         lowered its default value to 50. Added <jQuery.fn.hashchange.domain>
//         and <jQuery.fn.hashchange.src> properties plus document-domain.html
//         file to address access denied issues when setting document.domain in
//         IE6/7.
// 1.2   - (2/11/2010) Fixed a bug where coming back to a page using this plugin
//         from a page on another domain would cause an error in Safari 4. Also,
//         IE6/7 Iframe is now inserted after the body (this actually works),
//         which prevents the page from scrolling when the event is first bound.
//         Event can also now be bound before DOM ready, but it won't be usable
//         before then in IE6/7.
// 1.1   - (1/21/2010) Incorporated document.documentMode test to fix IE8 bug
//         where browser version is incorrectly reported as 8.0, despite
//         inclusion of the X-UA-Compatible IE=EmulateIE7 meta tag.
// 1.0   - (1/9/2010) Initial Release. Broke out the jQuery BBQ event.special
//         window.onhashchange functionality into a separate plugin for users
//         who want just the basic event & back button support, without all the
//         extra awesomeness that BBQ provides. This plugin will be included as
//         part of jQuery BBQ, but also be available separately.

module.exports = (function ($, window) {
    // Reused string.
    var str_hashchange = 'hashchange',

        // Method / object references.
        doc = document,
        fake_onhashchange,
        special = $.event.special,

        // Does the browser support window.onhashchange? Note that IE8 running in
        // IE7 compatibility mode reports true for 'onhashchange' in window, even
        // though the event isn't supported, so also test document.documentMode.
        doc_mode = doc.documentMode,
        supports_onhashchange = 'on' + str_hashchange in window && (doc_mode === undefined || doc_mode > 7);

    // Get location.hash (or what you'd expect location.hash to be) sans any
    // leading #. Thanks for making this necessary, Firefox!
    function get_fragment(url) {
        url = url || location.href;
        return '#' + url.replace(/^[^#]*#?(.*)$/, '$1');
    };

    // Method: jQuery.fn.hashchange
    // 
    // Bind a handler to the window.onhashchange event or trigger all bound
    // window.onhashchange event handlers. This behavior is consistent with
    // jQuery's built-in event handlers.
    // 
    // Usage:
    // 
    // > jQuery(window).hashchange( [ handler ] );
    // 
    // Arguments:
    // 
    //  handler - (Function) Optional handler to be bound to the hashchange
    //    event. This is a "shortcut" for the more verbose form:
    //    jQuery(window).bind( 'hashchange', handler ). If handler is omitted,
    //    all bound window.onhashchange event handlers will be triggered. This
    //    is a shortcut for the more verbose
    //    jQuery(window).trigger( 'hashchange' ). These forms are described in
    //    the <hashchange event> section.
    // 
    // Returns:
    // 
    //  (jQuery) The initial jQuery collection of elements.

    // Allow the "shortcut" format $(elem).hashchange( fn ) for binding and
    // $(elem).hashchange() for triggering, like jQuery does for built-in events.
    $.fn[str_hashchange] = function (fn) {
        return fn ? this.on(str_hashchange, fn) : this.trigger(str_hashchange);
    };

    // Property: jQuery.fn.hashchange.delay
    // 
    // The numeric interval (in milliseconds) at which the <hashchange event>
    // polling loop executes. Defaults to 50.

    // Property: jQuery.fn.hashchange.domain
    // 
    // If you're setting document.domain in your JavaScript, and you want hash
    // history to work in IE6/7, not only must this property be set, but you must
    // also set document.domain BEFORE jQuery is loaded into the page. This
    // property is only applicable if you are supporting IE6/7 (or IE8 operating
    // in "IE7 compatibility" mode).
    // 
    // In addition, the <jQuery.fn.hashchange.src> property must be set to the
    // path of the included "document-domain.html" file, which can be renamed or
    // modified if necessary (note that the document.domain specified must be the
    // same in both your main JavaScript as well as in this file).
    // 
    // Usage:
    // 
    // jQuery.fn.hashchange.domain = document.domain;

    // Property: jQuery.fn.hashchange.src
    // 
    // If, for some reason, you need to specify an Iframe src file (for example,
    // when setting document.domain as in <jQuery.fn.hashchange.domain>), you can
    // do so using this property. Note that when using this property, history
    // won't be recorded in IE6/7 until the Iframe src file loads. This property
    // is only applicable if you are supporting IE6/7 (or IE8 operating in "IE7
    // compatibility" mode).
    // 
    // Usage:
    // 
    // jQuery.fn.hashchange.src = 'path/to/file.html';

    $.fn[str_hashchange].delay = 50;
    /*
    $.fn[ str_hashchange ].domain = null;
    $.fn[ str_hashchange ].src = null;
    */

    // Event: hashchange event
    // 
    // Fired when location.hash changes. In browsers that support it, the native
    // HTML5 window.onhashchange event is used, otherwise a polling loop is
    // initialized, running every <jQuery.fn.hashchange.delay> milliseconds to
    // see if the hash has changed. In IE6/7 (and IE8 operating in "IE7
    // compatibility" mode), a hidden Iframe is created to allow the back button
    // and hash-based history to work.
    // 
    // Usage as described in <jQuery.fn.hashchange>:
    // 
    // > // Bind an event handler.
    // > jQuery(window).hashchange( function(e) {
    // >   var hash = location.hash;
    // >   ...
    // > });
    // > 
    // > // Manually trigger the event handler.
    // > jQuery(window).hashchange();
    // 
    // A more verbose usage that allows for event namespacing:
    // 
    // > // Bind an event handler.
    // > jQuery(window).bind( 'hashchange', function(e) {
    // >   var hash = location.hash;
    // >   ...
    // > });
    // > 
    // > // Manually trigger the event handler.
    // > jQuery(window).trigger( 'hashchange' );
    // 
    // Additional Notes:
    // 
    // * The polling loop and Iframe are not created until at least one handler
    //   is actually bound to the 'hashchange' event.
    // * If you need the bound handler(s) to execute immediately, in cases where
    //   a location.hash exists on page load, via bookmark or page refresh for
    //   example, use jQuery(window).hashchange() or the more verbose 
    //   jQuery(window).trigger( 'hashchange' ).
    // * The event can be bound before DOM ready, but since it won't be usable
    //   before then in IE6/7 (due to the necessary Iframe), recommended usage is
    //   to bind it inside a DOM ready handler.

    // Override existing $.event.special.hashchange methods (allowing this plugin
    // to be defined after jQuery BBQ in BBQ's source code).
    special[str_hashchange] = $.extend(special[str_hashchange], {

        // Called only when the first 'hashchange' event is bound to window.
        setup: function () {
            // If window.onhashchange is supported natively, there's nothing to do..
            if (supports_onhashchange) {
                return false;
            }

            // Otherwise, we need to create our own. And we don't want to call this
            // until the user binds to the event, just in case they never do, since it
            // will create a polling loop and possibly even a hidden Iframe.
            $(fake_onhashchange.start);
        },

        // Called only when the last 'hashchange' event is unbound from window.
        teardown: function () {
            // If window.onhashchange is supported natively, there's nothing to do..
            if (supports_onhashchange) {
                return false;
            }

            // Otherwise, we need to stop ours (if possible).
            $(fake_onhashchange.stop);
        }

    });

    // fake_onhashchange does all the work of triggering the window.onhashchange
    // event for browsers that don't natively support it, including creating a
    // polling loop to watch for hash changes and in IE 6/7 creating a hidden
    // Iframe to enable back and forward.
    fake_onhashchange = (function () {
        var self = {},
            timeout_id,

            // Remember the initial hash so it doesn't get triggered immediately.
            last_hash = get_fragment(),

            fn_retval = function (val) {
                return val;
            },
            history_set = fn_retval,
            history_get = fn_retval;

        // Start the polling loop.
        self.start = function () {
            timeout_id || poll();
        };

        // Stop the polling loop.
        self.stop = function () {
            timeout_id && clearTimeout(timeout_id);
            timeout_id = undefined;
        };

        // This polling loop checks every $.fn.hashchange.delay milliseconds to see
        // if location.hash has changed, and triggers the 'hashchange' event on
        // window when necessary.
        function poll() {
            var hash = get_fragment(),
                history_hash = history_get(last_hash);

            if (hash !== last_hash) {
                history_set(last_hash = hash, history_hash);

                $(window).trigger(str_hashchange);

            } else if (history_hash !== last_hash) {
                location.href = location.href.replace(/#.*/, '') + history_hash;
            }

            timeout_id = setTimeout(poll, $.fn[str_hashchange].delay);
        };

        // vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
        // vvvvvvvvvvvvvvvvvvv REMOVE IF NOT SUPPORTING IE6/7/8 vvvvvvvvvvvvvvvvvvv
        // vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
        !supports_onhashchange && (function () {
            // Not only do IE6/7 need the "magical" Iframe treatment, but so does IE8
            // when running in "IE7 compatibility" mode.

            var iframe,
                iframe_src;

            // When the event is bound and polling starts in IE 6/7, create a hidden
            // Iframe for history handling.
            self.start = function () {
                if (!iframe) {
                    iframe_src = $.fn[str_hashchange].src;
                    iframe_src = iframe_src && iframe_src + get_fragment();

                    // Create hidden Iframe. Attempt to make Iframe as hidden as possible
                    // by using techniques from http://www.paciellogroup.com/blog/?p=604.
                    iframe = $('<iframe tabindex="-1" title="empty"/>').hide()

                        // When Iframe has completely loaded, initialize the history and
                        // start polling.
                        .one('load', function () {
                            iframe_src || history_set(get_fragment());
                            poll();
                        })

                        // Load Iframe src if specified, otherwise nothing.
                        .attr('src', iframe_src || 'javascript:0')

                        // Append Iframe after the end of the body to prevent unnecessary
                        // initial page scrolling (yes, this works).
                        .insertAfter('body')[0].contentWindow;

                    // Whenever `document.title` changes, update the Iframe's title to
                    // prettify the back/next history menu entries. Since IE sometimes
                    // errors with "Unspecified error" the very first time this is set
                    // (yes, very useful) wrap this with a try/catch block.
                    doc.onpropertychange = function () {
                        try {
                            if (event.propertyName === 'title') {
                                iframe.document.title = doc.title;
                            }
                        } catch (e) {}
                    };

                }
            };

            // Override the "stop" method since an IE6/7 Iframe was created. Even
            // if there are no longer any bound event handlers, the polling loop
            // is still necessary for back/next to work at all!
            self.stop = fn_retval;

            // Get history by looking at the hidden Iframe's location.hash.
            history_get = function () {
                return get_fragment(iframe.location.href);
            };

            // Set a new history item by opening and then closing the Iframe
            // document, *then* setting its location.hash. If document.domain has
            // been set, update that as well.
            history_set = function (hash, history_hash) {
                var iframe_doc = iframe.document,
                    domain = $.fn[str_hashchange].domain;

                if (hash !== history_hash) {
                    // Update Iframe with any initial `document.title` that might be set.
                    iframe_doc.title = doc.title;

                    // Opening the Iframe's document after it has been closed is what
                    // actually adds a history entry.
                    iframe_doc.open();

                    // Set document.domain for the Iframe document as well, if necessary.
                    domain && iframe_doc.write('<script>document.domain="' + domain + '"</script>');

                    iframe_doc.close();

                    // Update the Iframe's hash, for great justice.
                    iframe.location.hash = hash;
                }
            };

        })();
        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // ^^^^^^^^^^^^^^^^^^^ REMOVE IF NOT SUPPORTING IE6/7/8 ^^^^^^^^^^^^^^^^^^^
        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        return self;
    })();

})(__webpack_require__(/*! jquery */ "jquery"), window);

/***/ }),

/***/ "./ClientApp/modules/jquery-plugins/jquery.color.js":
/*!**********************************************************!*\
  !*** ./ClientApp/modules/jquery-plugins/jquery.color.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 * jQuery Color Animations v2.1.2
 * https://github.com/jquery/jquery-color
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Wed Jan 16 08:47:09 2013 -0600
 */
(function (jQuery, undefined) {

    var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",

        // plusequals test for += 100 -= 100
        rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
        // a set of RE's that can match strings and generate color tuples.
        stringParsers = [{
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (execResult) {
                return [
                    execResult[1],
                    execResult[2],
                    execResult[3],
                    execResult[4]
                ];
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (execResult) {
                return [
                    execResult[1] * 2.55,
                    execResult[2] * 2.55,
                    execResult[3] * 2.55,
                    execResult[4]
                ];
            }
        }, {
            // this regex ignores A-F because it's compared against an already lowercased string
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function (execResult) {
                return [
                    parseInt(execResult[1], 16),
                    parseInt(execResult[2], 16),
                    parseInt(execResult[3], 16)
                ];
            }
        }, {
            // this regex ignores A-F because it's compared against an already lowercased string
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
            parse: function (execResult) {
                return [
                    parseInt(execResult[1] + execResult[1], 16),
                    parseInt(execResult[2] + execResult[2], 16),
                    parseInt(execResult[3] + execResult[3], 16)
                ];
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function (execResult) {
                return [
                    execResult[1],
                    execResult[2] / 100,
                    execResult[3] / 100,
                    execResult[4]
                ];
            }
        }],

        // jQuery.Color( )
        color = jQuery.Color = function (color, green, blue, alpha) {
            return new jQuery.Color.fn.parse(color, green, blue, alpha);
        },
        spaces = {
            rgba: {
                props: {
                    red: {
                        idx: 0,
                        type: "byte"
                    },
                    green: {
                        idx: 1,
                        type: "byte"
                    },
                    blue: {
                        idx: 2,
                        type: "byte"
                    }
                }
            },

            hsla: {
                props: {
                    hue: {
                        idx: 0,
                        type: "degrees"
                    },
                    saturation: {
                        idx: 1,
                        type: "percent"
                    },
                    lightness: {
                        idx: 2,
                        type: "percent"
                    }
                }
            }
        },
        propTypes = {
            "byte": {
                floor: true,
                max: 255
            },
            "percent": {
                max: 1
            },
            "degrees": {
                mod: 360,
                floor: true
            }
        },
        support = color.support = {},

        // element for support tests
        supportElem = jQuery("<p>")[0],

        // colors = jQuery.Color.names
        colors,

        // local aliases of functions called often
        each = jQuery.each;

    // determine rgba support immediately
    supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
    support.rgba = supportElem.style.backgroundColor.indexOf("rgba") > -1;

    // define cache name and alpha properties
    // for rgba and hsla spaces
    each(spaces, function (spaceName, space) {
        space.cache = "_" + spaceName;
        space.props.alpha = {
            idx: 3,
            type: "percent",
            def: 1
        };
    });

    function clamp(value, prop, allowEmpty) {
        var type = propTypes[prop.type] || {};

        if (value == null) {
            return (allowEmpty || !prop.def) ? null : prop.def;
        }

        // ~~ is an short way of doing floor for positive numbers
        value = type.floor ? ~~value : parseFloat(value);

        // IE will pass in empty strings as value for alpha,
        // which will hit this case
        if (isNaN(value)) {
            return prop.def;
        }

        if (type.mod) {
            // we add mod before modding to make sure that negatives values
            // get converted properly: -10 -> 350
            return (value + type.mod) % type.mod;
        }

        // for now all property types without mod have min and max
        return 0 > value ? 0 : type.max < value ? type.max : value;
    }

    function stringParse(string) {
        var inst = color(),
            rgba = inst._rgba = [];

        string = string.toLowerCase();

        each(stringParsers, function (i, parser) {
            var parsed,
                match = parser.re.exec(string),
                values = match && parser.parse(match),
                spaceName = parser.space || "rgba";

            if (values) {
                parsed = inst[spaceName](values);

                // if this was an rgba parse the assignment might happen twice
                // oh well....
                inst[spaces[spaceName].cache] = parsed[spaces[spaceName].cache];
                rgba = inst._rgba = parsed._rgba;

                // exit each( stringParsers ) here because we matched
                return false;
            }
        });

        // Found a stringParser that handled it
        if (rgba.length) {

            // if this came from a parsed string, force "transparent" when alpha is 0
            // chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
            if (rgba.join() === "0,0,0,0") {
                jQuery.extend(rgba, colors.transparent);
            }
            return inst;
        }

        // named colors
        return colors[string];
    }

    color.fn = jQuery.extend(color.prototype, {
        parse: function (red, green, blue, alpha) {
            if (red === undefined) {
                this._rgba = [null, null, null, null];
                return this;
            }
            if (red.jquery || red.nodeType) {
                red = jQuery(red).css(green);
                green = undefined;
            }

            var inst = this,
                type = jQuery.type(red),
                rgba = this._rgba = [];

            // more than 1 argument specified - assume ( red, green, blue, alpha )
            if (green !== undefined) {
                red = [red, green, blue, alpha];
                type = "array";
            }

            if (type === "string") {
                return this.parse(stringParse(red) || colors._default);
            }

            if (type === "array") {
                each(spaces.rgba.props, function (key, prop) {
                    rgba[prop.idx] = clamp(red[prop.idx], prop);
                });
                return this;
            }

            if (type === "object") {
                if (red instanceof color) {
                    each(spaces, function (spaceName, space) {
                        if (red[space.cache]) {
                            inst[space.cache] = red[space.cache].slice();
                        }
                    });
                } else {
                    each(spaces, function (spaceName, space) {
                        var cache = space.cache;
                        each(space.props, function (key, prop) {

                            // if the cache doesn't exist, and we know how to convert
                            if (!inst[cache] && space.to) {

                                // if the value was null, we don't need to copy it
                                // if the key was alpha, we don't need to copy it either
                                if (key === "alpha" || red[key] == null) {
                                    return;
                                }
                                inst[cache] = space.to(inst._rgba);
                            }

                            // this is the only case where we allow nulls for ALL properties.
                            // call clamp with alwaysAllowEmpty
                            inst[cache][prop.idx] = clamp(red[key], prop, true);
                        });

                        // everything defined but alpha?
                        if (inst[cache] && jQuery.inArray(null, inst[cache].slice(0, 3)) < 0) {
                            // use the default of 1
                            inst[cache][3] = 1;
                            if (space.from) {
                                inst._rgba = space.from(inst[cache]);
                            }
                        }
                    });
                }
                return this;
            }
        },
        is: function (compare) {
            var is = color(compare),
                same = true,
                inst = this;

            each(spaces, function (_, space) {
                var localCache,
                    isCache = is[space.cache];
                if (isCache) {
                    localCache = inst[space.cache] || space.to && space.to(inst._rgba) || [];
                    each(space.props, function (_, prop) {
                        if (isCache[prop.idx] != null) {
                            same = (isCache[prop.idx] === localCache[prop.idx]);
                            return same;
                        }
                    });
                }
                return same;
            });
            return same;
        },
        _space: function () {
            var used = [],
                inst = this;
            each(spaces, function (spaceName, space) {
                if (inst[space.cache]) {
                    used.push(spaceName);
                }
            });
            return used.pop();
        },
        transition: function (other, distance) {
            var end = color(other),
                spaceName = end._space(),
                space = spaces[spaceName],
                startColor = this.alpha() === 0 ? color("transparent") : this,
                start = startColor[space.cache] || space.to(startColor._rgba),
                result = start.slice();

            end = end[space.cache];
            each(space.props, function (key, prop) {
                var index = prop.idx,
                    startValue = start[index],
                    endValue = end[index],
                    type = propTypes[prop.type] || {};

                // if null, don't override start value
                if (endValue === null) {
                    return;
                }
                // if null - use end
                if (startValue === null) {
                    result[index] = endValue;
                } else {
                    if (type.mod) {
                        if (endValue - startValue > type.mod / 2) {
                            startValue += type.mod;
                        } else if (startValue - endValue > type.mod / 2) {
                            startValue -= type.mod;
                        }
                    }
                    result[index] = clamp((endValue - startValue) * distance + startValue, prop);
                }
            });
            return this[spaceName](result);
        },
        blend: function (opaque) {
            // if we are already opaque - return ourself
            if (this._rgba[3] === 1) {
                return this;
            }

            var rgb = this._rgba.slice(),
                a = rgb.pop(),
                blend = color(opaque)._rgba;

            return color(jQuery.map(rgb, function (v, i) {
                return (1 - a) * blend[i] + a * v;
            }));
        },
        toRgbaString: function () {
            var prefix = "rgba(",
                rgba = jQuery.map(this._rgba, function (v, i) {
                    return v == null ? (i > 2 ? 1 : 0) : v;
                });

            if (rgba[3] === 1) {
                rgba.pop();
                prefix = "rgb(";
            }

            return prefix + rgba.join() + ")";
        },
        toHslaString: function () {
            var prefix = "hsla(",
                hsla = jQuery.map(this.hsla(), function (v, i) {
                    if (v == null) {
                        v = i > 2 ? 1 : 0;
                    }

                    // catch 1 and 2
                    if (i && i < 3) {
                        v = Math.round(v * 100) + "%";
                    }
                    return v;
                });

            if (hsla[3] === 1) {
                hsla.pop();
                prefix = "hsl(";
            }
            return prefix + hsla.join() + ")";
        },
        toHexString: function (includeAlpha) {
            var rgba = this._rgba.slice(),
                alpha = rgba.pop();

            if (includeAlpha) {
                rgba.push(~~(alpha * 255));
            }

            return "#" + jQuery.map(rgba, function (v) {

                // default to 0 when nulls exist
                v = (v || 0).toString(16);
                return v.length === 1 ? "0" + v : v;
            }).join("");
        },
        toString: function () {
            return this._rgba[3] === 0 ? "transparent" : this.toRgbaString();
        }
    });
    color.fn.parse.prototype = color.fn;

    // hsla conversions adapted from:
    // https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

    function hue2rgb(p, q, h) {
        h = (h + 1) % 1;
        if (h * 6 < 1) {
            return p + (q - p) * h * 6;
        }
        if (h * 2 < 1) {
            return q;
        }
        if (h * 3 < 2) {
            return p + (q - p) * ((2 / 3) - h) * 6;
        }
        return p;
    }

    spaces.hsla.to = function (rgba) {
        if (rgba[0] == null || rgba[1] == null || rgba[2] == null) {
            return [null, null, null, rgba[3]];
        }
        var r = rgba[0] / 255,
            g = rgba[1] / 255,
            b = rgba[2] / 255,
            a = rgba[3],
            max = Math.max(r, g, b),
            min = Math.min(r, g, b),
            diff = max - min,
            add = max + min,
            l = add * 0.5,
            h, s;

        if (min === max) {
            h = 0;
        } else if (r === max) {
            h = (60 * (g - b) / diff) + 360;
        } else if (g === max) {
            h = (60 * (b - r) / diff) + 120;
        } else {
            h = (60 * (r - g) / diff) + 240;
        }

        // chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
        // otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
        if (diff === 0) {
            s = 0;
        } else if (l <= 0.5) {
            s = diff / add;
        } else {
            s = diff / (2 - add);
        }
        return [Math.round(h) % 360, s, l, a == null ? 1 : a];
    };

    spaces.hsla.from = function (hsla) {
        if (hsla[0] == null || hsla[1] == null || hsla[2] == null) {
            return [null, null, null, hsla[3]];
        }
        var h = hsla[0] / 360,
            s = hsla[1],
            l = hsla[2],
            a = hsla[3],
            q = l <= 0.5 ? l * (1 + s) : l + s - l * s,
            p = 2 * l - q;

        return [
            Math.round(hue2rgb(p, q, h + (1 / 3)) * 255),
            Math.round(hue2rgb(p, q, h) * 255),
            Math.round(hue2rgb(p, q, h - (1 / 3)) * 255),
            a
        ];
    };


    each(spaces, function (spaceName, space) {
        var props = space.props,
            cache = space.cache,
            to = space.to,
            from = space.from;

        // makes rgba() and hsla()
        color.fn[spaceName] = function (value) {

            // generate a cache for this space if it doesn't exist
            if (to && !this[cache]) {
                this[cache] = to(this._rgba);
            }
            if (value === undefined) {
                return this[cache].slice();
            }

            var ret,
                type = jQuery.type(value),
                arr = (type === "array" || type === "object") ? value : arguments,
                local = this[cache].slice();

            each(props, function (key, prop) {
                var val = arr[type === "object" ? key : prop.idx];
                if (val == null) {
                    val = local[prop.idx];
                }
                local[prop.idx] = clamp(val, prop);
            });

            if (from) {
                ret = color(from(local));
                ret[cache] = local;
                return ret;
            } else {
                return color(local);
            }
        };

        // makes red() green() blue() alpha() hue() saturation() lightness()
        each(props, function (key, prop) {
            // alpha is included in more than one space
            if (color.fn[key]) {
                return;
            }
            color.fn[key] = function (value) {
                var vtype = jQuery.type(value),
                    fn = (key === "alpha" ? (this._hsla ? "hsla" : "rgba") : spaceName),
                    local = this[fn](),
                    cur = local[prop.idx],
                    match;

                if (vtype === "undefined") {
                    return cur;
                }

                if (vtype === "function") {
                    value = value.call(this, cur);
                    vtype = jQuery.type(value);
                }
                if (value == null && prop.empty) {
                    return this;
                }
                if (vtype === "string") {
                    match = rplusequals.exec(value);
                    if (match) {
                        value = cur + parseFloat(match[2]) * (match[1] === "+" ? 1 : -1);
                    }
                }
                local[prop.idx] = value;
                return this[fn](local);
            };
        });
    });

    // add cssHook and .fx.step function for each named hook.
    // accept a space separated string of properties
    color.hook = function (hook) {
        var hooks = hook.split(" ");
        each(hooks, function (i, hook) {
            jQuery.cssHooks[hook] = {
                set: function (elem, value) {
                    var parsed, curElem,
                        backgroundColor = "";

                    if (value !== "transparent" && (jQuery.type(value) !== "string" || (parsed = stringParse(value)))) {
                        value = color(parsed || value);
                        if (!support.rgba && value._rgba[3] !== 1) {
                            curElem = hook === "backgroundColor" ? elem.parentNode : elem;
                            while (
                                (backgroundColor === "" || backgroundColor === "transparent") &&
                                curElem && curElem.style
                            ) {
                                try {
                                    backgroundColor = jQuery.css(curElem, "backgroundColor");
                                    curElem = curElem.parentNode;
                                } catch (e) {}
                            }

                            value = value.blend(backgroundColor && backgroundColor !== "transparent" ?
                                backgroundColor :
                                "_default");
                        }

                        value = value.toRgbaString();
                    }
                    try {
                        elem.style[hook] = value;
                    } catch (e) {
                        // wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
                    }
                }
            };
            jQuery.fx.step[hook] = function (fx) {
                if (!fx.colorInit) {
                    fx.start = color(fx.elem, hook);
                    fx.end = color(fx.end);
                    fx.colorInit = true;
                }
                jQuery.cssHooks[hook].set(fx.elem, fx.start.transition(fx.end, fx.pos));
            };
        });

    };

    color.hook(stepHooks);

    jQuery.cssHooks.borderColor = {
        expand: function (value) {
            var expanded = {};

            each(["Top", "Right", "Bottom", "Left"], function (i, part) {
                expanded["border" + part + "Color"] = value;
            });
            return expanded;
        }
    };

    // Basic color names only.
    // Usage of any of the other color names requires adding yourself or including
    // jquery.color.svg-names.js.
    colors = jQuery.Color.names = {
        // 4.1. Basic color keywords
        aqua: "#00ffff",
        black: "#000000",
        blue: "#0000ff",
        fuchsia: "#ff00ff",
        gray: "#808080",
        green: "#008000",
        lime: "#00ff00",
        maroon: "#800000",
        navy: "#000080",
        olive: "#808000",
        purple: "#800080",
        red: "#ff0000",
        silver: "#c0c0c0",
        teal: "#008080",
        white: "#ffffff",
        yellow: "#ffff00",

        // 4.2.3. "transparent" color keyword
        transparent: [null, null, null, 0],

        _default: "#ffffff"
    };

})(jQuery);

/***/ }),

/***/ "./ClientApp/modules/jquery-plugins/jquery.postfixed.js":
/*!**************************************************************!*\
  !*** ./ClientApp/modules/jquery-plugins/jquery.postfixed.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
$.extend($.fn, {
    posfixed: function (configSettings) {
        var settings = {
            direction: "top",
            type: "while",
            hide: false,
            distance: 0
        };
        $.extend(settings, configSettings);

        //initial
        if ($.support.msie && $.support.version == 6.0) {
            $("html").css("overflow", "hidden");
            $("body").css({
                height: "100%",
                overflow: "auto"
            });
        }

        var obj = this;
        var initPos = $(obj).offset().top;
        var initPosLeft = $(obj).offset().left;
        var anchoredPos = typeof settings.distance === 'object' ? settings.distance : (parseInt(settings.distance) || 0);

        if (settings.type == "while") {
            if ($.support.msie && $.support.version == 6.0) {
                $("body").scroll(function (event) {
                    var objTop = $(obj).offset().top - $("body").scrollTop();
                    if (objTop <= anchoredPos) {
                        $(obj).css("position", "absolute");
                        $(obj).css("top", anchoredPos + "px");
                        $(obj).css("left", initPosLeft + "px");
                    }
                    if ($(obj).offset().top <= initPos) {
                        $(obj).css("position", "static");
                    }
                });

            } else {
                var objHeight = $(obj).outerHeight(true);
                var parent = $(obj).parent();
                $(window).scroll(function (event) {
                    var documentHeigth = $(document).height();
                    if (settings.direction === "top") {
                        var objTop = $(obj).offset().top - $(window).scrollTop();

                        if (objTop <= anchoredPos) {
                            $(obj).css("position", "fixed");
                            $(obj).css(settings.direction, anchoredPos + "px");

                        }
                        if ($(obj).offset().top <= initPos) {
                            $(obj).css("position", "static");
                        }
                    } else if (settings.direction === "top-bottom") {
                        var offset = $(obj).offset(),
                            st = $(window).scrollTop();
                        if (initPos + objHeight + anchoredPos.bottom >= documentHeigth) {
                            $(obj).css("position", "static");
                            return true;
                        }
                        var objTop = offset.top - st;
                        if (objTop <= anchoredPos.top) {
                            $(obj).css("position", "fixed");
                            $(obj).css('top', anchoredPos.top + "px");
                            var subs = (documentHeigth - anchoredPos.bottom - st) - (anchoredPos.top + objHeight);
                            if (subs < 0) {
                                $(obj).css('top', (anchoredPos.top + subs) + "px");
                            }
                        }
                        if ($(obj).offset().top <= initPos) {
                            $(obj).css("position", "static");
                        }
                    } else {
                        var objBottom = $(window).height() - $(obj).offset().top + $(window).scrollTop() - $(obj).outerHeight();

                        if (objBottom <= anchoredPos) {

                            $(obj).css("position", "fixed");
                            $(obj).css(settings.direction, anchoredPos + "px");

                        }
                        if ($(obj).offset().top >= initPos) {
                            $(obj).css("position", "static");
                        }
                    }
                });
            }
        }

        if (settings.type == "always") {
            if ($.support.msie && $.support.version == 6.0) {
                if (settings.hide) {
                    $(obj).hide();
                }
                $("body").scroll(function (event) {
                    if ($("body").scrollTop() > 300) {
                        $(obj).fadeIn(200);
                    } else {
                        $(obj).fadeOut(200);
                    }
                });
                $(obj).css("position", "absolute");
                $(obj).css(settings.direction, anchoredPos + "px");
                if (settings.tag != null) {
                    if (settings.tag.obj != null) {
                        if (settings.tag.direction == "right") {
                            $(obj).css("left", (settings.tag.obj.offset().left + settings.tag.obj.width() + settings.tag.distance) + "px");
                            $(window).resize(function () {
                                $(obj).css("left", (settings.obj.tag.offset().left + settings.tag.obj.width() + settings.tag.distance) + "px");
                            });
                        } else {
                            console.log(settings.tag.obj.offset().left - settings.tag.obj.width() - settings.tag.distance);
                            $(obj).css("left", (settings.tag.obj.offset().left - $(obj).outerWidth() - settings.tag.distance) + "px");
                            $(window).resize(function () {
                                $(obj).css("left", (settings.tag.obj.offset().left - $(obj).outerWidth() - settings.tag.distance) + "px");
                            });
                        }

                    } else {
                        $(obj).css(settings.tag.direction, settings.tag.distance + "px");
                    }
                }

            } else {
                if (settings.hide) {
                    $(obj).hide();
                }
                $(window).scroll(function (event) {
                    if ($(window).scrollTop() > 300) {
                        $(obj).fadeIn(200);
                    } else {
                        $(obj).fadeOut(200);
                    }
                });
                var objLeft = $(obj).offset().left;

                $(obj).css("position", "fixed");
                $(obj).css(settings.direction, anchoredPos + "px");
                if (settings.tag != null) {
                    if (settings.tag.obj != null) {
                        if (settings.tag.direction == "right") {
                            $(obj).css("left", (settings.tag.obj.offset().left + settings.tag.obj.width() + settings.tag.distance) + "px");
                            $(window).resize(function () {
                                $(obj).css("left", (settings.obj.tag.offset().left + settings.tag.obj.width() + settings.tag.distance) + "px");
                            });
                        } else {
                            console.log(settings.tag.obj.offset().left - settings.tag.obj.width() - settings.tag.distance);
                            $(obj).css("left", (settings.tag.obj.offset().left - $(obj).outerWidth() - settings.tag.distance) + "px");
                            $(window).resize(function () {
                                $(obj).css("left", (settings.tag.obj.offset().left - $(obj).outerWidth() - settings.tag.distance) + "px");
                            });
                        }

                    } else {
                        $(obj).css(settings.tag.direction, settings.tag.distance + "px");
                    }
                }
            }
        }
    }
});

module.exports = $.posfixed;

/***/ }),

/***/ "./ClientApp/modules/jquery-plugins/jquery.vticker.js":
/*!************************************************************!*\
  !*** ./ClientApp/modules/jquery-plugins/jquery.vticker.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
* vertical news ticker
* Tadas Juozapaitis ( kasp3rito@gmail.com )
* http://www.jugbit.com/jquery-vticker-vertical-news-ticker/
* v 1.4
*/
module.exports = (function ($) {
    $.fn.vTicker = function (options) {
        var defaults = {
            speed: 700,
            pause: 4000,
            showItems: 3,
            animation: '',
            mousePause: true,
            isPaused: false,
            direction: 'up',
            height: 0
        };

        var options = $.extend(defaults, options);

        moveUp = function (obj2, height, options) {
            if (options.isPaused)
                return;

            var obj = obj2.children('ul');

            var clone = obj.children('li:first').clone(true);

            if (options.height > 0) {
                height = obj.children('li:first').height();
            }

            obj.animate({ top: '-=' + height + 'px' }, options.speed, function () {
                $(this).children('li:first').remove();
                $(this).css('top', '0px');
            });

            if (options.animation == 'fade') {
                obj.children('li:first').fadeOut(options.speed);
                if (options.height == 0) {
                    obj.children('li:eq(' + options.showItems + ')').hide().fadeIn(options.speed).show();
                }
            }

            clone.appendTo(obj);
        };

        moveDown = function (obj2, height, options) {
            if (options.isPaused)
                return;

            var obj = obj2.children('ul');

            var clone = obj.children('li:last').clone(true);

            if (options.height > 0) {
                height = obj.children('li:first').height();
            }

            obj.css('top', '-' + height + 'px')
			.prepend(clone);

            obj.animate({ top: 0 }, options.speed, function () {
                $(this).children('li:last').remove();
            });

            if (options.animation == 'fade') {
                if (options.height == 0) {
                    obj.children('li:eq(' + options.showItems + ')').fadeOut(options.speed);
                }
                obj.children('li:first').hide().fadeIn(options.speed).show();
            }
        };

        return this.each(function () {
            var obj = $(this);
            var maxHeight = 0;

            obj.css({ overflow: 'hidden', position: 'relative' })
			.children('ul').css({ position: 'absolute', margin: 0, padding: 0 })
			.children('li').css({ margin: 0, padding: 0 });

            if (options.height == 0) {
                obj.children('ul').children('li').each(function () {
                    if ($(this).height() > maxHeight) {
                        maxHeight = $(this).height();
                    }
                });

                obj.children('ul').children('li').each(function () {
                    $(this).height(maxHeight);
                });

                obj.height(maxHeight * options.showItems);
            }
            else {
                obj.height(options.height);
            }
            clearInterval(obj.data('vticker-id'));
            var interval = setInterval(function () {
                if (options.direction == 'up') {
                    moveUp(obj, maxHeight, options);
                }
                else {
                    moveDown(obj, maxHeight, options);
                }
            }, options.pause);
            obj.data('vticker-id', interval);
            if (options.mousePause) {
                obj.bind("mouseenter", function () {
                    options.isPaused = true;
                }).bind("mouseleave", function () {
                    options.isPaused = false;
                });
            }
        });
    };
})(__webpack_require__(/*! jquery */ "jquery"));

/***/ }),

/***/ "./ClientApp/modules/jsonp.js":
/*!************************************!*\
  !*** ./ClientApp/modules/jsonp.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * JSONP实现
 * @param {string} url url
 * @param {object} [data] 请求参数
 * @param {string} [method] 回调参数
 * @param {function} callback 回调方法
 * @param {function} [error] 异常回调
 */
function JSONP(url, data, method, callback, error) {
    //Set the defaults
    url = url || '';
    data = data || {};
    method = method || '';
    callback = callback || function () {};

    //Gets all the keys that belong
    //to an object
    var getKeys = function (obj) {
        var keys = [];
        for (var key in obj) {
            if (obj.hasOwnProperty(key)) {
                keys.push(key);
            }
        }
        return keys;
    }

    //Turn the data object into a query string.
    //Add check to see if the second parameter is indeed
    //a data object. If not, keep the default behaviour
    if (typeof data == 'object') {
        var queryString = '';
        var keys = getKeys(data);
        for (var i = 0; i < keys.length; i++) {
            queryString += encodeURIComponent(keys[i]) + '=' + encodeURIComponent(data[keys[i]])
            if (i != keys.length - 1) {
                queryString += '&';
            }
        }
        url += queryString ? (url.indexOf('?') > 0 ? '&' : '?') + queryString : '';
    } else if (typeof data == 'function') {
        method = data;
        callback = method;
    }

    //If no method was set and they used the callback param in place of
    //the method param instead, we say method is callback and set a
    //default method of "callback"
    if (typeof method == 'function') {
        callback = method;
        method = 'callback';
    }

    //Check to see if we have Date.now available, if not shim it for older browsers
    if (!Date.now) {
        Date.now = function () {
            return new Date().getTime();
        };
    }

    //Use timestamp + a random factor to account for a lot of requests in a short time
    //e.g. jsonp1394571775161 
    var timestamp = Date.now();
    var generatedFunction = 'jsonp' + Math.round(timestamp + Math.random() * 1000001)

    //Generate the temp JSONP function using the name above
    //First, call the function the user defined in the callback param [callback(json)]
    //Then delete the generated function from the window [delete window[generatedFunction]]
    window[generatedFunction] = function (json) {



        callback(json);

        // IE8 throws an exception when you try to delete a property on window
        // http://stackoverflow.com/a/1824228/751089
        try {
            delete window[generatedFunction];
        } catch (e) {
            window[generatedFunction] = undefined;
        }

        try {
            document.getElementById(generatedFunction).parentNode.removeChild(document.getElementById(generatedFunction));
        } catch (error) {
            throw error;
        }

    };

    //Check if the user set their own params, and if not add a ? to start a list of params
    //If in fact they did we add a & to add onto the params
    //example1: url = http://url.com THEN http://url.com?callback=X
    //example2: url = http://url.com?example=param THEN http://url.com?example=param&callback=X
    if (url.indexOf('?') === -1) {
        url = url + '?';
    } else {
        url = url + '&';
    }

    //This generates the <script> tag
    var jsonpScript = document.createElement('script');
    jsonpScript.id = generatedFunction;
    jsonpScript.className = 'jsonp';
    jsonpScript.setAttribute("src", url + method + '=' + generatedFunction);
    if (typeof error === "function")
        jsonpScript.onerror = error;
    document.getElementsByTagName("head")[0].appendChild(jsonpScript);
    jsonpScript.abort = function () {
        trigger(jsonpScript, 'error');
    }
    return jsonpScript;
}

/**
 * 事件触发器
 * @param {HTMLElement} element DOM元素
 * @param {string} event 事件类型
 */
function trigger(element, event) {
    if (typeof event !== 'string') throw 'Unknown event type' + event;
    if (element.dispatchEvent) {
        var evt = document.createEvent('Events'); // initEvent接受3个参数
        evt.initEvent(event, true, true);
        element.dispatchEvent(evt);
    } else if (element.fireEvent) { //IE
        element.fireEvent('on' + event);
    } else {
        element['on' + event]();
    }
}


module.exports = JSONP;

/***/ }),

/***/ "./ClientApp/modules/listview/css/listview.css":
/*!*****************************************************!*\
  !*** ./ClientApp/modules/listview/css/listview.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/modules/listview/css/net-fixedheader-dt.css":
/*!***************************************************************!*\
  !*** ./ClientApp/modules/listview/css/net-fixedheader-dt.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./ClientApp/modules/listview/dataTable.fixedHeader.js":
/*!*************************************************************!*\
  !*** ./ClientApp/modules/listview/dataTable.fixedHeader.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
var throttle = _.throttle
if (!$.fn.dataTable) __webpack_require__(/*! datatables.net */ "./node_modules/datatables.net/js/jquery.dataTables.js");

var DataTable = $.fn.dataTable;

var _instCounter = 0;

var FixedHeader = function (dt, config) {
    // Sanity check - you just know it will happen
    if (!(this instanceof FixedHeader)) {
        throw "FixedHeader must be initialised with the 'new' keyword.";
    }

    // Allow a boolean true for defaults
    if (config === true) {
        config = {};
    }

    dt = new DataTable.Api(dt);

    this.c = $.extend(true, {}, FixedHeader.defaults, config);

    this.s = {
        dt: dt,
        position: {
            theadTop: 0,
            tbodyTop: 0,
            tfootTop: 0,
            tfootBottom: 0,
            width: 0,
            left: 0,
            tfootHeight: 0,
            theadHeight: 0,
            windowHeight: $(window).height(),
            visible: true
        },
        headerMode: null,
        footerMode: null,
        autoWidth: dt.settings()[0].oFeatures.bAutoWidth,
        namespace: '.dtfc' + (_instCounter++),
        scrollLeft: {
            header: -1,
            footer: -1
        },
        enable: true
    };

    this.dom = {
        floatingHeader: null,
        thead: $(dt.table().header()),
        tbody: $(dt.table().body()),
        tfoot: $(dt.table().footer()),
        header: {
            host: null,
            floating: null,
            placeholder: null
        },
        footer: {
            host: null,
            floating: null,
            placeholder: null
        }
    };

    this.dom.header.host = this.dom.thead.parent();
    this.dom.footer.host = this.dom.tfoot.parent();

    var dtSettings = dt.settings()[0];
    if (dtSettings._fixedHeader) {
        throw "FixedHeader already initialised on table " + dtSettings.nTable.id;
    }

    dtSettings._fixedHeader = this;

    this._constructor();
};


/*
 * Variable: FixedHeader
 * Purpose:  Prototype for FixedHeader
 * Scope:    global
 */
$.extend(FixedHeader.prototype, {
    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     * API methods
     */

    /**
     * Enable / disable the fixed elements
     *
     * @param  {boolean} enable `true` to enable, `false` to disable
     */
    enable: function (enable) {
        this.s.enable = enable;

        if (this.c.header) {
            this._modeChange('in-place', 'header', true);
        }

        if (this.c.footer && this.dom.tfoot.length) {
            this._modeChange('in-place', 'footer', true);
        }

        this.update();
    },

    /**
     * Set header offset 
     *
     * @param  {int} new value for headerOffset
     */
    headerOffset: function (offset) {
        if (offset !== undefined) {
            this.c.headerOffset = offset;
            this.update();
        }

        return this.c.headerOffset;
    },

    /**
     * Set footer offset
     *
     * @param  {int} new value for footerOffset
     */
    footerOffset: function (offset) {
        if (offset !== undefined) {
            this.c.footerOffset = offset;
            this.update();
        }

        return this.c.footerOffset;
    },


    /**
     * Recalculate the position of the fixed elements and force them into place
     */
    update: function () {
        this._positions();
        this._scroll(true);
    },


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     * Constructor
     */

    /**
     * FixedHeader constructor - adding the required event listeners and
     * simple initialisation
     *
     * @private
     */
    _constructor: function () {
        var that = this;
        var dt = this.s.dt;

        function scrollevt(e) {
            that._scroll();
        }
        $(window)
            .on('scroll' + this.s.namespace, throttle ? throttle(scrollevt, 50) : scrollevt)
            .on('resize' + this.s.namespace, function () {
                that.s.position.windowHeight = $(window).height();
                that.update();
            });

        var autoHeader = $('.fh-fixedHeader');
        if (!this.c.headerOffset && autoHeader.length) {
            this.c.headerOffset = autoHeader.outerHeight();
        }

        var autoFooter = $('.fh-fixedFooter');
        if (!this.c.footerOffset && autoFooter.length) {
            this.c.footerOffset = autoFooter.outerHeight();
        }

        dt.on('column-reorder.dt.dtfc column-visibility.dt.dtfc draw.dt.dtfc column-sizing.dt.dtfc', function () {
            that.update();
        });

        dt.on('destroy.dtfc', function () {
            dt.off('.dtfc');
            $(window).off(that.s.namespace);
        });

        this._positions();
        this._scroll();
    },


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     * Private methods
     */

    /**
     * Clone a fixed item to act as a place holder for the original element
     * which is moved into a clone of the table element, and moved around the
     * document to give the fixed effect.
     *
     * @param  {string}  item  'header' or 'footer'
     * @param  {boolean} force Force the clone to happen, or allow automatic
     *   decision (reuse existing if available)
     * @private
     */
    _clone: function (item, force) {
        var dt = this.s.dt;
        var itemDom = this.dom[item];
        var itemElement = item === 'header' ?
            this.dom.thead :
            this.dom.tfoot;

        if (!force && itemDom.floating) {
            // existing floating element - reuse it
            itemDom.floating.removeClass('fixedHeader-floating fixedHeader-locked');
        } else {
            if (itemDom.floating) {
                itemDom.placeholder.remove();
                this._unsize(item);
                itemDom.floating.children().detach();
                itemDom.floating.remove();
            }

            itemDom.floating = $(dt.table().node().cloneNode(false))
                .css('table-layout', 'fixed')
                .removeAttr('id')
                .append(itemElement)
                .appendTo('body');

            // Insert a fake thead/tfoot into the DataTable to stop it jumping around
            itemDom.placeholder = itemElement.clone(false)
            itemDom.placeholder
                .find('*[id]')
                .removeAttr('id');

            itemDom.host.prepend(itemDom.placeholder);

            // Clone widths
            this._matchWidths(itemDom.placeholder, itemDom.floating);
        }
    },

    /**
     * Copy widths from the cells in one element to another. This is required
     * for the footer as the footer in the main table takes its sizes from the
     * header columns. That isn't present in the footer so to have it still
     * align correctly, the sizes need to be copied over. It is also required
     * for the header when auto width is not enabled
     *
     * @param  {jQuery} from Copy widths from
     * @param  {jQuery} to   Copy widths to
     * @private
     */
    _matchWidths: function (from, to) {
        var get = function (name) {
            return $(name, from)
                .map(function () {
                    return $(this).width();
                }).toArray();
        };

        var set = function (name, toWidths) {
            $(name, to).each(function (i) {
                $(this).css({
                    width: toWidths[i],
                    minWidth: toWidths[i]
                });
            });
        };

        var thWidths = get('th');
        var tdWidths = get('td');

        set('th', thWidths);
        set('td', tdWidths);
    },

    /**
     * Remove assigned widths from the cells in an element. This is required
     * when inserting the footer back into the main table so the size is defined
     * by the header columns and also when auto width is disabled in the
     * DataTable.
     *
     * @param  {string} item The `header` or `footer`
     * @private
     */
    _unsize: function (item) {
        var el = this.dom[item].floating;

        if (el && (item === 'footer' || (item === 'header' && !this.s.autoWidth))) {
            $('th, td', el).css({
                width: '',
                minWidth: ''
            });
        } else if (el && item === 'header') {
            $('th, td', el).css('min-width', '');
        }
    },

    /**
     * Reposition the floating elements to take account of horizontal page
     * scroll
     *
     * @param  {string} item       The `header` or `footer`
     * @param  {int}    scrollLeft Document scrollLeft
     * @private
     */
    _horizontal: function (item, scrollLeft) {
        var itemDom = this.dom[item];
        var position = this.s.position;
        var lastScrollLeft = this.s.scrollLeft;

        if (itemDom.floating && lastScrollLeft[item] !== scrollLeft) {
            itemDom.floating.css('left', position.left - scrollLeft);

            lastScrollLeft[item] = scrollLeft;
        }
    },

    /**
     * Change from one display mode to another. Each fixed item can be in one
     * of:
     *
     * * `in-place` - In the main DataTable
     * * `in` - Floating over the DataTable
     * * `below` - (Header only) Fixed to the bottom of the table body
     * * `above` - (Footer only) Fixed to the top of the table body
     * 
     * @param  {string}  mode        Mode that the item should be shown in
     * @param  {string}  item        'header' or 'footer'
     * @param  {boolean} forceChange Force a redraw of the mode, even if already
     *     in that mode.
     * @private
     */
    _modeChange: function (mode, item, forceChange) {
        var dt = this.s.dt;
        var itemDom = this.dom[item];
        var position = this.s.position;

        // Record focus. Browser's will cause input elements to loose focus if
        // they are inserted else where in the doc
        var tablePart = this.dom[item === 'footer' ? 'tfoot' : 'thead'];
        var focus = $.contains(tablePart[0], document.activeElement) ?
            document.activeElement :
            null;

        if (mode === 'in-place') {
            // Insert the header back into the table's real header
            if (itemDom.placeholder) {
                itemDom.placeholder.remove();
                itemDom.placeholder = null;
            }

            this._unsize(item);

            if (item === 'header') {
                itemDom.host.prepend(this.dom.thead);
            } else {
                itemDom.host.append(this.dom.tfoot);
            }

            if (itemDom.floating) {
                itemDom.floating.remove();
                itemDom.floating = null;
            }
        } else if (mode === 'in') {
            // Remove the header from the read header and insert into a fixed
            // positioned floating table clone
            this._clone(item, forceChange);

            itemDom.floating
                .addClass('fixedHeader-floating')
                .css(item === 'header' ? 'top' : 'bottom', this.c[item + 'Offset'])
                .css('left', position.left + 'px')
                .css('width', position.width + 'px');

            if (item === 'footer') {
                itemDom.floating.css('top', '');
            }
        } else if (mode === 'below') { // only used for the header
            // Fix the position of the floating header at base of the table body
            this._clone(item, forceChange);

            itemDom.floating
                .addClass('fixedHeader-locked')
                .css('top', position.tfootTop - position.theadHeight)
                .css('left', position.left + 'px')
                .css('width', position.width + 'px');
        } else if (mode === 'above') { // only used for the footer
            // Fix the position of the floating footer at top of the table body
            this._clone(item, forceChange);

            itemDom.floating
                .addClass('fixedHeader-locked')
                .css('top', position.tbodyTop)
                .css('left', position.left + 'px')
                .css('width', position.width + 'px');
        }

        // Restore focus if it was lost
        if (focus && focus !== document.activeElement) {
            focus.focus();
        }

        this.s.scrollLeft.header = -1;
        this.s.scrollLeft.footer = -1;
        this.s[item + 'Mode'] = mode;
    },

    /**
     * Cache the positional information that is required for the mode
     * calculations that FixedHeader performs.
     *
     * @private
     */
    _positions: function () {
        var dt = this.s.dt;
        var table = dt.table();
        var position = this.s.position;
        var dom = this.dom;
        var tableNode = $(table.node());

        // Need to use the header and footer that are in the main table,
        // regardless of if they are clones, since they hold the positions we
        // want to measure from
        var thead = tableNode.children('thead');
        var tfoot = tableNode.children('tfoot');
        var tbody = dom.tbody;

        position.visible = tableNode.is(':visible');
        position.width = tableNode.outerWidth();
        position.left = tableNode.offset().left;
        position.theadTop = thead.offset().top;
        position.tbodyTop = tbody.offset().top;
        position.theadHeight = position.tbodyTop - position.theadTop;

        if (tfoot.length) {
            position.tfootTop = tfoot.offset().top;
            position.tfootBottom = position.tfootTop + tfoot.outerHeight();
            position.tfootHeight = position.tfootBottom - position.tfootTop;
        } else {
            position.tfootTop = position.tbodyTop + tbody.outerHeight();
            position.tfootBottom = position.tfootTop;
            position.tfootHeight = position.tfootTop;
        }
    },


    /**
     * Mode calculation - determine what mode the fixed items should be placed
     * into.
     *
     * @param  {boolean} forceChange Force a redraw of the mode, even if already
     *     in that mode.
     * @private
     */
    _scroll: function (forceChange) {
        var windowTop = $(document).scrollTop();
        var windowLeft = $(document).scrollLeft();
        var position = this.s.position;
        var headerMode, footerMode;

        if (!this.s.enable) {
            return;
        }

        if (this.c.header) {
            if (!position.visible || windowTop <= position.theadTop - this.c.headerOffset) {
                headerMode = 'in-place';
            } else if (windowTop <= position.tfootTop - position.theadHeight - this.c.headerOffset) {
                headerMode = 'in';
            } else {
                headerMode = 'below';
            }

            if (forceChange || headerMode !== this.s.headerMode) {
                this._modeChange(headerMode, 'header', forceChange);
            }

            this._horizontal('header', windowLeft);
        }

        if (this.c.footer && this.dom.tfoot.length) {
            if (!position.visible || windowTop + position.windowHeight >= position.tfootBottom + this.c.footerOffset) {
                footerMode = 'in-place';
            } else if (position.windowHeight + windowTop > position.tbodyTop + position.tfootHeight + this.c.footerOffset) {
                footerMode = 'in';
            } else {
                footerMode = 'above';
            }

            if (forceChange || footerMode !== this.s.footerMode) {
                this._modeChange(footerMode, 'footer', forceChange);
            }

            this._horizontal('footer', windowLeft);
        }
    }
});


/**
 * Version
 * @type {String}
 * @static
 */
FixedHeader.version = "3.1.3";

/**
 * Defaults
 * @type {Object}
 * @static
 */
FixedHeader.defaults = {
    header: true,
    footer: false,
    headerOffset: 0,
    footerOffset: 0
};


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables interfaces
 */

// Attach for constructor access
$.fn.dataTable.FixedHeader = FixedHeader;
$.fn.DataTable.FixedHeader = FixedHeader;


// DataTables creation - check if the FixedHeader option has been defined on the
// table and if so, initialise
$(document).on('init.dt.dtfh', function (e, settings, json) {
    if (e.namespace !== 'dt') {
        return;
    }

    var init = settings.oInit.fixedHeader;
    var defaults = DataTable.defaults.fixedHeader;

    if ((init || defaults) && !settings._fixedHeader) {
        var opts = $.extend({}, defaults, init);

        if (init !== false) {
            new FixedHeader(settings, opts);
        }
    }
});

// DataTables API methods
DataTable.Api.register('fixedHeader()', function () {});

DataTable.Api.register('fixedHeader.adjust()', function () {
    return this.iterator('table', function (ctx) {
        var fh = ctx._fixedHeader;

        if (fh) {
            fh.update();
        }
    });
});

DataTable.Api.register('fixedHeader.enable()', function (flag) {
    return this.iterator('table', function (ctx) {
        var fh = ctx._fixedHeader;

        flag = (flag !== undefined ? flag : true);
        if (fh && flag !== fh.s.enable) {
            fh.enable(flag);
        }
    });
});

DataTable.Api.register('fixedHeader.disable()', function () {
    return this.iterator('table', function (ctx) {
        var fh = ctx._fixedHeader;

        if (fh && fh.s.enable) {
            fh.enable(false);
        }
    });
});

$.each(['header', 'footer'], function (i, el) {
    DataTable.Api.register('fixedHeader.' + el + 'Offset()', function (offset) {
        var ctx = this.context;

        if (offset === undefined) {
            return ctx.length && ctx[0]._fixedHeader ?
                ctx[0]._fixedHeader[el + 'Offset']() :
                undefined;
        }

        return this.iterator('table', function (ctx) {
            var fh = ctx._fixedHeader;

            if (fh) {
                fh[el + 'Offset'](offset);
            }
        });
    });
});


module.exports = FixedHeader;

/***/ }),

/***/ "./ClientApp/modules/listview/dataTable.inputPagination.js":
/*!*****************************************************************!*\
  !*** ./ClientApp/modules/listview/dataTable.inputPagination.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
module.exports = (function () {
	function calcDisableClasses(oSettings) {
		var start = oSettings._iDisplayStart;
		var length = oSettings._iDisplayLength;
		var visibleRecords = oSettings.fnRecordsDisplay();
		var all = length === -1;

		// Gordey Doronin: Re-used this code from main jQuery.dataTables source code. To be consistent.
		var page = all ? 0 : Math.ceil(start / length);
		var pages = all ? 1 : Math.ceil(visibleRecords / length);

		var disableFirstPrevClass = (page > 0 ? '' : oSettings.oClasses.sPageButtonDisabled);
		var disableNextLastClass = (page < pages - 1 ? '' : oSettings.oClasses.sPageButtonDisabled);

		return {
			'first': disableFirstPrevClass,
			'previous': disableFirstPrevClass,
			'next': disableNextLastClass,
			'last': disableNextLastClass
		};
	}

	function calcCurrentPage(oSettings) {
		return Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength) + 1;
	}

	function calcPages(oSettings) {
		return Math.ceil(oSettings.fnRecordsDisplay() / oSettings._iDisplayLength);
	}


	var firstClassName = 'first';
	var previousClassName = 'previous';
	var nextClassName = 'next';
	var lastClassName = 'last';

	var paginateClassName = 'paginate';
	var paginateOfClassName = 'paginate_of';
	var paginatePageClassName = 'paginate_page';
	var paginateInputClassName = 'paginate_input';
	var paginateGoClassName = 'paginte_go';
	var ellipsisClassName = 'ellipsis';

	$.fn.dataTableExt.oPagination.input = {
		'oDefaults': {
			'iShowPages': 5
		},
		'fnInit': function (oSettings, nPaging, fnCallbackDraw) {
			var nFirst = document.createElement('span');
			var nPrevious = document.createElement('span');
			var nNext = document.createElement('span');
			var nLast = document.createElement('span');
			var nInput = document.createElement('input');
			var nPage = document.createElement('span');
			var nOf = document.createElement('span');
			var oGo = document.createElement('a');

			var language = oSettings.oLanguage.oPaginate;
			var classes = oSettings.oClasses;

			nFirst.innerHTML = language.sFirst;
			nPrevious.innerHTML = language.sPrevious;
			nNext.innerHTML = language.sNext;
			nLast.innerHTML = language.sLast;

			nFirst.className = firstClassName + ' ' + classes.sPageButton;
			nPrevious.className = previousClassName + ' ' + classes.sPageButton;
			nNext.className = nextClassName + ' ' + classes.sPageButton;
			nLast.className = lastClassName + ' ' + classes.sPageButton;

			nOf.className = paginateOfClassName;
			nPage.className = paginatePageClassName;
			oGo.className = paginateGoClassName;
			nInput.className = paginateInputClassName;

			if (oSettings.sTableId !== '') {
				nPaging.setAttribute('id', oSettings.sTableId + '_' + paginateClassName);
				nFirst.setAttribute('id', oSettings.sTableId + '_' + firstClassName);
				nPrevious.setAttribute('id', oSettings.sTableId + '_' + previousClassName);
				nPage.setAttribute('id', oSettings.sTableId + '_' + paginatePageClassName);
				nNext.setAttribute('id', oSettings.sTableId + '_' + nextClassName);
				nLast.setAttribute('id', oSettings.sTableId + '_' + lastClassName);
			}
			nOf.innerText = '  转到'
			oGo.innerHTML = 'GO';
			nInput.type = 'text';
			//nPaging.appendChild(nFirst);
			nPaging.appendChild(nPrevious);
			nPaging.appendChild(nPage);
			nPaging.appendChild(nNext);
			//nPaging.appendChild(nLast);
			nPaging.appendChild(nOf);
			nPaging.appendChild(nInput);
			nPaging.appendChild(oGo);

			$(nFirst).click(function () {
				var iCurrentPage = calcCurrentPage(oSettings);
				if (iCurrentPage !== 1) {
					oSettings.oApi._fnPageChange(oSettings, 'first');
					fnCallbackDraw(oSettings);
				}
			});

			$(nPrevious).click(function () {
				var iCurrentPage = calcCurrentPage(oSettings);
				if (iCurrentPage !== 1) {
					oSettings.oApi._fnPageChange(oSettings, 'previous');
					fnCallbackDraw(oSettings);
				}
			});

			$(nNext).click(function () {
				var iCurrentPage = calcCurrentPage(oSettings);
				if (iCurrentPage !== calcPages(oSettings)) {
					oSettings.oApi._fnPageChange(oSettings, 'next');
					fnCallbackDraw(oSettings);
				}
			});

			$(nLast).click(function () {
				var iCurrentPage = calcCurrentPage(oSettings);
				if (iCurrentPage !== calcPages(oSettings)) {
					oSettings.oApi._fnPageChange(oSettings, 'last');
					fnCallbackDraw(oSettings);
				}
			});
			var timer;
			$(nInput).keydown(function (e) {
				var self = this;
				clearTimeout(timer);
				// 38 = up arrow, 39 = right arrow
				if (e.which === 38 || e.which === 39) {
					this.value++;
					timer = setTimeout(function () {
						go(self.value);
					}, 200);
				}
				// 37 = left arrow, 40 = down arrow
				else if ((e.which === 37 || e.which === 40) && this.value > 1) {
					this.value--;
					timer = setTimeout(function () {
						go(self.value);
					}, 200);
				}
				// 40 = enter
				else if (e.which === 13) {
					go(this.value);
				}
				if (this.value === '' || this.value.match(/[^0-9]/)) {
					/* Nothing entered or non-numeric character */
					this.value = this.value.replace(/[^\d]/g, ''); // don't even allow anything but digits
					return;
				}
			});

			$(oGo).click(function (e) {
				go($(nInput).val());
				return false;
			});

			function go(value) {
				var iNewStart = oSettings._iDisplayLength * (value - 1);
				if (iNewStart < 0) {
					iNewStart = 0;
				}
				if (iNewStart >= oSettings.fnRecordsDisplay()) {
					iNewStart = (Math.ceil((oSettings.fnRecordsDisplay()) / oSettings._iDisplayLength) - 1) * oSettings._iDisplayLength;
				}

				oSettings._iDisplayStart = iNewStart;
				fnCallbackDraw(oSettings);
			}

			// Take the brutal approach to cancelling text selection.
			$('span', nPaging).bind('mousedown', function () {
				return false;
			});
			$('span', nPaging).bind('selectstart', function () {
				return false;
			});

			// If we can't page anyway, might as well not show it.
			var iPages = calcPages(oSettings);
			if (iPages <= 1) {
				$(nPaging).hide();
			}
		},

		'fnUpdate': function (oSettings, fnCallbackDraw) {
			if (!oSettings.aanFeatures.p) {
				return;
			}
			var iPages = calcPages(oSettings);
			var iCurrentPage = calcCurrentPage(oSettings);

			var an = oSettings.aanFeatures.p;
			if (iPages <= 1) // hide paging when we can't page
			{
				$(an).hide();
				return;
			}

			var disableClasses = calcDisableClasses(oSettings);

			$(an).show();
			var nPage = $(an).children('.' + paginatePageClassName).empty();
			generatePageCentent.apply(this);
			// Enable/Disable `first` button.
			$(an).children('.' + firstClassName)
				.removeClass(oSettings.oClasses.sPageButtonDisabled)
				.addClass(disableClasses[firstClassName]);

			// Enable/Disable `prev` button.
			$(an).children('.' + previousClassName)
				.removeClass(oSettings.oClasses.sPageButtonDisabled)
				.addClass(disableClasses[previousClassName]);

			// Enable/Disable `next` button.
			$(an).children('.' + nextClassName)
				.removeClass(oSettings.oClasses.sPageButtonDisabled)
				.addClass(disableClasses[nextClassName]);

			// Enable/Disable `last` button.
			$(an).children('.' + lastClassName)
				.removeClass(oSettings.oClasses.sPageButtonDisabled)
				.addClass(disableClasses[lastClassName]);

			// Paginate of N pages text
			///$(an).children('.' + paginateOfClassName).html(' of ' + iPages);

			// Current page numer input value
			$(an).children('.' + paginateInputClassName).val(iCurrentPage);


			function generatePageCentent() {
				var iShowPages = oSettings.oInit.iShowPages || this.oDefaults.iShowPages,
					iShowPagesHalf = Math.floor(iShowPages / 2),
					iCurrentPage = Math.ceil((oSettings._iDisplayStart + 1) / oSettings._iDisplayLength),
					iTotalPages = Math.ceil(oSettings.fnRecordsDisplay() / oSettings._iDisplayLength),
					iFirstPage = iCurrentPage - iShowPagesHalf,
					iLastPage = iCurrentPage + iShowPagesHalf;

				if (iTotalPages < iShowPages) {
					iFirstPage = 1;
					iLastPage = iTotalPages;
				} else if (iFirstPage < 1) {
					iFirstPage = 1;
					iLastPage = iShowPages;
				} else if (iLastPage > iTotalPages) {
					iFirstPage = (iTotalPages - iShowPages) + 1;
					iLastPage = iTotalPages;
				}
				var items = [];

				// Add ellipses
				if (1 < iFirstPage) {
					items.push(get(1));
					if (iFirstPage > 2) {
						var sub = iFirstPage - iShowPages;
						items.push(get('ellipsis', sub < 1 ? 1 : sub));
					}
				}
				for (i = iFirstPage; i <= iLastPage; i++) {
					items.push(get(i));
				}
				if (iLastPage < iTotalPages) {
					var add = iLastPage + iShowPages;
					if (iLastPage + 1 < iTotalPages) {
						items.push(get('ellipsis', add > iTotalPages ? iTotalPages : add));
					}
					items.push(get(iTotalPages));
				}
				$(nPage).append(items);

				function get(type, jump) {
					var $dom;
					if (typeof type === 'number') {
						$dom = $('<a class="paginate_button"></a>').html(type).click(function (e) {
							oSettings.oApi._fnPageChange(oSettings, type - 1);
							fnCallbackDraw(oSettings);
							return false;
						});
						if (type === iCurrentPage) $dom.addClass('current');
					} else if (type === 'ellipsis' && typeof jump === 'number') {
						$dom = $('<a class="ellipsis">…</a>').click(function (e) {
							oSettings.oApi._fnPageChange(oSettings, jump - 1);
							fnCallbackDraw(oSettings);
							return false;
						});
					}
					return $dom;
				}
			}
		}
	};
})();

/***/ }),

/***/ "./ClientApp/modules/listview/favorstock-plugin.js":
/*!*********************************************************!*\
  !*** ./ClientApp/modules/listview/favorstock-plugin.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var JSON = __webpack_require__(/*! ../polyfills/json-polyfill */ "./ClientApp/modules/polyfills/json-polyfill.js");
var FavouriteClient = __webpack_require__(/*! ../favouriteclient */ "./ClientApp/modules/favouriteclient.js");
var memcache = __webpack_require__(/*! ../utils.cache */ "./ClientApp/modules/utils.cache.js");

var cache = new memcache();

function errorHandler(e) {
    console.error(e);
}
module.exports = {
    /**
     * 生成字段配置
     */
    setColumn: function (command, column) {
        if (command.indexOf('$favourite') !== 0) return false;
        var code_key = 'Code',
            mkt_key = 'MarketType';
        if (command.indexOf('|') > 0) {
            var args = command.split('|')[1].trim().split(','),
                args1 = args[0].trim(),
                args2 = args[1] ? args[1].trim() : null;
            code_key = parseInt(args1) ? parseInt(args1) : args1;
            mkt_key = parseInt(args2) ? parseInt(args2) : args2;
        }
        var settings = {
            name: 'favourite-btn',
            data: function (row, type, set, meta) {
                return new FavouriteClient.stockinfo(row[code_key], row[mkt_key]);
            },
            title: '加自选',
            orderable: false,
            className: 'favourite-stock',
            render: function (data, type, row, meta) {
                return '<a class="addzx" target="_self" onclick="return false;" href="javascript:void(0);"></a>';
            }
        };
        return $.extend(column, settings);
    },
    /**
     * 初始化事件
     */
    init: function (dataTable, options) {
        var cacheKey = JSON.stringify(options);
        var favor = cache.getOrAdd(cacheKey, new FavouriteClient(options));
        dataTable.on('draw', function () {
            var data = dataTable.column('favourite-btn:name').data(),
                sids = [];
            if (!data) return false;
            for (var i = 0; i < data.length; i++) {
                sids.push(data[i].id);
            }
            favor.getlist(function (stocks) {
                for (var i = 0; i < stocks.length; i++) {
                    var stockid = stocks[i],
                        idx = sids.indexOf(stockid);
                    if (idx >= 0) {
                        var $cell = dataTable.cells(idx, 'favourite-btn:name').nodes().toJQuery();
                        $cell.find('a').removeClass('addzx delzx').addClass('delzx');
                    }
                }
            }, errorHandler);
            var column = dataTable.column('favourite-btn:name'),
                data = column.data(),
                nodes = column.nodes(),
                $nodes = nodes.toJQuery();
            if (!$nodes) return false;
            var oid = {};
            $nodes.click(function (e) {
                var $this = $(this),
                    data = column.cells(this).data()[0];
                if (!data) return;
                var $dom = $this.find('a');
                if ($dom.hasClass('addzx')) {
                    $dom.removeClass('addzx').addClass('delzx');
                } else {
                    $dom.removeClass('delzx').addClass('addzx');
                }
                clearTimeout(oid[data.id]);
                oid[data.id] = setTimeout(function () {
                    if (!favor.checkfavor(data)) {
                        favor.add(data);
                    } else {
                        favor.remove(data);
                    }
                }, 500);
                return false;
            });
        });
    }
}

/***/ }),

/***/ "./ClientApp/modules/listview/main.js":
/*!********************************************!*\
  !*** ./ClientApp/modules/listview/main.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
var utils = ListView.utils = __webpack_require__(/*! ../utils */ "./ClientApp/modules/utils.js");
var template = __webpack_require__(/*! ../template-web */ "./ClientApp/modules/template-web.js");

var resolveData = __webpack_require__(/*! ./resolveData */ "./ClientApp/modules/listview/resolveData.js");
ListView.DataTables = __webpack_require__(/*! datatables.net */ "./node_modules/datatables.net/js/jquery.dataTables.js");
var tsqlist = __webpack_require__(/*! ./topspeedlist */ "./ClientApp/modules/listview/topspeedlist.js");
var favor_plugin = __webpack_require__(/*! ./favorstock-plugin */ "./ClientApp/modules/listview/favorstock-plugin.js");
__webpack_require__(/*! datatables.net-select */ "./node_modules/datatables.net-select/js/dataTables.select.js");
__webpack_require__(/*! ./dataTable.inputPagination */ "./ClientApp/modules/listview/dataTable.inputPagination.js");
__webpack_require__(/*! ./dataTable.fixedHeader */ "./ClientApp/modules/listview/dataTable.fixedHeader.js");

var JSON = __webpack_require__(/*! ../polyfills/json-polyfill */ "./ClientApp/modules/polyfills/json-polyfill.js");
var convertopts = ListView.defaults = __webpack_require__(/*! ./optionConverter */ "./ClientApp/modules/listview/optionConverter.js");
// css
__webpack_require__(/*! ./css/listview.css */ "./ClientApp/modules/listview/css/listview.css");
__webpack_require__(/*! ./css/net-fixedheader-dt.css */ "./ClientApp/modules/listview/css/net-fixedheader-dt.css");

// 表格异常输出方式
$.fn.dataTable.ext.errMode = 'throw';
/**
 * 基于Datatables的列表生成器
 * @param {jQuery} selector jQuery选择器
 * @param {'default'|'simple'|'full'|'image'} type 表格类型
 * @param {default_config} options 列表配置
 */
function ListView(selector, type, options) {
    var self = this,
        table, threadId;
    var $dom = jselector(selector);

    if (!$dom) throw "Cannot find element " + selector;
    var _options;
    /** @type {Object<string, DataTables.ColumnSettings>} */
    var map = this.namedColumns = {};
    /**
     * 更新配置项
     * @param {string} type 类型
     * @param {object} options 配置项
     */
    this.setoptions = function (type, options) {
        if (typeof type === 'string') {
            _options = convertopts(type, options);
        } else {
            _options = convertopts('default', type);
        }
    }
    /**
     * 刷新加载表格
     */
    this.load = function () {
        this.stop();
        this.draw();
        if (_options.server.update && _options.server.update.enable && _options.server.update.interval > 0) {
            if (table && table.ajax) {
                threadId = setInterval(function () {
                    table.ajax.reload(null, false);
                }, _options.server.update.interval);
            } else {
                threadId = setInterval(self.draw, _options.server.update.interval);
            }
        }
        return table;
    }
    /**
     * 停止刷新
     */
    this.stop = function () {
        if (threadId) clearInterval(threadId);
        table = null;
    }
    
    /**
     * Destroy the DataTables in the current context
     */
    this.destroy = function () {
        if (table) table.destroy(false);
        this.stop();
        $dom.empty();
    }

    /**
     * 绘制表格
     */
    this.draw = function () {
        // console.info(111)
        try {
            if (type.indexOf('tsq') === 0) {
                $dom.addClass('hover').on('preInit.dt', function (e, settings) {
                    var api = new $.fn.dataTable.Api(settings);
                    tsqlist.init({
                        settings: _options,
                        table: api
                    });
                });
            }
            if (!_options.datatables.ajax) {
                _options.datatables.ajax = build(_options, type.split('.')[0]);
            }
            var favorOpts = false;
            for (var i = 0; i < _options.datatables.columns.length; i++) {
                /** @type {DataTables.ColumnSettings} */
                var element = _options.datatables.columns[i];
                if (!element.data && element.name) element.data = element.name;
                else if (!element.name) element.name = element.data;
                if (element.decimal) {
                    element.data = decimalDataHandler(element.decimal, element.data);
                }
                if (element.supressvalues instanceof Array && element.supressvalues.length > 0) {
                    if (typeof element.data === 'string') {
                        element.data = supressValueHandler(element.supressvalues, element.data);
                    } else if (typeof element.data === 'function') {
                        element.data = supressValueHandler(element.supressvalues, element.name, element.data);
                    }
                }
                if (element.template) {
                    var _render = element.render;
                    element.render = templateRender(element.template, _render);
                }
                if (element.color) {
                    var _render = element.render;
                    element.render = coloredDataRender(element.color, _render);
                }

                if (element.title && type !== 'simple') {
                    element.title = '<span>' + element.title + '</span>';
                    if (element.title.indexOf('</b>') < 0)
                        element.title += '<b class="icon"></b>';
                }
                if (!element.className) element.className = 'listview-col-' + (element.name || '1');
                if (element.data && typeof element.data !== 'function') {
                    if (element.data.indexOf('$num') === 0) {
                        element.title = element.title ? element.title : "序号";
                        element.orderable = typeof element.orderable === "boolean" ? element.orderable : false;
                    } else if (element.data.indexOf('$favourite') === 0) {
                        favorOpts = {};
                        var idx = element.data.indexOf('=');
                        if (idx > 0) favorOpts = JSON.parse(element.data.substring(idx + 1));
                        favor_plugin.setColumn(element.data, element);
                    }
                }
                map[element.name] = element;
            }
            table = $dom.DataTable(_options.datatables);
            if (favorOpts) favor_plugin.init(table, favorOpts);
        } catch (e) {
            console.error(e);
            clearInterval(threadId);
        }
    }
    this.setoptions(type, options);
    this.datatable = this.load();
}


/**
 * jQuery dom 选择器
 * @param {string|HTMLElement|JQuery<HTMLElement>} dom dom对象
 */
function jselector(dom) {
    /** @type {JQuery<HTMLElement>} */
    var _dom;
    if (dom instanceof $) {
        _dom = dom;
    } else if (utils.isDOM(dom) || typeof dom === "string") {
        _dom = $(dom);
    }
    if (!_dom || !_dom.length) _dom = null;
    return _dom;
}

/**
 * 错误数据处理
 * @param {Array.<string|number>} supressvalues 可能错误的数据
 * @param {string} fieldname 字段名称
 * @param {function} handler 数据处理器
 */
function supressValueHandler(supressvalues, fieldname, handler) {
    function datahandler(data) {
        if (typeof handler === 'function') data = handler(data);
        if (issupress(data)) {
            return '-';
        }
        return data[fieldname];
    }
    datahandler.field = fieldname;
    return datahandler;

    function issupress(data) {
        for (var i = 0; i < supressvalues.length; i++) {
            var val = supressvalues[i];
            if (val == data[fieldname]) return true;
        }
        return false;
    }
}

/**
 * 数据模板渲染器
 * @param {string} tpl 模板
 * @param {function} render 渲染函数
 * @returns {string} 渲染后的数据
 */
function templateRender(tpl, render) {
    return function (data, type, row, meta) {
        var val = utils.extend({
            '$current': data
        }, row);
        var _data = template.render(tpl, val);
        if (typeof render === "function")
            return render(_data, type, row, meta);
        else return _data;
    }
}

/**
 * 数据字段颜色渲染器
 * @param {object|string} options 配置项
 * @param {number|string|function} options.comparer 生成颜色的比较器
 * @param {function} render 渲染函数
 * @returns {string} 渲染后的数据
 */
function coloredDataRender(options, render) {
    return function (data, type, row, meta) {
        var color = "";
        var tmp = {
            '$current': data
        };
        if (typeof options === "object") {
            if (!isNaN(options.comparer)) {
                color = utils.getColor(options.comparer);
            } else if (typeof options.comparer === "function") {
                var num = options.comparer(row);
                color = utils.getColor(num);
            } else if (typeof options.comparer === "string") {
                color = utils.getColor(template.render(options.comparer, utils.extend(tmp, row)));
            }
        } else if (typeof options === "string") {
            color = utils.getColor(template.render(options, utils.extend(tmp, row)));
        } else {
            color = utils.getColor(data);
        }
        if (typeof render === "function") data = render(data, type, row, meta);
        return color ? "<span class='" + color + "'>" + data + "</span>" : data;
    };
}

/**
 * 浮点型数据处理器
 * @param {string|number} decimal 小数位数配置
 * @param {string} dataname 数据命名
 */
function decimalDataHandler(decimal, dataname) {
    return function (row, type, set, meta) {
        var _data = row[dataname];
        if (isNaN(_data)) return _data;
        if (typeof decimal === 'number' && decimal > 0) {
            _data = (_data / Math.pow(10, decimal)).toFixed(decimal);
        } else if (typeof decimal === 'string') {
            decimal = row[decimal];
            _data = (_data / Math.pow(10, decimal)).toFixed(decimal);
        }
        //row[dataname] = _data;
        return _data;
    }
}

/**
 * 构建datatables ajax 请求处理
 * @param {object} options 列表配置
 * @param {string} type 列表类型
 */
function build(options, type) {
    function nufmHandler(request, drawCallback, settings) {
        var order, orderField, direction;
        if (settings.bSorted && request.order.length > 0) {
            order = request.order[0];
            var cols = settings.oInit.columns;
            orderField = cols[order.column].name || cols[order.column].data;
            direction = order.dir === "asc" ? 1 : -1;
        }
        var params = {
            st: orderField ? "(" + orderField + ")" : undefined,
            sr: direction,
            p: settings.oFeatures.bPaginate ? request.start / request.length + 1 : undefined,
            ps: settings.oFeatures.bPaginate ? request.length : undefined
        };
        $.extend(true, options.server.ajax, {
            data: params
        });
        //console.info(options.server.ajax.url)
        if(options.server.ajax.url == ''){
            return false
        }

        options.server.ajax.success = callback;
        if (settings.jqXHR) settings.jqXHR.abort();
        settings.jqXHR = $.ajax(options.server.ajax);

        function callback(json) {
            var _json;
            if (json instanceof Array) {
                _json = {
                    data: json,
                    draw: request.draw
                };
                if (typeof options.server.resolver === 'object')
                    options.server.resolver.path = 'data';
            } else if (typeof json === 'object') {
                _json = $.extend(true, {
                    draw: request.draw
                }, json);
            }
            if (typeof options.server.resolver === "string") {
                _json = resolveData(_json, {
                    type: options.server.resolver
                }, settings);
            } else if (typeof options.server.resolver === "object") {
                _json = resolveData(_json, options.server.resolver, settings);
            }
            //if (ListView.defaults.imports) $.extend(_json, ListView.defaults.imports);
            _json.recordsFiltered = _json.recordsFiltered || _json.recordsTotal;
            if (_json) drawCallback(_json);
            else drawCallback({
                data: []
            });
        }
    }
    return type === 'tsq' ? tsqlist.getajax(options) : nufmHandler;
}

$.extend(template.defaults.imports, $.extend(convertopts.defaults.imports, utils));

$.fn.extend({
    ListView: function (type, options) {
        var $this = $(this);
        if ($this.length === 0) return false;
        return new ListView($this, type, options);
    }
});

module.exports = ListView;

/***/ }),

/***/ "./ClientApp/modules/listview/optionConverter.js":
/*!*******************************************************!*\
  !*** ./ClientApp/modules/listview/optionConverter.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
var resolveData = __webpack_require__(/*! ./resolveData */ "./ClientApp/modules/listview/resolveData.js");
var template = __webpack_require__(/*! ../template-web */ "./ClientApp/modules/template-web.js");
var URI = __webpack_require__(/*! ../uri/main */ "./ClientApp/modules/uri/main.js");
var imgTpl = __webpack_require__(/*! ./templates/picmode.art */ "./ClientApp/modules/listview/templates/picmode.art");
var ie7 = document.all && !document.querySelector;
/**
 * 获取默认配置
 */
function getConfig(type, opts) {
    var options;
    switch (type) {
        case 'simple':
            options = fromSimple(opts);
            break;
        case 'tsq.full':
        case 'full':
            options = fromFull(opts);
            break;
        case 'pic':
            options = fromImage(opts);
            break;
        case 'default':
        default:
            options = $.extend({}, _default, opts);
            break;
    }
    return options;
}

function fromSimple(options) {
    var sopt = $.extend(true, {}, simple, options);
    var _dc = $.extend(true, {}, _default, {
        auto: true,
        server: {},
        datatables: {
            dom: '<"listview simple"t>',
            stateSave: false,
            paping: false,
            retrieve: true,
            processing: true,
            fixedHeader: false,
            pageLength: options.count
        }
    });
    Convert(_dc, sopt, 'simple');
    return _dc;
}

function fromFull(options) {
    var fopt = $.extend(true, {}, full, options);
    var _dc = $.extend(true, {}, _default, {
        auto: true,
        server: {},
        datatables: {
            dom: '<"listview full"tp>',
            // autoWidth: true,
            //stateSave: true,
            paping: true,
            retrieve: true,
            processing: true,
            fixedHeader: ie7 ? false : {
                header: true,
                headerOffset: $('.top-nav-wrap').height() || 0
            },
            pageLength: options.count
        }
    });
    Convert(_dc, fopt, 'full');
    return _dc;
}

function Convert(config, digest, type) {
    var bServer = typeof digest.server === 'boolean' ? digest.server : true;
    if (bServer) {
        if (digest.update > 0) {
            config.server.update = {
                enable: true,
                interval: digest.update
            };
        } else {
            config.server.update = false;
        }
        if (digest.rowId) {
            config.server.rowId = digest.rowId;
        }
        if (typeof digest.jsonp === 'undefined') {
            config.server.ajax = {
                dataType: 'jsonp',
                jsonp: 'cb'
            }
        } else if (typeof digest.jsonp === 'string') {
            config.server.ajax = {
                dataType: 'jsonp',
                jsonp: digest.jsonp
            }
        }
        var _params;
        if (typeof digest.params === 'string') {
            var sp = digest.params.indexOf('?') === 0 ? digest.params : '?' + digest.params;
            _params = new URI(sp).search(true);
        } else if (typeof digest.params === 'object') {
            _params = digest.params;
        }
        var uri = new URI(digest.baseurl);
        var query = uri.query(true);
        config.server.ajax.url = uri.search('').toString();
        config.server.ajax.data = $.extend(true, query, _params);
        if (digest.mappings && typeof digest.mappings === 'string') {
            var m_type = 'csv',
                m_path = 'data',
                m_separator = ',',
                idx = digest.mappings.indexOf(':'),
                len = digest.mappings.length,
                m_mappings = {};
            if (digest.mappings.indexOf(':') > 0) {
                var tp = digest.mappings.slice(0, idx).split('|');
                m_type = tp[0];
                m_path = tp[1];
                m_separator = tp[2];
            }
            m_mappings = new URI('?' + digest.mappings.slice(idx + 1, len)).query(true);
            config.server.resolver = {
                type: m_type,
                separator: m_separator || ',',
                path: m_path || (type === 'full' ? 'data' : ''),
                fields: m_mappings
            };
        } else if (typeof digest.mappings === 'object') {
            var _mappings = digest.mappings.type ? digest.mappings : {
                fields: digest.mappings
            };
            config.server.resolver = $.extend({
                type: 'csv',
                separator: ',',
                path: type === 'full' ? 'data' : '',
                fields: {}
            }, _mappings);
        }
    } else {
        config.server = false;
    }
    if (digest.fields instanceof Array) {
        var columns = config.datatables.columns || [],
            order = config.datatables.order || [];
        for (var i = 0; i < digest.fields.length; i++) {
            var _field = digest.fields[i];
            var field = $.extend({
                orderable: type === 'simple' || _field.data === '$num' ? false : true
            }, _field);

            if (!field.template && field.name === 'ChangePercent') {
                field.template = '{{ChangePercent | percentRender}}';
                field.color = true;
            }
            if (typeof field.ordering === 'string') {
                var ocs = field.ordering.split('-');
                var dir = ocs[0],
                    idx = ocs[1] || order.length;
                if (dir) {
                    order[idx] = [i, dir];
                }
            }

            var exists = false;
            for (var j = 0; j < columns.length; j++) {
                var column = columns[j];
                if (column && column.name && (column.name === field.name)) {
                    exists = true;
                    $.extend(column, field);
                }
            }
            if (!exists) {
                columns.push(field);
            }
        }
        config.datatables.columns = columns;
        config.datatables.order = order;
    }
    if ((digest.order instanceof Array) && digest.order.length > 0) {
        config.datatables.order = digest.order;
    }
    return config;
}

function fromImage(options) {
    var digest = $.extend(true, image, options);
    var opt = $.extend(true, {}, _default, {
        auto: true,
        server: {},
        datatables: {
            paping: true,
            retrieve: true,
            processing: true,
            pageLength: options.count || 12
        }
    });
    Convert(opt, digest, 'full');

    opt.datatables.createdRow = function (row, data, dataIndex) {
        var links = [];
        for (var i = 0; i < data.length; i++) {
            var element = data[i];
            element.stamp = +(new Date);
            $.extend(element, {
                img: template.render(digest.linkTemplates.img, element),
                favor: template.render(digest.linkTemplates.favor, element),
                quote: template.render(digest.linkTemplates.quote, element),
                guba: template.render(digest.linkTemplates.guba, element)
            });
            links.push(element);
        }
        var html = template.render(imgTpl, {
            links: links
        });
        $('td', row).html(html);
    }
    opt.datatables.headerCallback = function (thead, data, start, end, display) {
        $(thead).hide();
    }
    opt.datatables.ajax = function (request, drawCallback, settings) {
        var params = {
            st: '',
            sr: '',
            p: settings.oFeatures.bPaginate ? request.start / request.length + 1 : undefined,
            ps: settings.oFeatures.bPaginate ? request.length : undefined
        };
        if (digest.sort instanceof Array) {
            params.st = '(' + digest.sort[0] + ')';
            params.sr = digest.sort[1] || -1;
        }
        $.extend(true, opt.server.ajax, {
            data: params
        });
        opt.server.ajax.success = callback;
        if (settings.jqXHR) settings.jqXHR.abort();
        settings.jqXHR = $.ajax(opt.server.ajax);

        function callback(json) {
            var _json;
            if (json instanceof Array) {
                _json = {
                    data: json,
                    draw: request.draw
                };
                if (typeof opt.server.resolver === 'object')
                    opt.server.resolver.path = 'data';
            } else if (typeof json === 'object') {
                _json = $.extend(true, {
                    draw: request.draw
                }, json);
            }
            if (typeof opt.server.resolver === 'string') {
                _json = resolveData(_json, {
                    type: opt.server.resolver
                }, settings);
            } else if (typeof opt.server.resolver === 'object') {
                _json = resolveData(_json, opt.server.resolver, settings);
            }
            if (_json) {
                var data = [],
                    group = [];
                for (var i = 0; i < _json.data.length; i++) {
                    var datum = _json.data[i];
                    if (i % digest.columnsNum === 0) {
                        group = [];
                        data.push(group)
                    }
                    group.push(datum);
                }
                _json.data = data;
                drawCallback(_json);
            } else drawCallback({
                data: []
            });
        }
    }
    return opt;
}

//首页的用户自定义
var simple = {
    // baseurl: '//nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=CT&token=4f1862fc3b5e77c150a2b985b12db0fd',
    baseurl: '',
    //params: '',
    //mappings: "csv:=&=&=",
    //data: [],
    update: 25 * 1000,
    count: 5
    // fields: [{
    //     name: '',
    //     title: '',
    //     data: '',
    //     ordering: 'desc-0',
    //     template: '',
    //     color: true
    // }]
}

var full = {
    baseurl: '//nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=CT&token=4f1862fc3b5e77c150a2b985b12db0fd&js=({data:[(x)],recordsTotal:(tot),recordsFiltered:(tot)})',
    update: 15 * 1000,
    count: 20
}

var image = {
    baseurl: '//nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=CT&token=4f1862fc3b5e77c150a2b985b12db0fd&sty=ESBFDTC&js=({data:[(x)],recordsFiltered:(tot)})',
    linkTemplates: {
        img: '//webquotepic.eastmoney.com/GetPic.aspx?imageType=rt&token=44c9d251add88e27b65ed86506f6e5da&id={{Code}}{{MarketType}}&_={{stamp}}',
        quote: '//quote.eastmoney.com/web/r/{{Code}}{{MarketType}}',
        guba: '//guba.eastmoney.com/list,{{Code}}.html',
        favor: '//quote.eastmoney.com/favor/infavor.aspx?code={{Code}}'
    },
    fields: [{
        dataIndex: -1,
        title: '',
        orderable: false
    }],
    sort: ['ChangePercent', -1],
    update: 15 * 1000,
    columnsNum: 4,
    count: 12
}

var _default = getConfig.defaults = {
    server: {
        update: {
            enable: true,
            interval: 15 * 1000
        },
        ajax: {
            url: "//nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx",
            data: {
                type: "CT",
                token: "4f1862fc3b5e77c150a2b985b12db0fd",
                js: "({data:[(x)],recordsTotal:(tot)})"
            },
            dataType: "jsonp",
            jsonp: "cb"
        },
        // csv|json|xml
        resolver: {
            type: "csv",
            separator: ",",
            path: "data"
        },
        rowId: 'row-{{Code}}{{Market}}'
    },
    datatables: {
        dom: '<"listview"tp>',
        autoWidth: false,
        paping: true,
        stateSave: false,
        retrieve: true,
        responsive: true,
        processing: true,
        serverSide: true,
        //select: true,
        pageLength: 20,
        pagingType: "input",
        deferRender: true,
        fixedHeader: {
            header: true,
            headerOffset: $('.top-nav-wrap').height() || 0
        },
        columns: [],
        language: {
            "sProcessing": "处理中...",
            "sLengthMenu": "显示 _MENU_ 项结果",
            "sZeroRecords": "没有匹配结果",
            "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
            "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
            "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
            "sInfoPostFix": "",
            "sSearch": "搜索:",
            "sUrl": "",
            "sEmptyTable": "暂无数据",
            "sLoadingRecords": "载入中...",
            "sInfoThousands": ",",
            "oPaginate": {
                "sFirst": "首页",
                "sPrevious": "上一页",
                "sNext": "下一页",
                "sLast": "末页"
            },
            "oAria": {
                "sSortAscending": ": 以升序排列此列",
                "sSortDescending": ": 以降序排列此列"
            }
        }
    },
    imports: {
        innerMktNumMap: {
            "1": "sh",
            "0": "sz"
        },
        marketMapping: {
            "1": "sh",
            "2": "sz",
            "_TB": "sz"
        },
        percentRender: function (data) {
            if (typeof data === 'number') return data + '%';
            if (!isNaN(data) && data.indexOf('%') !== data.length - 1) {
                return data + '%';
            }
            return data;
        },
        decimalHandler: function (decimal) {
            return function (data) {
                if (typeof data === 'number' && typeof decimal === 'number' && decimal > 0) {
                    return (data / Math.pow(10, decimal)).toFixed(decimal);
                }
                return data;
            }
        },
        getExchangeName: function (marketType) {
            var marketName = "";
            switch (marketType) {
                case "0":
                    marketName = "国际期货";
                    break;
                case "1":
                    marketName = "上期所";
                    break;
                case "3":
                    marketName = "大商所";
                    break;
                case "4":
                    marketName = "郑商所";
                    break;
                case "_INE":
                    marketName = "上期能源";
                    break;
                case "_ZJ":
                case "_ITFFO":
                    marketName = "中金所";
                    break;
                default:
                    break;
            }
            return marketName;
        }
    }
};

module.exports = getConfig;

/***/ }),

/***/ "./ClientApp/modules/listview/resolveData.js":
/*!***************************************************!*\
  !*** ./ClientApp/modules/listview/resolveData.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var utils = __webpack_require__(/*! ../utils */ "./ClientApp/modules/utils.js");
/**
 * 解析响应数据
 * @param {*} data 数据
 * @param {object} options 解析配置
 * @param {string} options.type 解析类型(csv|json)
 * @param {string} options.separator csv类型数据分隔符
 * @param {string} options.path json类型解析路径
 * @param {boolean} options.reserve 是否保留原始字段
 * @param {DataTables.Settings} settings DataTable设置
 */
function resolveData(data, options, settings) {
    if (!data || !options) return false;
    options = $.extend({
        type: "csv",
        reserve: true
    }, options);
    var _data = utils.extend({}, data, true);
    switch (options.type.toLowerCase()) {
        case "csv":
            if (options.path) _data = data[options.path];
            if (_data instanceof Array) {
                var _models = [];
                for (var i = 0; i < _data.length; i++) {
                    if (typeof _data[i] === "string") {
                        var items = _data[i].split(options.separator);
                        if (typeof options.fields === "object") {
                            var _model = {};
                            for (var key in options.fields) {
                                _model[options.fields[key]] = items[key];
                            }
                            items = _model;
                        }
                        items["$num"] = i + settings._iDisplayStart + 1;
                        _models.push(items);
                    }
                }
                if (options.path) data[options.path] = _models;
                else data = _models;
            }
            break;
        case "json":
            if (options.path) _data = data[options.path];
            if (_data instanceof Array) {
                for (var i = 0; i < _data.length; i++) {
                    if (typeof options.fields === "object") {
                        for (var key in options.fields) {
                            _data[i][options.fields[key]] = _data[i][key];
                            if (!options.reserve)
                                delete _data[i][key];
                        }
                        _data[i]["$num"] = i + settings._iDisplayStart + 1;
                    }
                }
            }
        default:
            break;
    }
    return data;
}

module.exports = resolveData;

/***/ }),

/***/ "./ClientApp/modules/listview/templates/picmode.art":
/*!**********************************************************!*\
  !*** ./ClientApp/modules/listview/templates/picmode.art ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<ul class=\"mod-pic-ul\">\r\n    {{each links}}\r\n    <li id=\"pic-{{$value.ID}}\">\r\n        <a target=\"_blank\" href=\"{{$value.quote}}\" class=\"stock\">\r\n            <img width=\"200\" height=\"139\" src=\"{{$value.img}}\" title=\"{{$value.Name}}({{$value.Code}})\" />\r\n        </a>\r\n        <div class=\"buttons\">\r\n            <a class=\"btn-plus\" target=\"_blank\" href=\"{{$value.favor}}\" title=\"加自选\"></a>\r\n            <a class=\"btn-bigimg\" target=\"_blank\" href=\"{{$value.quote}}\" title=\"看大图\"></a>\r\n            <a class=\"btn-guba\" target=\"_blank\" href=\"{{$value.guba}}\" title=\"进股吧\"></a>\r\n        </div>\r\n    </li>\r\n    {{/each}}\r\n</ul>";

/***/ }),

/***/ "./ClientApp/modules/listview/topspeedlist.js":
/*!****************************************************!*\
  !*** ./ClientApp/modules/listview/topspeedlist.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "jquery");
var template = __webpack_require__(/*! ../template-web */ "./ClientApp/modules/template-web.js");
var URI = __webpack_require__(/*! ../uri/main */ "./ClientApp/modules/uri/main.js");
var clients = __webpack_require__(/*! ../topspeedclient/ClientManager */ "./ClientApp/modules/topspeedclient/ClientManager.js");
var extend = __webpack_require__(/*! ../utils.extend */ "./ClientApp/modules/utils.extend.js");

__webpack_require__(/*! ../jquery-plugins/jquery.color */ "./ClientApp/modules/jquery-plugins/jquery.color.js");

var host = 'pushtest.eastmoney.com:38618';

var TSQListResponse = clients.TSQListClient.response;
var ltclient;
/**
 * 初始化列表推送配置
 * @param {Object} args 参数
 * @param {Object} args.settings 配置项
 * @param {DataTables.Api} args.table DataTable API
 */
function initTSQListClient(args) {
    var rowidrender = template.compile(args.settings.server.rowId);
    var settings = args.settings;
    var columnsMap = getmap(settings.datatables.columns);
    /** @type {DataTables.Api} */
    var table = args.table;
    /** @type {DataTables.Settings} */
    var tablesetting = table.settings()[0];
    ltclient = new clients.TSQListClient({
        host: new URI(settings.server.ajax.url).host(),
        enableMutiDomain: true,
        delay: 10 * 1000,
        errorRetry: 10,
        //throttle: 1500,
        onerror: function (err) {

        },
        onmessage: function (msg) {
            /** @type {TSQListResponse} */
            var rsp = msg instanceof TSQListResponse ? msg : new TSQListResponse(msg);
            var rows = rsp.getMovedKeys();
            var changed = rows.length > 0,
                targets = [];
            if (rows.length > 0) {
                //var rowcache = ltclient.datacache.diff;
                for (var i = 0; i < rows.length; i++) {
                    targets.push(rsp.mv[rows[i]]);
                    // var rownum = parseInt(rows[i]);
                    // var data = extend({}, rowcache[rownum], true);
                    // data['$num'] = ts._iDisplayStart + rownum + 1;
                    // data['DT_RowId'] = rowidrender(data);
                    // var row = table.row(rownum);
                    // row.invalidate().data(data);
                }
            }
            for (var num in rsp.diff) {
                var i = parseInt(num),
                    row = ltclient.datacache.diff[num];
                if (!row || typeof i !== 'number' || targets.indexOf(num) >= 0) {
                    continue;
                }
                row['$num'] = tablesetting._iDisplayStart + i + 1;
                row['DT_RowId'] = rowidrender(row);
                for (var fid in rsp.diff[num]) {
                    if (!columnsMap.hasOwnProperty(fid)) continue;
                    var name = columnsMap[fid].name;
                    var cell = table.cell(i, name + ':name');
                    var data = row[fid];
                    cell.invalidate().data(data);
                    blink(cell.node());
                }
            }
            rsp = msg = null;
            if (changed) table.draw(false);
        }
    });
}

/**
 * 闪烁
 * @param {Node} dom 元素
 */
function blink(dom) {
    $(dom).animate({
        backgroundColor: '#e7eeff'
    }, {
        duration: 'fast',
        always: function () {
            $(dom).animate({
                'background-color': 'transparent'
            }, 'slow');
        }
    });
}

/**
 * 获取列配置映射关系
 * @param {Array.<DataTables.ColumnSettings>} array 表格列配置
 */
function getmap(array) {
    /** @type {Object.<string, DataTables.ColumnSettings>} */
    var obj = {};
    if (!(array instanceof Array)) return obj;
    for (var i = 0; i < array.length; i++) {
        var item = array[i];
        if (!item.data) continue;
        obj[item.data] = item;
    }
    return obj;
}

/**
 * 生成XHR配置
 * @param {*} options 配置参数
 */
function generateXHRHandler(options) {
    var listening;
    var rowidrender = template.compile(options.server.rowId);
    return handler;
    /**
     * AJAX处理器
     * @param {Object} request 请求
     * @param {Function} drawCallback 绘制表格
     * @param {DataTables.Settings} settings DataTables表格配置
     */
    function handler(request, drawCallback, settings) {
        var req = extend({}, options.server.ajax.data, true);
        var order;
        if (request.order instanceof Array && request.order.length > 0) {
            order = request.order[0];
            var cols = settings.oInit.columns,
                col = cols[order.column],
                data = typeof col.data === 'function' ? col.data.field : col.data;
            req.orderField = data;
            req.orderType = order.dir === "asc" ? 0 : 1;
        }
        req.pageIndex = settings.oFeatures.bPaginate ? request.start : 0;
        req.pageSize = settings.oFeatures.bPaginate ? request.length : 20;

        var listreq = new clients.TSQListClient.request(req),
            url = listreq.toString();
        if (url === listening) {
            var cache = ltclient.datacache;
            for (var i = 0; i < cache.diff.length; i++) {
                var element = cache.diff[i];
                element['$num'] = settings._iDisplayStart + i + 1;
                element['DT_RowId'] = rowidrender(element);
            }
            drawCallback({
                draw: request.draw,
                data: cache.diff,
                recordsTotal: cache.total,
                recordsFiltered: cache.total
            });
        } else {
            listening = url;
            ltclient.open(listreq, function (json) {
                var rsp = new clients.TSQListClient.response(json);
                /** @type {Array.<Object.<string, Object.<string, string|number>>>} */
                var data = [];
                for (var num in rsp.diff) {
                    var i = parseInt(num),
                        row = rsp.diff[num];
                    if (!row || typeof i !== 'number') continue;
                    row['$num'] = i + settings._iDisplayStart + 1;
                    row.DT_RowId = template.render(options.server.rowId, row);
                    data[i] = row;
                }
                drawCallback({
                    draw: request.draw,
                    data: data,
                    recordsTotal: rsp.total,
                    recordsFiltered: rsp.total
                });
            });
        }
    }
}

module.exports = {
    init: initTSQListClient,
    getajax: generateXHRHandler
}

/***/ }),

/***/ "./ClientApp/modules/polyfills/json-polyfill.js":
/*!******************************************************!*\
  !*** ./ClientApp/modules/polyfills/json-polyfill.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (!window.JSON) {
    window.JSON = {
        parse: function (sJSON) {
            return eval('(' + sJSON + ')');
        },
        stringify: (function () {
            var toString = Object.prototype.toString;
            var isArray = Array.isArray || function (a) {
                return toString.call(a) === '[object Array]';
            };
            var escMap = {
                '"': '\\"',
                '\\': '\\\\',
                '\b': '\\b',
                '\f': '\\f',
                '\n': '\\n',
                '\r': '\\r',
                '\t': '\\t'
            };
            var escFunc = function (m) {
                return escMap[m] || '\\u' + (m.charCodeAt(0) + 0x10000).toString(16).substr(1);
            };
            var escRE = /[\\"\u0000-\u001F\u2028\u2029]/g;
            return function stringify(value) {
                if (value == null) {
                    return 'null';
                } else if (typeof value === 'number') {
                    return isFinite(value) ? value.toString() : 'null';
                } else if (typeof value === 'boolean') {
                    return value.toString();
                } else if (typeof value === 'object') {
                    if (typeof value.toJSON === 'function') {
                        return stringify(value.toJSON());
                    } else if (isArray(value)) {
                        var res = '[';
                        for (var i = 0; i < value.length; i++)
                            res += (i ? ', ' : '') + stringify(value[i]);
                        return res + ']';
                    } else if (toString.call(value) === '[object Object]') {
                        var tmp = [];
                        for (var k in value) {
                            if (value.hasOwnProperty(k))
                                tmp.push(stringify(k) + ': ' + stringify(value[k]));
                        }
                        return '{' + tmp.join(', ') + '}';
                    }
                }
                return '"' + value.toString().replace(escRE, escFunc) + '"';
            };
        })()
    };
}
module.exports = window.JSON;

/***/ }),

/***/ "./ClientApp/modules/polyfills/requestAnimationFrame-polyfill.js":
/*!***********************************************************************!*\
  !*** ./ClientApp/modules/polyfills/requestAnimationFrame-polyfill.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// http://paulirish.com/2011/requestanimationframe-for-smart-animating/
// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating
// requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel
// MIT license
module.exports = (function () {
    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
    }
    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {
        var currTime = new Date().getTime();
        var timeToCall = Math.max(0, 16 - (currTime - lastTime));
        var id = window.setTimeout(function () {
            callback(currTime + timeToCall);
        }, timeToCall);
        lastTime = currTime + timeToCall;
        return id;
    };
    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {
        clearTimeout(id);
    };
}());

/***/ }),

/***/ "./ClientApp/modules/qcsroll.js":
/*!**************************************!*\
  !*** ./ClientApp/modules/qcsroll.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./polyfills/requestAnimationFrame-polyfill */ "./ClientApp/modules/polyfills/requestAnimationFrame-polyfill.js");



/**
 * 区域滚动栏
 * @param {HTMLElement} element DOM元素
 */
function QCScroll(element) {
    var width = 0;
    var container = document.createElement('div'),
        slider = document.createElement('div');
    var self = this;
    this.element = element;
    this.run = true;
    this.animateId = 0;
    slider.innerHTML = element.innerHTML;

    slider.style.cssText = 'float: left; overflow: hidden; zoom: 1;';
    container.appendChild(slider);

    element.innerHTML = '';
    element.appendChild(container);

    //获取元素真实宽度
    container.style.cssText = 'position: absolute !important; white-space:nowrap !important;visibility: hidden !important; left: 0';
    width = container.offsetWidth;
    container.style.cssText = '';
    container.style.width = width + 'px';

    container.onmouseover = function () {
        self.run = false;
        cancelAnimationFrame(self.animateId);
    };

    container.onmouseout = function () {
        self.run = true;
        clearTimeout(self.timer);
        self.timer = setTimeout(function () {
            cancelAnimationFrame(self.animateId);
            self.animate();
        }, 200)
    };

    /**
     * 启用动画
     * @returns {number} 动画ID
     */
    this.animate = function () {
        _animate();
        return self;

        function _animate() {
            if (!self.run) return;
            self.animateId = null;


              element.scrollLeft++;
            
            if (element.scrollLeft + element.clientWidth >= element.scrollWidth) {
                element.scrollLeft = 0;
            }

               self.animateId = requestAnimationFrame(_animate);
            

        }
    }

    /**
     * 取消动画
     * @param {number} id 动画ID
     */
    this.cancel = function (id) {
        cancelAnimationFrame(id || self.animateId);
    }
    //this.cancel();
}
module.exports = QCScroll;

/***/ }),

/***/ "./ClientApp/modules/qcsroll_new.js":
/*!******************************************!*\
  !*** ./ClientApp/modules/qcsroll_new.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./polyfills/requestAnimationFrame-polyfill */ "./ClientApp/modules/polyfills/requestAnimationFrame-polyfill.js");

//var isedge = navigator.userAgent.indexOf(' Edg/') > 0

/**
 * 区域滚动栏
 * @param {HTMLElement} element DOM元素
 */
function QCScrollNew(element) {
    var width = 0;
    var container = document.createElement('div'),
        slider = document.createElement('div');
    var self = this;
    this.element = element;
    this.container = container;
    this.run = true;
    this.animateId = 0;
    this.start = 0;
    slider.innerHTML = element.innerHTML;

    slider.style.cssText = 'float: left; overflow: hidden; zoom: 1;';
    container.appendChild(slider);

    element.innerHTML = '';
    element.appendChild(container);

    //获取元素真实宽度
    container.style.cssText = 'position: absolute !important; white-space:nowrap !important;visibility: hidden !important; left: 0';
    width = container.offsetWidth;
    container.style.cssText = '';
    container.style.width = width + 'px';
    this.width = this.container.scrollWidth

    container.onmouseover = function () {
        self.run = false;
        cancelAnimationFrame(self.animateId);
    };

    container.onmouseout = function () {
        self.run = true;
        clearTimeout(self.timer);
        self.timer = setTimeout(function () {
            cancelAnimationFrame(self.animateId);
            self.animate();
        }, 200)
    };

    /**
     * 启用动画
     * @returns {number} 动画ID
     */
    this.animate = function () {
        
        _animate();
        return self;

        function _animate() {
            if (!self.run) return;
            self.animateId = null;
            // if(isedge){
            //   element.scrollLeft = element.scrollLeft + 3;
            // }
            //else{

              //element.scrollLeft++;
              self.start += 1
              if(self.start >= self.width) self.start = 0
              self.container.style.transform = "translateX(-" + self.start +  "px)"

              
            //}
            // if (element.scrollLeft + element.clientWidth >= element.scrollWidth) {
            //     element.scrollLeft = 0;
            // }
            //if(isedge){
            //     setTimeout(function(){
            //         _animate()
            //     }, 100);                
            // }
            //else{
               self.animateId = requestAnimationFrame(_animate);
            //}

        }
    }

    /**
     * 取消动画
     * @param {number} id 动画ID
     */
    this.cancel = function (id) {
        cancelAnimationFrame(id || self.animateId);
    }
    //this.cancel();
}
module.exports = QCScrollNew;

/***/ }),

/***/ "./ClientApp/modules/template-web.js":
/*!*******************************************!*\
  !*** ./ClientApp/modules/template-web.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*! art-template@4.12.2 for browser | https://github.com/aui/art-template */
!function(e,t){ true?module.exports=t():undefined}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=6)}([function(e,t,n){(function(t){e.exports=!1;try{e.exports="[object process]"===Object.prototype.toString.call(t.process)}catch(n){}}).call(t,n(4))},function(e,t,n){"use strict";var r=n(8),i=n(3),o=n(23),s=function(e,t){t.onerror(e,t);var n=function(){return"{Template Error}"};return n.mappings=[],n.sourcesContent=[],n},a=function c(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};"string"!=typeof e?t=e:t.source=e,t=i.$extend(t),e=t.source,!0===t.debug&&(t.cache=!1,t.minimize=!1,t.compileDebug=!0),t.compileDebug&&(t.minimize=!1),t.filename&&(t.filename=t.resolveFilename(t.filename,t));var n=t.filename,a=t.cache,u=t.caches;if(a&&n){var p=u.get(n);if(p)return p}if(!e)try{e=t.loader(n,t),t.source=e}catch(d){var l=new o({name:"CompileError",path:n,message:"template not found: "+d.message,stack:d.stack});if(t.bail)throw l;return s(l,t)}var f=void 0,h=new r(t);try{f=h.build()}catch(l){if(l=new o(l),t.bail)throw l;return s(l,t)}var m=function(e,n){try{return f(e,n)}catch(l){if(!t.compileDebug)return t.cache=!1,t.compileDebug=!0,c(t)(e,n);if(l=new o(l),t.bail)throw l;return s(l,t)()}};return m.mappings=f.mappings,m.sourcesContent=f.sourcesContent,m.toString=function(){return f.toString()},a&&n&&u.set(n,m),m};a.Compiler=r,e.exports=a},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0]};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},function(e,t,n){"use strict";function r(){this.$extend=function(e){return e=e||{},s(e,e instanceof r?e:this)}}var i=n(0),o=n(12),s=n(13),a=n(14),c=n(15),u=n(16),p=n(17),l=n(18),f=n(19),h=n(20),m=n(22),d={source:null,filename:null,rules:[f,l],escape:!0,debug:!!i&&"production"!=="development",bail:!0,cache:!0,minimize:!0,compileDebug:!1,resolveFilename:m,include:a,htmlMinifier:h,htmlMinifierOptions:{collapseWhitespace:!0,minifyCSS:!0,minifyJS:!0,ignoreCustomFragments:[]},onerror:c,loader:p,caches:u,root:"/",extname:".art",ignore:[],imports:o};r.prototype=d,e.exports=new r},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(r){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){},function(e,t,n){"use strict";var r=n(7),i=n(1),o=n(24),s=function(e,t){return t instanceof Object?r({filename:e},t):i({filename:e,source:t})};s.render=r,s.compile=i,s.defaults=o,e.exports=s},function(e,t,n){"use strict";var r=n(1),i=function(e,t,n){return r(e,n)(t)};e.exports=i},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=n(9),o=n(11),s="$data",a="$imports",c="print",u="include",p="extend",l="block",f="$$out",h="$$line",m="$$blocks",d="$$slice",v="$$from",g="$$options",y=function(e,t){return Object.hasOwnProperty.call(e,t)},b=JSON.stringify,x=function(){function e(t){var n,i,y=this;r(this,e);var b=t.source,x=t.minimize,w=t.htmlMinifier;if(this.options=t,this.stacks=[],this.context=[],this.scripts=[],this.CONTEXT_MAP={},this.ignore=[s,a,g].concat(t.ignore),this.internal=(n={},n[f]="''",n[h]="[0,0]",n[m]="arguments[1]||{}",n[v]="null",n[c]="function(){var s=''.concat.apply('',arguments);"+f+"+=s;return s}",n[u]="function(src,data){var s="+g+".include(src,data||"+s+",arguments[2]||"+m+","+g+");"+f+"+=s;return s}",n[p]="function(from){"+v+"=from}",n[d]="function(c,p,s){p="+f+";"+f+"='';c();s="+f+";"+f+"=p+s;return s}",n[l]="function(){var a=arguments,s;if(typeof a[0]==='function'){return "+d+"(a[0])}else if("+v+"){if(!"+m+"[a[0]]){"+m+"[a[0]]="+d+"(a[1])}else{"+f+"+="+m+"[a[0]]}}else{s="+m+"[a[0]];if(typeof s==='string'){"+f+"+=s}else{s="+d+"(a[1])}return s}}",n),this.dependencies=(i={},i[c]=[f],i[u]=[f,g,s,m],i[p]=[v,u],i[l]=[d,v,f,m],i),this.importContext(f),t.compileDebug&&this.importContext(h),x)try{b=w(b,t)}catch(E){}this.source=b,this.getTplTokens(b,t.rules,this).forEach(function(e){e.type===o.TYPE_STRING?y.parseString(e):y.parseExpression(e)})}return e.prototype.getTplTokens=function(){return o.apply(undefined,arguments)},e.prototype.getEsTokens=function(e){return i(e)},e.prototype.getVariables=function(e){var t=!1;return e.filter(function(e){return"whitespace"!==e.type&&"comment"!==e.type}).filter(function(e){return"name"===e.type&&!t||(t="punctuator"===e.type&&"."===e.value,!1)}).map(function(e){return e.value})},e.prototype.importContext=function(e){var t=this,n="",r=this.internal,i=this.dependencies,o=this.ignore,c=this.context,u=this.options,p=u.imports,l=this.CONTEXT_MAP;y(l,e)||-1!==o.indexOf(e)||(y(r,e)?(n=r[e],y(i,e)&&i[e].forEach(function(e){return t.importContext(e)})):n="$escape"===e||"$each"===e||y(p,e)?a+"."+e:s+"."+e,l[e]=n,c.push({name:e,value:n}))},e.prototype.parseString=function(e){var t=e.value;if(t){var n=f+"+="+b(t);this.scripts.push({source:t,tplToken:e,code:n})}},e.prototype.parseExpression=function(e){var t=this,n=e.value,r=e.script,i=r.output,s=this.options.escape,a=r.code;i&&(a=!1===s||i===o.TYPE_RAW?f+"+="+r.code:f+"+=$escape("+r.code+")");var c=this.getEsTokens(a);this.getVariables(c).forEach(function(e){return t.importContext(e)}),this.scripts.push({source:n,tplToken:e,code:a})},e.prototype.checkExpression=function(e){for(var t=[[/^\s*}[\w\W]*?{?[\s;]*$/,""],[/(^[\w\W]*?\([\w\W]*?(?:=>|\([\w\W]*?\))\s*{[\s;]*$)/,"$1})"],[/(^[\w\W]*?\([\w\W]*?\)\s*{[\s;]*$)/,"$1}"]],n=0;n<t.length;){if(t[n][0].test(e)){var r;e=(r=e).replace.apply(r,t[n]);break}n++}try{return new Function(e),!0}catch(i){return!1}},e.prototype.build=function(){var e=this.options,t=this.context,n=this.scripts,r=this.stacks,i=this.source,c=e.filename,l=e.imports,d=[],x=y(this.CONTEXT_MAP,p),w=0,E=function(e,t){var n=t.line,i=t.start,o={generated:{line:r.length+w+1,column:1},original:{line:n+1,column:i+1}};return w+=e.split(/\n/).length-1,o},k=function(e){return e.replace(/^[\t ]+|[\t ]$/g,"")};r.push("function("+s+"){"),r.push("'use strict'"),r.push(s+"="+s+"||{}"),r.push("var "+t.map(function(e){return e.name+"="+e.value}).join(",")),e.compileDebug?(r.push("try{"),n.forEach(function(e){e.tplToken.type===o.TYPE_EXPRESSION&&r.push(h+"=["+[e.tplToken.line,e.tplToken.start].join(",")+"]"),d.push(E(e.code,e.tplToken)),r.push(k(e.code))}),r.push("}catch(error){"),r.push("throw {"+["name:'RuntimeError'","path:"+b(c),"message:error.message","line:"+h+"[0]+1","column:"+h+"[1]+1","source:"+b(i),"stack:error.stack"].join(",")+"}"),r.push("}")):n.forEach(function(e){d.push(E(e.code,e.tplToken)),r.push(k(e.code))}),x&&(r.push(f+"=''"),r.push(u+"("+v+","+s+","+m+")")),r.push("return "+f),r.push("}");var T=r.join("\n");try{var O=new Function(a,g,"return "+T)(l,e);return O.mappings=d,O.sourcesContent=[i],O}catch(F){for(var $=0,j=0,S=0,_=void 0;$<n.length;){var C=n[$];if(!this.checkExpression(C.code)){j=C.tplToken.line,S=C.tplToken.start,_=C.code;break}$++}throw{name:"CompileError",path:c,message:F.message,line:j+1,column:S+1,source:i,generated:_,stack:F.stack}}},e}();x.CONSTS={DATA:s,IMPORTS:a,PRINT:c,INCLUDE:u,EXTEND:p,BLOCK:l,OPTIONS:g,OUT:f,LINE:h,BLOCKS:m,SLICE:d,FROM:v,ESCAPE:"$escape",EACH:"$each"},e.exports=x},function(e,t,n){"use strict";var r=n(10),i=n(2)["default"],o=n(2).matchToToken,s=function(e){return e.match(i).map(function(e){return i.lastIndex=0,o(i.exec(e))}).map(function(e){return"name"===e.type&&r(e.value)&&(e.type="keyword"),e})};e.exports=s},function(e,t,n){"use strict";var r={"abstract":!0,await:!0,"boolean":!0,"break":!0,"byte":!0,"case":!0,"catch":!0,"char":!0,"class":!0,"const":!0,"continue":!0,"debugger":!0,"default":!0,"delete":!0,"do":!0,"double":!0,"else":!0,"enum":!0,"export":!0,"extends":!0,"false":!0,"final":!0,"finally":!0,"float":!0,"for":!0,"function":!0,"goto":!0,"if":!0,"implements":!0,"import":!0,"in":!0,"instanceof":!0,"int":!0,"interface":!0,"let":!0,"long":!0,"native":!0,"new":!0,"null":!0,"package":!0,"private":!0,"protected":!0,"public":!0,"return":!0,"short":!0,"static":!0,"super":!0,"switch":!0,"synchronized":!0,"this":!0,"throw":!0,"transient":!0,"true":!0,"try":!0,"typeof":!0,"var":!0,"void":!0,"volatile":!0,"while":!0,"with":!0,"yield":!0};e.exports=function(e){return r.hasOwnProperty(e)}},function(e,t,n){"use strict";function r(e,t,n,r){var i=new String(e);return i.line=t,i.start=n,i.end=r,i}var i=function(e,t){for(var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},i=[{type:"string",value:e,line:0,start:0,end:e.length}],o=0;o<t.length;o++)!function(e){for(var t=e.test.ignoreCase?"ig":"g",o=e.test.source+"|^$|[\\w\\W]",s=new RegExp(o,t),a=0;a<i.length;a++)if("string"===i[a].type){for(var c=i[a].line,u=i[a].start,p=i[a].end,l=i[a].value.match(s),f=[],h=0;h<l.length;h++){var m=l[h];e.test.lastIndex=0;var d=e.test.exec(m),v=d?"expression":"string",g=f[f.length-1],y=g||i[a],b=y.value;u=y.line===c?g?g.end:u:b.length-b.lastIndexOf("\n")-1,p=u+m.length;var x={type:v,value:m,line:c,start:u,end:p};if("string"===v)g&&"string"===g.type?(g.value+=m,g.end+=m.length):f.push(x);else{d[0]=new r(d[0],c,u,p);var w=e.use.apply(n,d);x.script=w,f.push(x)}c+=m.split(/\n/).length-1}i.splice.apply(i,[a,1].concat(f)),a+=f.length-1}}(t[o]);return i};i.TYPE_STRING="string",i.TYPE_EXPRESSION="expression",i.TYPE_RAW="raw",i.TYPE_ESCAPE="escape",e.exports=i},function(e,t,n){"use strict";(function(t){function r(e){return"string"!=typeof e&&(e=e===undefined||null===e?"":"function"==typeof e?r(e.call(e)):JSON.stringify(e)),e}function i(e){var t=""+e,n=a.exec(t);if(!n)return e;var r="",i=void 0,o=void 0,s=void 0;for(i=n.index,o=0;i<t.length;i++){switch(t.charCodeAt(i)){case 34:s="&#34;";break;case 38:s="&#38;";break;case 39:s="&#39;";break;case 60:s="&#60;";break;case 62:s="&#62;";break;default:continue}o!==i&&(r+=t.substring(o,i)),o=i+1,r+=s}return o!==i?r+t.substring(o,i):r}/*! art-template@runtime | https://github.com/aui/art-template */
var o=n(0),s=Object.create(o?t:window),a=/["&'<>]/;s.$escape=function(e){return i(r(e))},s.$each=function(e,t){if(Array.isArray(e))for(var n=0,r=e.length;n<r;n++)t(e[n],n);else for(var i in e)t(e[i],i)},e.exports=s}).call(t,n(4))},function(e,t,n){"use strict";var r=Object.prototype.toString,i=function(e){return null===e?"Null":r.call(e).slice(8,-1)},o=function s(e,t){var n=void 0,r=i(e);if("Object"===r?n=Object.create(t||{}):"Array"===r&&(n=[].concat(t||[])),n){for(var o in e)Object.hasOwnProperty.call(e,o)&&(n[o]=s(e[o],n[o]));return n}return e};e.exports=o},function(e,t,n){"use strict";var r=function(e,t,r,i){var o=n(1);return i=i.$extend({filename:i.resolveFilename(e,i),bail:!0,source:null}),o(i)(t,r)};e.exports=r},function(e,t,n){"use strict";var r=function(e){console.error(e.name,e.message)};e.exports=r},function(e,t,n){"use strict";var r={__data:Object.create(null),set:function(e,t){this.__data[e]=t},get:function(e){return this.__data[e]},reset:function(){this.__data={}}};e.exports=r},function(e,t,n){"use strict";var r=n(0),i=function(e){if(r){return n(5).readFileSync(e,"utf8")}var t=document.getElementById(e);return t.value||t.innerHTML};e.exports=i},function(e,t,n){"use strict";var r={test:/{{([@#]?)[ \t]*(\/?)([\w\W]*?)[ \t]*}}/,use:function(e,t,n,i){var o=this,s=o.options,a=o.getEsTokens(i),c=a.map(function(e){return e.value}),u={},p=void 0,l=!!t&&"raw",f=n+c.shift(),h=function(t,n){console.warn((s.filename||"anonymous")+":"+(e.line+1)+":"+(e.start+1)+"\nTemplate upgrade: {{"+t+"}} -> {{"+n+"}}")};switch("#"===t&&h("#value","@value"),f){case"set":i="var "+c.join("").trim();break;case"if":i="if("+c.join("").trim()+"){";break;case"else":var m=c.indexOf("if");~m?(c.splice(0,m+1),i="}else if("+c.join("").trim()+"){"):i="}else{";break;case"/if":i="}";break;case"each":p=r._split(a),p.shift(),"as"===p[1]&&(h("each object as value index","each object value index"),p.splice(1,1));i="$each("+(p[0]||"$data")+",function("+(p[1]||"$value")+","+(p[2]||"$index")+"){";break;case"/each":i="})";break;case"block":p=r._split(a),p.shift(),i="block("+p.join(",").trim()+",function(){";break;case"/block":i="})";break;case"echo":f="print",h("echo value","value");case"print":case"include":case"extend":if(0!==c.join("").trim().indexOf("(")){p=r._split(a),p.shift(),i=f+"("+p.join(",")+")";break}default:if(~c.indexOf("|")){var d=a.reduce(function(e,t){var n=t.value,r=t.type;return"|"===n?e.push([]):"whitespace"!==r&&"comment"!==r&&(e.length||e.push([]),":"===n&&1===e[e.length-1].length?h("value | filter: argv","value | filter argv"):e[e.length-1].push(t)),e},[]).map(function(e){return r._split(e)});i=d.reduce(function(e,t){var n=t.shift();return t.unshift(e),"$imports."+n+"("+t.join(",")+")"},d.shift().join(" ").trim())}l=l||"escape"}return u.code=i,u.output=l,u},_split:function(e){e=e.filter(function(e){var t=e.type;return"whitespace"!==t&&"comment"!==t});for(var t=0,n=e.shift(),r=/\]|\)/,i=[[n]];t<e.length;){var o=e[t];"punctuator"===o.type||"punctuator"===n.type&&!r.test(n.value)?i[i.length-1].push(o):i.push([o]),n=o,t++}return i.map(function(e){return e.map(function(e){return e.value}).join("")})}};e.exports=r},function(e,t,n){"use strict";var r={test:/<%(#?)((?:==|=#|[=-])?)[ \t]*([\w\W]*?)[ \t]*(-?)%>/,use:function(e,t,n,r){return n={"-":"raw","=":"escape","":!1,"==":"raw","=#":"raw"}[n],t&&(r="/*"+r+"*/",n=!1),{code:r,output:n}}};e.exports=r},function(e,t,n){"use strict";var r=n(0),i=function(e,t){if(r){var i,o=n(21).minify,s=t.htmlMinifierOptions,a=t.rules.map(function(e){return e.test});(i=s.ignoreCustomFragments).push.apply(i,a),e=o(e,s)}return e};e.exports=i},function(e,t){!function(e){e.noop=function(){}}("object"==typeof e&&"object"==typeof e.exports?e.exports:window)},function(e,t,n){"use strict";var r=n(0),i=/^\.+\//,o=function(e,t){if(r){var o=n(5),s=t.root,a=t.extname;if(i.test(e)){var c=t.filename,u=!c||e===c,p=u?s:o.dirname(c);e=o.resolve(p,e)}else e=o.resolve(s,e);o.extname(e)||(e+=a)}return e};e.exports=o},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function s(e){var t=e.name,n=e.source,r=e.path,i=e.line,o=e.column,s=e.generated,a=e.message;if(!n)return a;var c=n.split(/\n/),u=Math.max(i-3,0),p=Math.min(c.length,i+3),l=c.slice(u,p).map(function(e,t){var n=t+u+1;return(n===i?" >> ":"    ")+n+"| "+e}).join("\n");return(r||"anonymous")+":"+i+":"+o+"\n"+l+"\n\n"+t+": "+a+(s?"\n   generated: "+s:"")}var a=function(e){function t(n){r(this,t);var o=i(this,e.call(this,n.message));return o.name="TemplateError",o.message=s(n),Error.captureStackTrace&&Error.captureStackTrace(o,o.constructor),o}return o(t,e),t}(Error);e.exports=a},function(e,t,n){"use strict";e.exports=n(3)}])});

/***/ }),

/***/ "./ClientApp/modules/tools.js":
/*!************************************!*\
  !*** ./ClientApp/modules/tools.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {

    objToPars: function(data){
        var arr = [];
        for (var key in data) {
            arr.push(key + "=" + data[key]);
        }
        return arr.join("&");
    },
    /**
   * 字符串截取 
   * 
   * @param {string} txt 输入文本
   * @param {int} n 截取多少个字 一个汉字算2个
   * @param {boolean} needtip 是否需要全文提示
   * @returns 
   */
  txtLeft: function (txt, n, needtip) {
    if( txt == null || txt == "" ){
      return "";
    }
    var thislength = 0;
    for (var i = 0; i < txt.length; i++) {
      if (txt.charCodeAt(i) > 255) {
        thislength += 2;
      }
      else {
        thislength++;
      }
      if (thislength > n + 3) {
        if(needtip){
          return '<span title="' + txt + '">' + txt.substring(0, i) + "...</span>";
        }
        else{
          return txt.substring(0, i) + "...";
        }
        break;
      }
    }
    return txt;
  }
    
    
};

/***/ }),

/***/ "./ClientApp/modules/topspeedclient/ClientManager.js":
/*!***********************************************************!*\
  !*** ./ClientApp/modules/topspeedclient/ClientManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var TSQBaseClient = __webpack_require__(/*! ./baseclient */ "./ClientApp/modules/topspeedclient/baseclient.js");
var TSQListClient = __webpack_require__(/*! ./quotelistclient */ "./ClientApp/modules/topspeedclient/quotelistclient.js");

/**
 * @namespace
 * @name TSQClientManager
 */
module.exports = {
    /**
     * 极速行情列表推送客户端
     * @param {Object} args 参数
     * @param {string} args.host 域名
     * @param {string} args.baseurl 接口基路径
     * @param {boolean} args.enableMutiDomain 是否启用域名泛解析
     * @param {Function} args.onmessage 收到消息回调
     * @param {Function} args.onerror 错误回调
     * @param {number} args.timeout 请求超时时间ms
     * @param {number} args.delay 错误重试延迟ms
     * @param {number} args.errorRetry 错误重试次数
     */
    TSQListClient: TSQListClient,
    /**
     * 极速行情推送基客户端
     * @param {Object} args 参数
     * @param {string} args.baseurl 请求基地址
     * @param {TSQBaseClient.method|string} args.method 请求方法
     * @param {Object.<string, string|number|boolean>} args.data 数据
     * @param {function} args.onmessage 收到数据时的回调
     * @param {function} args.onerror 错误回调
     * @param {number} args.timeout 请求超时时间ms
     * @param {number} args.delay 错误重试延迟ms
     * @param {number} args.errorRetry 错误重试次数
     * @param {boolean} start 是否启动
     */
    TSQClient: TSQBaseClient
}

/***/ }),

/***/ "./ClientApp/modules/topspeedclient/TSQExceptions.js":
/*!***********************************************************!*\
  !*** ./ClientApp/modules/topspeedclient/TSQExceptions.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * errors config
 * @namespace
 * @property {Object[]} ServerSide 服务器错误
 * @property {number} ServerSide[].errorCode 错误代码
 * @property {string} ServerSide[].errorMessage 错误信息
 * @property {string} ServerSide[].errorDesc 错误描述
 * @property {number} ServerSide[].parentCode 父级错误代码
 */
var errors = __webpack_require__(/*! ./errors.json */ "./ClientApp/modules/topspeedclient/errors.json");

var servererrs = (function (errs) {
    /**
     * @type {Object.<number, TSQServerError>} 
     */
    var dic = {};
    if (errs instanceof Array) {
        for (var i = 0; i < errs.length; i++) {
            var err = errs[i];
            if (typeof err.errorCode !== 'number') continue;
            dic[err.errorCode] = new TSQServerError(err, dic);
        }
    }
    return dic;
})(errors.ServerSide);

/**
 * 极速行情推送服务端错误
 * @class
 * @param {number} code 错误代码
 * @param {string} msg 错误消息
 * @param {string} desc 错误描述
 * @param {number} parentCode 父级错误
 */
function TSQServerError(code, msg, desc, parentCode) {
    var dict = servererrs;
    if (typeof arguments[0] === 'object') {
        var obj = arguments[0];
        dict = arguments[1];
        code = obj.errorCode;
        msg = obj.errorMessage;
        desc = obj.errorDesc;
        parentCode = obj.parentCode;
        
    }
    this.errorCode = code || 0;
    this.errorMessage = msg || 'success';
    this.errorDesc = desc || '';
    if (parentCode && dict.hasOwnProperty(parentCode)) {
        this.parent = dict[parentCode];
    }
}

TSQServerError.errors = servererrs;


var clienterrs = (function (errs) {
    /**
     * @type {Object.<number, TSQClientError>} 
     */
    var dic = {};
    if (errs instanceof Array) {
        for (var i = 0; i < errs.length; i++) {
            var err = errs[i];
            if (typeof err.errorCode !== 'number') continue;
            dic[err.errorCode] = new TSQClientError(err);
        }
    }
    return dic;
})(errors.ClientSide);

/**
 * 极速行情推送客户端错误
 * @class
 * @param {number} code 错误代码
 * @param {string} msg 错误消息
 * @param {string} desc 错误描述
 * @param {*} inner 内部错误
 */
function TSQClientError(code, msg, desc, inner) {
    if (typeof arguments[0] === 'object') {
        var obj = arguments[0];
        code = obj.errorCode;
        msg = obj.errorMessage;
        desc = obj.errorDesc;
        inner = obj.innerError;
    }
    this.errorCode = code || 0;
    this.errorMessage = msg || 'success';
    this.errorDesc = desc || '';
    if (inner) this.innerError = inner;
}

TSQClientError.errors = clienterrs;

module.exports = {
    /** 
     * 服务端错误
     */
    server: TSQServerError.errors,
    /** 
     * 客户端错误
     */
    client: TSQClientError.errors,
    /**
     * 极速行情推送服务端错误
     * @class
     * @param {number} code 错误代码
     * @param {string} msg 错误消息
     * @param {string} desc 错误描述
     * @param {number} parentCode 父级错误
     */
    TSQServerError: TSQServerError,
    /**
     * 极速行情推送客户端错误
     * @class
     * @param {number} code 错误代码
     * @param {string} msg 错误消息
     * @param {string} desc 错误描述
     * @param {*} inner 内部错误
     */
    TSQClientError: TSQClientError
};

/***/ }),

/***/ "./ClientApp/modules/topspeedclient/baseclient.js":
/*!********************************************************!*\
  !*** ./ClientApp/modules/topspeedclient/baseclient.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var jsonp = __webpack_require__(/*! ../jsonp */ "./ClientApp/modules/jsonp.js");
var JSON = __webpack_require__(/*! ../polyfills/json-polyfill */ "./ClientApp/modules/polyfills/json-polyfill.js");
var extend = __webpack_require__(/*! ../utils.extend */ "./ClientApp/modules/utils.extend.js");
var tsqerr = __webpack_require__(/*! ./TSQExceptions */ "./ClientApp/modules/topspeedclient/TSQExceptions.js");

/**
 * @namespace
 */
module.exports = TSQBaseClient;

/**
 * 推送类型路径映射
 * @readonly
 */
var PushTypePathMap = {
    /** 不推送 */
    get: '/get',
    /** 长轮询推送 */
    polling: '/poll',
    /** 流推送 */
    streaming: '/stream',
    /** iframe推送 */
    iframe: '/iframe',
    /** 服务器事件推送 */
    serverevent: '/sse'
}

/**
 * 数据返回类型枚举
 * @readonly
 * @enum {number}
 */
var ReturnType = {
    ERROR: 1,
    HEARTBEAT: 2,
    DATA: 3
}

/**
 * 极速行情推送基客户端
 * @class
 * @param {Object} args 参数
 * @param {string} args.baseurl 请求基地址
 * @param {TSQBaseClient.method|string} args.method 请求方法
 * @param {Object.<string, string|number|boolean>} args.data 数据
 * @param {function} args.onmessage 收到数据时的回调
 * @param {function} args.onerror 错误回调
 * @param {number} args.timeout 请求超时时间ms
 * @param {number} args.delay 错误重试延迟ms
 * @param {number} args.errorRetry 错误重试次数
 * @param {boolean} start 是否启动
 */
function TSQBaseClient(args, start) {
    if (!TSQBaseClient.cid) TSQBaseClient.cid = 0;
    var self = this,
        es = null,
        retry = 0;
    var reqtimer = 0,
        checktimer = 0,
        delaytimer = 0;
    var opt = extend({
        method: TSQBaseClient.method.AUTO,
        timeout: 60 * 1000,
        delay: 2 * 1000,
        onmessage: null,
        onerror: function (e) {
            console.error(e);
        },
        errorRetry: 3
    }, args);
    if (opt.method === TSQBaseClient.method.SERVEREVENT && typeof EventSource === 'undefined') {
        throw tsqerr.client[4];
    }
    this.sid = 0;
    this.clientId = TSQBaseClient.cid++;
    this.cb = 'tsq_cb_' + this.clientId + (new Date).getTime();
    this.onmessage = opt.onmessage;
    /** 订阅 */
    this.subscribe = function () {
        if (!checktimer) {
            checktimer = setInterval(function () {
                var now = (new Date()).getTime();
                if (now - self.lastMsgTime > opt.timeout) {
                    self.errorHander(tsqerr.client[1]);
                }
            }, 1000);
        }
        this.stopped = false;
        self_sub.apply(this);
    }

    /** 取消订阅 */
    this.cancel = function () {
        this.stopped = true;
        this.lastMsgTime = 0;
        window[self.cb] = undefined;
        if (es) {
            es.close();
            es = null;
        }
        if (checktimer) {
            clearInterval(checktimer);
            checktimer = 0;
        }
        if (reqtimer) {
            clearTimeout(reqtimer);
            reqtimer = 0;
        }
        if (delaytimer) {
            clearTimeout(delaytimer);
            delaytimer = 0;
        }
        this.log('stopped');
    }

    /**
     * 处理消息
     * @param {'push'|'get'} type 类型
     * @param {Object} msg 消息内容
     * @param {number} msg.rc 错误类型
     * @param {number} msg.rt 返回数据类型
     * @param {number} msg.sid 会话ID
     * @param {*} msg.data 数据内容
     */
    this.procMessage = function (msg) {
        try {
            if (!msg) {
                this.errorHander(tsqerr.client[2]);
                return;
            }
            // 保存会话ID
            if (msg.sid) this.sid = msg.sid;
            // 响应类型处理
            if (msg.rt == ReturnType.HEARTBEAT) {
                this.log('heartbeat');
                this.lastMsgTime = (new Date).getTime();
                // 无数据时延时0-1s
                self_sub(Math.random() * 1000);
            } else if (msg.rt == ReturnType.ERROR) {
                this.errorHander(tsqerr.server[msg.rc]);
            } else {
                retry = 0;
                this.lastMsgTime = (new Date).getTime();
                this.log(msg.data);
                if (typeof this.onmessage === 'function') {
                    this.onmessage.apply(self, [msg.data]);
                }
                self_sub();
            }
        } catch (e) {
            console.error(e);
        } finally {
            msg = null;
        }
    }

    this.errorHander = function () {
        this.cancel();
        if (typeof opt.onerror === 'function') {
            opt.onerror.apply(self, arguments);
        }
        if (arguments[0] instanceof tsqerr.TSQClientError || arguments[0] instanceof tsqerr.TSQServerError) {
            this.log(arguments[0].errorMessage, arguments);
        } else {
            this.log(arguments);
        }
        if (opt.errorRetry > 0) {
            if (++retry < opt.errorRetry) {
                delaytimer = setTimeout(function () {
                    self.subscribe.apply(self);
                }, opt.delay);
            } else {
                var err = tsqerr.client[3];
                if (typeof opt.onerror === 'function') {
                    opt.onerror.apply(self, [err]);
                }
                console.error(err.errorMessage);
            }
        }
    }

    /** 日志 */
    this.log = function () {
        return;
        try {
            var v = arguments;
            var p = 'tsqclient[' + self.clientId + ']';
            var t = new Date().toTimeString().substr(0, 8);
            if (v.length == 1) {
                console.log(t, p, v[0]);
            } else if (v.length == 2) {
                console.log(t, p, v[0], v[1]);
            } else if (v.length == 3) {
                console.log(t, p, v[0], v[1], v[2]);
            } else if (v.length == 4) {
                console.log(t, p, v[0], v[1], v[2], v[3]);
            } else if (v.length == 5) {
                console.log(t, p, v[0], v[1], v[2], v[3], v[4]);
            } else {
                console.log(t, p, v);
            }
        } catch (e) {}
    }

    function self_sub(delay) {
        if (self.stopped) return;

        if (opt.method === TSQBaseClient.method.SERVEREVENT) {
            if (es instanceof EventSource) return;
            var url = serialize(args.baseurl + PushTypePathMap[opt.method], opt.data);
            self.log('sse start', url);
            es = new EventSource(url);
            es.onmessage = function (evt) {
                self.procMessage(JSON.parse(evt.data));
            }
            es.onerror = function (evt) {
                self.log('EventSource Error');
                es.close();
                var error = tsqerr.client[2];
                error.innerError = evt;
                self.errorHander(error);
            }
        } else if (opt.method === TSQBaseClient.method.POLLING) {
            opt.data.sid = self.sid ? self.sid : 0;
            clearTimeout(reqtimer);
            reqtimer = setTimeout(polling, delay || 0);
        } else if (opt.method === TSQBaseClient.method.GET) {
            self.cancel();
            jsonp(args.baseurl + PushTypePathMap[opt.method], opt.data, 'cb', function (json) {
                self.procMessage.apply(self, [json]);
            }, function () {
                self.errorHander(tsqerr.client[2]);
            });
        } else {
            var err = tsqerr.client[4];
            self.errorHander.apply(self, [err]);
        }

        function polling() {
            if (typeof window[self.cb] !== 'function') {
                window[self.cb] = function (json) {
                    self.procMessage.apply(self, [json]);
                };
            }
            var param = extend({
                sid: self.sid ? self.sid : 0,
                cb: self.cb
            }, opt.data);
            var url = serialize(args.baseurl + PushTypePathMap[opt.method], param);
            self.log('long-polling', url);
            jsonp(url, {}, '_', function () {

            }, function () {
                self.errorHander(tsqerr.client[2]);
            });
        }
    }

    if (start) this.subscribe();
}

/**
 * 客户端请求方法
 */
TSQBaseClient.method = {
    /** 自动 */
    AUTO: typeof EventSource !== 'undefined' ? 'serverevent' : 'polling',
    /** 获取(不推动) */
    GET: 'get',
    /** 长轮询 */
    POLLING: 'polling',
    /** IFREME */
    IFRAME: 'iframe',
    /** 无限流 */
    STREAM: 'streaming',
    /** 服务器事件 */
    SERVEREVENT: 'serverevent'
};

TSQBaseClient.PushTypePathMap = PushTypePathMap;
TSQBaseClient.ReturnType = ReturnType;
TSQBaseClient.version = '2.0.1';

/**
 * 序列参数，并返回完整url
 * @param {string} url url基路径
 * @param {Object.<string, string|number|boolean>} param 参数对象
 * @returns {string} 完整url
 */
function serialize(url, param) {
    if (arguments.length === 1) {
        param = url;
        url = '';
    }
    var queryString = '';
    var keys = getKeys(param);
    for (var i = 0; i < keys.length; i++) {
        queryString += encodeURIComponent(keys[i]) + '=' + encodeURIComponent(param[keys[i]])
        if (i != keys.length - 1) {
            queryString += '&';
        }
    }
    url += queryString ? (url.indexOf('?') > 0 ? '&' : '?') + queryString : '';
    return url;

    function getKeys(obj) {
        var keys = [];
        if (!obj) return keys;
        for (var key in obj) {
            if (obj.hasOwnProperty(key) && obj[key] !== undefined) {
                keys.push(key);
            }
        }
        return keys;
    }
}

/***/ }),

/***/ "./ClientApp/modules/topspeedclient/errors.json":
/*!******************************************************!*\
  !*** ./ClientApp/modules/topspeedclient/errors.json ***!
  \******************************************************/
/*! exports provided: ServerSide, ClientSide, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"ServerSide\":[{\"errorCode\":0,\"errorMessage\":\"success\",\"errorDesc\":\"响应成功\"},{\"errorCode\":1,\"errorMessage\":\"server is initializing\",\"errorDesc\":\"服务器正在初始化中，请稍后重试\"},{\"errorCode\":100,\"errorMessage\":\"bad request\",\"errorDesc\":\"请求错误\"},{\"errorCode\":101,\"errorMessage\":\"method not allowed\",\"errorDesc\":\"错误的HTTP请求方法\",\"parentCode\":100},{\"errorCode\":102,\"errorMessage\":\"invaild request parameters\",\"errorDesc\":\"请求参数非法\",\"parentCode\":100},{\"errorCode\":103,\"errorMessage\":\"invaild or invalidated session id\",\"errorDesc\":\"错误或失效的长轮询请求sid\",\"parentCode\":100},{\"errorCode\":1000,\"errorMessage\":\"server internal error\",\"errorDesc\":\"服务器内部异常\"}],\"ClientSide\":[{\"errorCode\":0,\"errorMessage\":\"success\",\"errorDesc\":\"成功\"},{\"errorCode\":1,\"errorMessage\":\"request timeout\",\"errorDesc\":\"请求超时\"},{\"errorCode\":2,\"errorMessage\":\"error response type\",\"errorDesc\":\"错误的响应类型\"},{\"errorCode\":3,\"errorMessage\":\"retried too many times\",\"errorDesc\":\"超过最大重试次数\"},{\"errorCode\":4,\"errorMessage\":\"Unsupport request method\",\"errorDesc\":\"不支持的请求方法\"}]}");

/***/ }),

/***/ "./ClientApp/modules/topspeedclient/quotelistclient.js":
/*!*************************************************************!*\
  !*** ./ClientApp/modules/topspeedclient/quotelistclient.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var tsqclient = __webpack_require__(/*! ./baseclient */ "./ClientApp/modules/topspeedclient/baseclient.js");
var memcache = __webpack_require__(/*! ../utils.cache */ "./ClientApp/modules/utils.cache.js");
var extend = __webpack_require__(/*! ../utils.extend */ "./ClientApp/modules/utils.extend.js");
var throttle = _.throttle
var clients = new memcache();

/**
 * 极速行情列表推送客户端
 * @param {Object} args 参数
 * @param {string} args.host 域名
 * @param {string} args.baseurl 接口基路径
 * @param {boolean} args.enableMutiDomain 是否启用域名泛解析
 * @param {Function.<TSQListResponse>} args.onmessage 收到消息回调
 * @param {Function} args.onerror 错误回调
 * @param {number} args.timeout 请求超时时间ms
 * @param {number} args.delay 错误重试延迟ms
 * @param {number} args.errorRetry 错误重试次数
 * @param {boolean|number} args.throttle 截流等待时间，大于零时有效，默认不开启
 */
function TSQListClient(args) {
    var throttled;
    var opt = extend({
        enableMutiDomain: true,
        delay: 2000,
        errorRetry: 10
    }, args);

    /** @type {tsqclient} */
    var client;
    /** @type {memcache} */
    var cache = this.datacache = new memcache({
        rows: [],
        total: 0
    });
    var prefix = !opt.enableMutiDomain ? '' : (Math.random() * 100 + 1).toFixed(0) + '.',
        baseurl = opt.baseurl || '/api/qt/list',
        url = '//' + prefix + opt.host + baseurl;

    /**
     * GET请求(一次), 不触发onmessage事件
     * @param {TSQListRequest} request 请求参数
     * @param {Function} callback 回调
     */
    this.get = function (request, callback) {
        if (!(request instanceof TSQListRequest)) {
            request = new TSQListRequest(request);
        }
        var client = new tsqclient({
            baseurl: url,
            data: request.toParam(),
            method: tsqclient.method.GET,
            delay: opt.delay,
            errorRetry: opt.errorRetry,
            onmessage: callback,
            onerror: opt.onerror
        });
        client.subscribe();
    }

    /**
     * 开始订阅列表行情
     * @param {TSQListRequest} request 请求参数
     * @param {Function} firstreceive 建立连接后收到的第一条消息(全量)
     */
    this.open = function (request, firstreceive) {
        this.close();
        if (!(request instanceof TSQListRequest)) {
            request = new TSQListRequest(request);
        }
        var inited = false;
        var data = request.toParam();
        /** @type {{item: TSQListResponse}} */
        var cached = {};
        client = new tsqclient({
            baseurl: url,
            data: data,
            delay: opt.delay,
            errorRetry: opt.errorRetry,
            onmessage: function (msg) {
                var data = new TSQListResponse(msg);
                setcache(data);
                if (!inited) {
                    if (typeof firstreceive === 'function') {
                        firstreceive.call(self, data);
                    }
                    inited = true;
                } else {
                    if (!cached.item) cached.item = {};
                    cached.item = extend(cached.item, msg, true);
                    if (typeof opt.onmessage === 'function') {
                        if (args.throttle > 0 && !throttled) {
                            throttled = throttle(function (entry) {
                                opt.onmessage.call(self, entry.item);
                                entry.item = null;
                            }, args.throttle);
                            throttled(cached);
                        } else if (args.throttle > 0) {
                            throttled(cached);
                        } else {
                            opt.onmessage.call(self, data);
                        }
                    }
                }
                data = null;
            },
            onerror: function () {
                inited = false;
                if (typeof opt.onerror === 'function') {
                    opt.onerror.apply(self, arguments);
                }
            }
        }, true);
        clients.set(client.clientId, client);
        return client.clientId;
    }

    /**
     * 关闭客户端
     */
    this.close = function () {
        cache.clear();
        if (client instanceof tsqclient) {
            client.cancel();
            clients.remove(client.clientId);
        }
    }

    /**
     * 设置缓存
     * @param {TSQListResponse} data 数据
     */
    function setcache(data) {
        if (!data || data.total <= 0) return;
        /** @type {Array.<{{string, string|number}}>} */
        var rows = cache.getOrAdd('diff', []);
        var copy = extend([], rows, true);
        for (var num in data.mv) {
            var from = parseInt(num),
                to = parseInt(data.mv[num]);
            if (isNaN(from) || isNaN(to)) continue;
            rows[to] = copy[from];
        }
        copy = null;
        for (var rownum in data.diff) {
            var i = parseInt(rownum);
            if (i >= 0) {
                var row = data.diff[rownum];
                if (!rows[i]) rows[i] = row;
                else {
                    extend(rows[i], row);
                }
            }
        }
        cache.total = data.total;
        rows = null;
    }
}

/**
 * 关闭客户端，并移除缓存
 * @param {number|TSQListClient} id 客户端ID
 */
TSQListClient.close = function (id) {
    if (id instanceof TSQListClient) {
        id.close();
    } else {
        /** @type {tsqclient} */
        var client = clients.remove(id);
        if (client instanceof tsqclient)
            client.cancel();
    }
}

/**
 * 客户端缓存
 * @type {Object.<number, TSQListClient>}
 */
TSQListClient.cache = clients;
/**
 * 极速行情列表推送请求参数
 */
TSQListClient.request = TSQListRequest;
/**
 * 极速行情列表推送响应
 */
TSQListClient.response = TSQListResponse;

/**
 * 极速行情列表推送请求参数
 * @param {{id:string, pageIndex: number, pageSize: number, orderType: number, orderField: string, fields: string[]}} args 参数
 */
function TSQListRequest(args) {

    /** 
     * 列表ID 
     */
    this.id = 1;
    /**
     * 页索引
     */
    this.pageIndex = 0;
    /**
     * 页大小
     */
    this.pageSize = 20;
    /**
     * 排序方式(0正序,1倒序)
     */
    this.orderType = 1;
    /**
     * 排序字段索引
     */
    this.orderField = 'f3';
    /**
     * 显示字段ID列表
     * @type {Array.<string>}
     */
    this.fields = [];
    this.toParam = function () {
        var param = {
            lid: this.id,
            pi: this.pageIndex,
            pz: this.pageSize,
            po: this.orderType,
            fid: this.orderField
        };
        if (this.fields.length > 0) param.fields = this.fields.join(',');
        return param;
    }
    this.toString = function () {
        var fids = this.fields.length > 0 ? this.fields.join(',') : '';
        return 'lid=' + encodeURIComponent(this.id) +
            '&pi=' + encodeURIComponent(this.pageIndex) +
            '&pz=' + encodeURIComponent(this.pageSize) +
            '&po=' + encodeURIComponent(this.orderType) +
            '&fid=' + encodeURIComponent(this.orderField) +
            (fids ? '&fields=' + encodeURIComponent(fids) : '');
    }

    if (typeof args === 'object') {
        extend(this, args, true);
    }
}

/**
 * 极速行情列表推送响应
 * @param {Object} args 参数
 * @param {Object<string, Object<string, string|number>>} args.diff 变化量
 * @param {Object<string, string} args.mv 行移动索引
 * @param {number} args.total 总记录数
 */
function TSQListResponse(args) {
    /** 
     * 变化数据
     * @type {Object.<string, Object<string, string|number>>}
     */
    this.diff = {};
    /** 
     * 行移动索引
     * @type {Object.<string, string>}
     */
    this.mv = {};
    /**
     * 总记录数
     */
    this.total = 0;
    if (typeof args === 'object') {
        extend(this, args, true);
    }
    /**
     * 移动的行号
     * @returns {Array.<{{string, string}}>}
     */
    this.getMovedKeys = function () {
        var array = [];
        for (var key in this.mv) {
            if (this.mv.hasOwnProperty(key))
                array.push(this.mv[key]);
        }
        return array;
    }
}
TSQListClient.version = '1.0.1';
module.exports = TSQListClient;

/***/ }),

/***/ "./ClientApp/modules/uri/main.js":
/*!***************************************!*\
  !*** ./ClientApp/modules/uri/main.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var SLD = __webpack_require__(/*! ./src/SecondLevelDomains */ "./ClientApp/modules/uri/src/SecondLevelDomains.js");
var URI = __webpack_require__(/*! ./src/URI */ "./ClientApp/modules/uri/src/URI.js")(window, null, null, SLD);
var URITemplate = __webpack_require__(/*! ./src/URITemplate */ "./ClientApp/modules/uri/src/URITemplate.js")(window, URI);
var fragmentQuery = __webpack_require__(/*! ./src/URI.fragmentQuery */ "./ClientApp/modules/uri/src/URI.fragmentQuery.js")(URI);

module.exports = URI;

/***/ }),

/***/ "./ClientApp/modules/uri/src/SecondLevelDomains.js":
/*!*********************************************************!*\
  !*** ./ClientApp/modules/uri/src/SecondLevelDomains.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * URI.js - Mutating URLs
 * Second Level Domain (SLD) Support
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */

(function (root, factory) {
  'use strict';
  // https://github.com/umdjs/umd/blob/master/returnExports.js
  if ( true && module.exports) {
    // Node
    module.exports = factory();
  } else if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, function (root) {
  'use strict';

  // save current SecondLevelDomains variable, if any
  var _SecondLevelDomains = root && root.SecondLevelDomains;

  var SLD = {
    // list of known Second Level Domains
    // converted list of SLDs from https://github.com/gavingmiller/second-level-domains
    // ----
    // publicsuffix.org is more current and actually used by a couple of browsers internally.
    // downside is it also contains domains like "dyndns.org" - which is fine for the security
    // issues browser have to deal with (SOP for cookies, etc) - but is way overboard for URI.js
    // ----
    list: {
      'ac': ' com gov mil net org ',
      'ae': ' ac co gov mil name net org pro sch ',
      'af': ' com edu gov net org ',
      'al': ' com edu gov mil net org ',
      'ao': ' co ed gv it og pb ',
      'ar': ' com edu gob gov int mil net org tur ',
      'at': ' ac co gv or ',
      'au': ' asn com csiro edu gov id net org ',
      'ba': ' co com edu gov mil net org rs unbi unmo unsa untz unze ',
      'bb': ' biz co com edu gov info net org store tv ',
      'bh': ' biz cc com edu gov info net org ',
      'bn': ' com edu gov net org ',
      'bo': ' com edu gob gov int mil net org tv ',
      'br': ' adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ',
      'bs': ' com edu gov net org ',
      'bz': ' du et om ov rg ',
      'ca': ' ab bc mb nb nf nl ns nt nu on pe qc sk yk ',
      'ck': ' biz co edu gen gov info net org ',
      'cn': ' ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ',
      'co': ' com edu gov mil net nom org ',
      'cr': ' ac c co ed fi go or sa ',
      'cy': ' ac biz com ekloges gov ltd name net org parliament press pro tm ',
      'do': ' art com edu gob gov mil net org sld web ',
      'dz': ' art asso com edu gov net org pol ',
      'ec': ' com edu fin gov info med mil net org pro ',
      'eg': ' com edu eun gov mil name net org sci ',
      'er': ' com edu gov ind mil net org rochest w ',
      'es': ' com edu gob nom org ',
      'et': ' biz com edu gov info name net org ',
      'fj': ' ac biz com info mil name net org pro ',
      'fk': ' ac co gov net nom org ',
      'fr': ' asso com f gouv nom prd presse tm ',
      'gg': ' co net org ',
      'gh': ' com edu gov mil org ',
      'gn': ' ac com gov net org ',
      'gr': ' com edu gov mil net org ',
      'gt': ' com edu gob ind mil net org ',
      'gu': ' com edu gov net org ',
      'hk': ' com edu gov idv net org ',
      'hu': ' 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ',
      'id': ' ac co go mil net or sch web ',
      'il': ' ac co gov idf k12 muni net org ',
      'in': ' ac co edu ernet firm gen gov i ind mil net nic org res ',
      'iq': ' com edu gov i mil net org ',
      'ir': ' ac co dnssec gov i id net org sch ',
      'it': ' edu gov ',
      'je': ' co net org ',
      'jo': ' com edu gov mil name net org sch ',
      'jp': ' ac ad co ed go gr lg ne or ',
      'ke': ' ac co go info me mobi ne or sc ',
      'kh': ' com edu gov mil net org per ',
      'ki': ' biz com de edu gov info mob net org tel ',
      'km': ' asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ',
      'kn': ' edu gov net org ',
      'kr': ' ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ',
      'kw': ' com edu gov net org ',
      'ky': ' com edu gov net org ',
      'kz': ' com edu gov mil net org ',
      'lb': ' com edu gov net org ',
      'lk': ' assn com edu gov grp hotel int ltd net ngo org sch soc web ',
      'lr': ' com edu gov net org ',
      'lv': ' asn com conf edu gov id mil net org ',
      'ly': ' com edu gov id med net org plc sch ',
      'ma': ' ac co gov m net org press ',
      'mc': ' asso tm ',
      'me': ' ac co edu gov its net org priv ',
      'mg': ' com edu gov mil nom org prd tm ',
      'mk': ' com edu gov inf name net org pro ',
      'ml': ' com edu gov net org presse ',
      'mn': ' edu gov org ',
      'mo': ' com edu gov net org ',
      'mt': ' com edu gov net org ',
      'mv': ' aero biz com coop edu gov info int mil museum name net org pro ',
      'mw': ' ac co com coop edu gov int museum net org ',
      'mx': ' com edu gob net org ',
      'my': ' com edu gov mil name net org sch ',
      'nf': ' arts com firm info net other per rec store web ',
      'ng': ' biz com edu gov mil mobi name net org sch ',
      'ni': ' ac co com edu gob mil net nom org ',
      'np': ' com edu gov mil net org ',
      'nr': ' biz com edu gov info net org ',
      'om': ' ac biz co com edu gov med mil museum net org pro sch ',
      'pe': ' com edu gob mil net nom org sld ',
      'ph': ' com edu gov i mil net ngo org ',
      'pk': ' biz com edu fam gob gok gon gop gos gov net org web ',
      'pl': ' art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ',
      'pr': ' ac biz com edu est gov info isla name net org pro prof ',
      'ps': ' com edu gov net org plo sec ',
      'pw': ' belau co ed go ne or ',
      'ro': ' arts com firm info nom nt org rec store tm www ',
      'rs': ' ac co edu gov in org ',
      'sb': ' com edu gov net org ',
      'sc': ' com edu gov net org ',
      'sh': ' co com edu gov net nom org ',
      'sl': ' com edu gov net org ',
      'st': ' co com consulado edu embaixada gov mil net org principe saotome store ',
      'sv': ' com edu gob org red ',
      'sz': ' ac co org ',
      'tr': ' av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ',
      'tt': ' aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ',
      'tw': ' club com ebiz edu game gov idv mil net org ',
      'mu': ' ac co com gov net or org ',
      'mz': ' ac co edu gov org ',
      'na': ' co com ',
      'nz': ' ac co cri geek gen govt health iwi maori mil net org parliament school ',
      'pa': ' abo ac com edu gob ing med net nom org sld ',
      'pt': ' com edu gov int net nome org publ ',
      'py': ' com edu gov mil net org ',
      'qa': ' com edu gov mil net org ',
      're': ' asso com nom ',
      'ru': ' ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ',
      'rw': ' ac co com edu gouv gov int mil net ',
      'sa': ' com edu gov med net org pub sch ',
      'sd': ' com edu gov info med net org tv ',
      'se': ' a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ',
      'sg': ' com edu gov idn net org per ',
      'sn': ' art com edu gouv org perso univ ',
      'sy': ' com edu gov mil net news org ',
      'th': ' ac co go in mi net or ',
      'tj': ' ac biz co com edu go gov info int mil name net nic org test web ',
      'tn': ' agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ',
      'tz': ' ac co go ne or ',
      'ua': ' biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ',
      'ug': ' ac co go ne or org sc ',
      'uk': ' ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ',
      'us': ' dni fed isa kids nsn ',
      'uy': ' com edu gub mil net org ',
      've': ' co com edu gob info mil net org web ',
      'vi': ' co com k12 net org ',
      'vn': ' ac biz com edu gov health info int name net org pro ',
      'ye': ' co com gov ltd me net org plc ',
      'yu': ' ac co edu gov org ',
      'za': ' ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ',
      'zm': ' ac co com edu gov net org sch ',
      // https://en.wikipedia.org/wiki/CentralNic#Second-level_domains
      'com': 'ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ',
      'net': 'gb jp se uk ',
      'org': 'ae',
      'de': 'com '
    },
    // gorhill 2013-10-25: Using indexOf() instead Regexp(). Significant boost
    // in both performance and memory footprint. No initialization required.
    // http://jsperf.com/uri-js-sld-regex-vs-binary-search/4
    // Following methods use lastIndexOf() rather than array.split() in order
    // to avoid any memory allocations.
    has: function (domain) {
      var tldOffset = domain.lastIndexOf('.');
      if (tldOffset <= 0 || tldOffset >= (domain.length - 1)) {
        return false;
      }
      var sldOffset = domain.lastIndexOf('.', tldOffset - 1);
      if (sldOffset <= 0 || sldOffset >= (tldOffset - 1)) {
        return false;
      }
      var sldList = SLD.list[domain.slice(tldOffset + 1)];
      if (!sldList) {
        return false;
      }
      return sldList.indexOf(' ' + domain.slice(sldOffset + 1, tldOffset) + ' ') >= 0;
    },
    is: function (domain) {
      var tldOffset = domain.lastIndexOf('.');
      if (tldOffset <= 0 || tldOffset >= (domain.length - 1)) {
        return false;
      }
      var sldOffset = domain.lastIndexOf('.', tldOffset - 1);
      if (sldOffset >= 0) {
        return false;
      }
      var sldList = SLD.list[domain.slice(tldOffset + 1)];
      if (!sldList) {
        return false;
      }
      return sldList.indexOf(' ' + domain.slice(0, tldOffset) + ' ') >= 0;
    },
    get: function (domain) {
      var tldOffset = domain.lastIndexOf('.');
      if (tldOffset <= 0 || tldOffset >= (domain.length - 1)) {
        return null;
      }
      var sldOffset = domain.lastIndexOf('.', tldOffset - 1);
      if (sldOffset <= 0 || sldOffset >= (tldOffset - 1)) {
        return null;
      }
      var sldList = SLD.list[domain.slice(tldOffset + 1)];
      if (!sldList) {
        return null;
      }
      if (sldList.indexOf(' ' + domain.slice(sldOffset + 1, tldOffset) + ' ') < 0) {
        return null;
      }
      return domain.slice(sldOffset + 1);
    },
    noConflict: function () {
      if (root.SecondLevelDomains === this) {
        root.SecondLevelDomains = _SecondLevelDomains;
      }
      return this;
    }
  };

  return SLD;
}));

/***/ }),

/***/ "./ClientApp/modules/uri/src/URI.fragmentQuery.js":
/*!********************************************************!*\
  !*** ./ClientApp/modules/uri/src/URI.fragmentQuery.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (URI) {
    'use strict';
  
    var p = URI.prototype;
    // old fragment handler we need to wrap
    var f = p.fragment;
  
    // make fragmentPrefix configurable
    URI.fragmentPrefix = '?';
    var _parts = URI._parts;
    URI._parts = function() {
      var parts = _parts();
      parts.fragmentPrefix = URI.fragmentPrefix;
      return parts;
    };
    p.fragmentPrefix = function(v) {
      this._parts.fragmentPrefix = v;
      return this;
    };
  
    // add fragment(true) and fragment({key: value}) signatures
    p.fragment = function(v, build) {
      var prefix = this._parts.fragmentPrefix;
      var fragment = this._parts.fragment || '';
  
      if (v === true) {
        if (fragment.substring(0, prefix.length) !== prefix) {
          return {};
        }
  
        return URI.parseQuery(fragment.substring(prefix.length));
      } else if (v !== undefined && typeof v !== 'string') {
        this._parts.fragment = prefix + URI.buildQuery(v);
        this.build(!build);
        return this;
      } else {
        return f.call(this, v, build);
      }
    };
    p.addFragment = function(name, value, build) {
      var prefix = this._parts.fragmentPrefix;
      var data = URI.parseQuery((this._parts.fragment || '').substring(prefix.length));
      URI.addQuery(data, name, value);
      this._parts.fragment = prefix + URI.buildQuery(data);
      if (typeof name !== 'string') {
        build = value;
      }
  
      this.build(!build);
      return this;
    };
    p.removeFragment = function(name, value, build) {
      var prefix = this._parts.fragmentPrefix;
      var data = URI.parseQuery((this._parts.fragment || '').substring(prefix.length));
      URI.removeQuery(data, name, value);
      this._parts.fragment = prefix + URI.buildQuery(data);
      if (typeof name !== 'string') {
        build = value;
      }
  
      this.build(!build);
      return this;
    };
    p.setFragment = function(name, value, build) {
      var prefix = this._parts.fragmentPrefix;
      var data = URI.parseQuery((this._parts.fragment || '').substring(prefix.length));
      URI.setQuery(data, name, value);
      this._parts.fragment = prefix + URI.buildQuery(data);
      if (typeof name !== 'string') {
        build = value;
      }
  
      this.build(!build);
      return this;
    };
    p.addHash = p.addFragment;
    p.removeHash = p.removeFragment;
    p.setHash = p.setFragment;
  
    // extending existing object rather than defining something new
    return URI;
  };

/***/ }),

/***/ "./ClientApp/modules/uri/src/URI.js":
/*!******************************************!*\
  !*** ./ClientApp/modules/uri/src/URI.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */

module.exports = function (root,punycode, IPv6, SLD) {
    'use strict';
    /*global location, escape, unescape */
    // FIXME: v2.0.0 renamce non-camelCase properties to uppercase
    /*jshint camelcase: false */

    // save current URI variable, if any
    var _URI = root && root.URI;

    function URI(url, base) {
        var _urlSupplied = arguments.length >= 1;
        var _baseSupplied = arguments.length >= 2;

        // Allow instantiation without the 'new' keyword
        if (!(this instanceof URI)) {
            if (_urlSupplied) {
                if (_baseSupplied) {
                    return new URI(url, base);
                }

                return new URI(url);
            }

            return new URI();
        }

        if (url === undefined) {
            if (_urlSupplied) {
                throw new TypeError('undefined is not a valid argument for URI');
            }

            if (typeof location !== 'undefined') {
                url = location.href + '';
            } else {
                url = '';
            }
        }

        if (url === null) {
            if (_urlSupplied) {
                throw new TypeError('null is not a valid argument for URI');
            }
        }

        this.href(url);

        // resolve to base according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor
        if (base !== undefined) {
            return this.absoluteTo(base);
        }

        return this;
    }

    function isInteger(value) {
        return /^[0-9]+$/.test(value);
    }

    URI.version = '1.19.1';

    var p = URI.prototype;
    var hasOwn = Object.prototype.hasOwnProperty;

    function escapeRegEx(string) {
        // https://github.com/medialize/URI.js/commit/85ac21783c11f8ccab06106dba9735a31a86924d#commitcomment-821963
        return string.replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
    }

    function getType(value) {
        // IE8 doesn't return [Object Undefined] but [Object Object] for undefined value
        if (value === undefined) {
            return 'Undefined';
        }

        return String(Object.prototype.toString.call(value)).slice(8, -1);
    }

    function isArray(obj) {
        return getType(obj) === 'Array';
    }

    function filterArrayValues(data, value) {
        var lookup = {};
        var i, length;

        if (getType(value) === 'RegExp') {
            lookup = null;
        } else if (isArray(value)) {
            for (i = 0, length = value.length; i < length; i++) {
                lookup[value[i]] = true;
            }
        } else {
            lookup[value] = true;
        }

        for (i = 0, length = data.length; i < length; i++) {
            /*jshint laxbreak: true */
            var _match = lookup && lookup[data[i]] !== undefined ||
                !lookup && value.test(data[i]);
            /*jshint laxbreak: false */
            if (_match) {
                data.splice(i, 1);
                length--;
                i--;
            }
        }

        return data;
    }

    function arrayContains(list, value) {
        var i, length;

        // value may be string, number, array, regexp
        if (isArray(value)) {
            // Note: this can be optimized to O(n) (instead of current O(m * n))
            for (i = 0, length = value.length; i < length; i++) {
                if (!arrayContains(list, value[i])) {
                    return false;
                }
            }

            return true;
        }

        var _type = getType(value);
        for (i = 0, length = list.length; i < length; i++) {
            if (_type === 'RegExp') {
                if (typeof list[i] === 'string' && list[i].match(value)) {
                    return true;
                }
            } else if (list[i] === value) {
                return true;
            }
        }

        return false;
    }

    function arraysEqual(one, two) {
        if (!isArray(one) || !isArray(two)) {
            return false;
        }

        // arrays can't be equal if they have different amount of content
        if (one.length !== two.length) {
            return false;
        }

        one.sort();
        two.sort();

        for (var i = 0, l = one.length; i < l; i++) {
            if (one[i] !== two[i]) {
                return false;
            }
        }

        return true;
    }

    function trimSlashes(text) {
        var trim_expression = /^\/+|\/+$/g;
        return text.replace(trim_expression, '');
    }

    URI._parts = function () {
        return {
            protocol: null,
            username: null,
            password: null,
            hostname: null,
            urn: null,
            port: null,
            path: null,
            query: null,
            fragment: null,
            // state
            preventInvalidHostname: URI.preventInvalidHostname,
            duplicateQueryParameters: URI.duplicateQueryParameters,
            escapeQuerySpace: URI.escapeQuerySpace
        };
    };
    // state: throw on invalid hostname
    // see https://github.com/medialize/URI.js/pull/345
    // and https://github.com/medialize/URI.js/issues/354
    URI.preventInvalidHostname = false;
    // state: allow duplicate query parameters (a=1&a=1)
    URI.duplicateQueryParameters = false;
    // state: replaces + with %20 (space in query strings)
    URI.escapeQuerySpace = true;
    // static properties
    URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;
    URI.idn_expression = /[^a-z0-9\._-]/i;
    URI.punycode_expression = /(xn--)/i;
    // well, 333.444.555.666 matches, but it sure ain't no IPv4 - do we care?
    URI.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
    // credits to Rich Brown
    // source: http://forums.intermapper.com/viewtopic.php?p=1096#1096
    // specification: http://www.ietf.org/rfc/rfc4291.txt
    URI.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
    // expression used is "gruber revised" (@gruber v2) determined to be the
    // best solution in a regex-golf we did a couple of ages ago at
    // * http://mathiasbynens.be/demo/url-regex
    // * http://rodneyrehm.de/t/url-regex.html
    URI.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig;
    URI.findUri = {
        // valid "scheme://" or "www."
        start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,
        // everything up to the next whitespace
        end: /[\s\r\n]|$/,
        // trim trailing punctuation captured by end RegExp
        trim: /[`!()\[\]{};:'".,<>?«»“”„‘’]+$/,
        // balanced parens inclusion (), [], {}, <>
        parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g
    };
    // http://www.iana.org/assignments/uri-schemes.html
    // http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Well-known_ports
    URI.defaultPorts = {
        http: '80',
        https: '443',
        ftp: '21',
        gopher: '70',
        ws: '80',
        wss: '443'
    };
    // list of protocols which always require a hostname
    URI.hostProtocols = [
        'http',
        'https'
    ];

    // allowed hostname characters according to RFC 3986
    // ALPHA DIGIT "-" "." "_" "~" "!" "$" "&" "'" "(" ")" "*" "+" "," ";" "=" %encoded
    // I've never seen a (non-IDN) hostname other than: ALPHA DIGIT . - _
    URI.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/;
    // map DOM Elements to their URI attribute
    URI.domAttributes = {
        'a': 'href',
        'blockquote': 'cite',
        'link': 'href',
        'base': 'href',
        'script': 'src',
        'form': 'action',
        'img': 'src',
        'area': 'href',
        'iframe': 'src',
        'embed': 'src',
        'source': 'src',
        'track': 'src',
        'input': 'src', // but only if type="image"
        'audio': 'src',
        'video': 'src'
    };
    URI.getDomAttribute = function (node) {
        if (!node || !node.nodeName) {
            return undefined;
        }

        var nodeName = node.nodeName.toLowerCase();
        // <input> should only expose src for type="image"
        if (nodeName === 'input' && node.type !== 'image') {
            return undefined;
        }

        return URI.domAttributes[nodeName];
    };

    function escapeForDumbFirefox36(value) {
        // https://github.com/medialize/URI.js/issues/91
        return escape(value);
    }

    // encoding / decoding according to RFC3986
    function strictEncodeURIComponent(string) {
        // see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent
        return encodeURIComponent(string)
            .replace(/[!'()*]/g, escapeForDumbFirefox36)
            .replace(/\*/g, '%2A');
    }
    URI.encode = strictEncodeURIComponent;
    URI.decode = decodeURIComponent;
    URI.iso8859 = function () {
        URI.encode = escape;
        URI.decode = unescape;
    };
    URI.unicode = function () {
        URI.encode = strictEncodeURIComponent;
        URI.decode = decodeURIComponent;
    };
    URI.characters = {
        pathname: {
            encode: {
                // RFC3986 2.1: For consistency, URI producers and normalizers should
                // use uppercase hexadecimal digits for all percent-encodings.
                expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,
                map: {
                    // -._~!'()*
                    '%24': '$',
                    '%26': '&',
                    '%2B': '+',
                    '%2C': ',',
                    '%3B': ';',
                    '%3D': '=',
                    '%3A': ':',
                    '%40': '@'
                }
            },
            decode: {
                expression: /[\/\?#]/g,
                map: {
                    '/': '%2F',
                    '?': '%3F',
                    '#': '%23'
                }
            }
        },
        reserved: {
            encode: {
                // RFC3986 2.1: For consistency, URI producers and normalizers should
                // use uppercase hexadecimal digits for all percent-encodings.
                expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,
                map: {
                    // gen-delims
                    '%3A': ':',
                    '%2F': '/',
                    '%3F': '?',
                    '%23': '#',
                    '%5B': '[',
                    '%5D': ']',
                    '%40': '@',
                    // sub-delims
                    '%21': '!',
                    '%24': '$',
                    '%26': '&',
                    '%27': '\'',
                    '%28': '(',
                    '%29': ')',
                    '%2A': '*',
                    '%2B': '+',
                    '%2C': ',',
                    '%3B': ';',
                    '%3D': '='
                }
            }
        },
        urnpath: {
            // The characters under `encode` are the characters called out by RFC 2141 as being acceptable
            // for usage in a URN. RFC2141 also calls out "-", ".", and "_" as acceptable characters, but
            // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also
            // note that the colon character is not featured in the encoding map; this is because URI.js
            // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it
            // should not appear unencoded in a segment itself.
            // See also the note above about RFC3986 and capitalalized hex digits.
            encode: {
                expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,
                map: {
                    '%21': '!',
                    '%24': '$',
                    '%27': '\'',
                    '%28': '(',
                    '%29': ')',
                    '%2A': '*',
                    '%2B': '+',
                    '%2C': ',',
                    '%3B': ';',
                    '%3D': '=',
                    '%40': '@'
                }
            },
            // These characters are the characters called out by RFC2141 as "reserved" characters that
            // should never appear in a URN, plus the colon character (see note above).
            decode: {
                expression: /[\/\?#:]/g,
                map: {
                    '/': '%2F',
                    '?': '%3F',
                    '#': '%23',
                    ':': '%3A'
                }
            }
        }
    };
    URI.encodeQuery = function (string, escapeQuerySpace) {
        var escaped = URI.encode(string + '');
        if (escapeQuerySpace === undefined) {
            escapeQuerySpace = URI.escapeQuerySpace;
        }

        return escapeQuerySpace ? escaped.replace(/%20/g, '+') : escaped;
    };
    URI.decodeQuery = function (string, escapeQuerySpace) {
        string += '';
        if (escapeQuerySpace === undefined) {
            escapeQuerySpace = URI.escapeQuerySpace;
        }

        try {
            return URI.decode(escapeQuerySpace ? string.replace(/\+/g, '%20') : string);
        } catch (e) {
            // we're not going to mess with weird encodings,
            // give up and return the undecoded original string
            // see https://github.com/medialize/URI.js/issues/87
            // see https://github.com/medialize/URI.js/issues/92
            return string;
        }
    };
    // generate encode/decode path functions
    var _parts = {
        'encode': 'encode',
        'decode': 'decode'
    };
    var _part;
    var generateAccessor = function (_group, _part) {
        return function (string) {
            try {
                return URI[_part](string + '').replace(URI.characters[_group][_part].expression, function (c) {
                    return URI.characters[_group][_part].map[c];
                });
            } catch (e) {
                // we're not going to mess with weird encodings,
                // give up and return the undecoded original string
                // see https://github.com/medialize/URI.js/issues/87
                // see https://github.com/medialize/URI.js/issues/92
                return string;
            }
        };
    };

    for (_part in _parts) {
        URI[_part + 'PathSegment'] = generateAccessor('pathname', _parts[_part]);
        URI[_part + 'UrnPathSegment'] = generateAccessor('urnpath', _parts[_part]);
    }

    var generateSegmentedPathFunction = function (_sep, _codingFuncName, _innerCodingFuncName) {
        return function (string) {
            // Why pass in names of functions, rather than the function objects themselves? The
            // definitions of some functions (but in particular, URI.decode) will occasionally change due
            // to URI.js having ISO8859 and Unicode modes. Passing in the name and getting it will ensure
            // that the functions we use here are "fresh".
            var actualCodingFunc;
            if (!_innerCodingFuncName) {
                actualCodingFunc = URI[_codingFuncName];
            } else {
                actualCodingFunc = function (string) {
                    return URI[_codingFuncName](URI[_innerCodingFuncName](string));
                };
            }

            var segments = (string + '').split(_sep);

            for (var i = 0, length = segments.length; i < length; i++) {
                segments[i] = actualCodingFunc(segments[i]);
            }

            return segments.join(_sep);
        };
    };

    // This takes place outside the above loop because we don't want, e.g., encodeUrnPath functions.
    URI.decodePath = generateSegmentedPathFunction('/', 'decodePathSegment');
    URI.decodeUrnPath = generateSegmentedPathFunction(':', 'decodeUrnPathSegment');
    URI.recodePath = generateSegmentedPathFunction('/', 'encodePathSegment', 'decode');
    URI.recodeUrnPath = generateSegmentedPathFunction(':', 'encodeUrnPathSegment', 'decode');

    URI.encodeReserved = generateAccessor('reserved', 'encode');

    URI.parse = function (string, parts) {
        var pos;
        if (!parts) {
            parts = {
                preventInvalidHostname: URI.preventInvalidHostname
            };
        }
        // [protocol"://"[username[":"password]"@"]hostname[":"port]"/"?][path]["?"querystring]["#"fragment]

        // extract fragment
        pos = string.indexOf('#');
        if (pos > -1) {
            // escaping?
            parts.fragment = string.substring(pos + 1) || null;
            string = string.substring(0, pos);
        }

        // extract query
        pos = string.indexOf('?');
        if (pos > -1) {
            // escaping?
            parts.query = string.substring(pos + 1) || null;
            string = string.substring(0, pos);
        }

        // extract protocol
        if (string.substring(0, 2) === '//') {
            // relative-scheme
            parts.protocol = null;
            string = string.substring(2);
            // extract "user:pass@host:port"
            string = URI.parseAuthority(string, parts);
        } else {
            pos = string.indexOf(':');
            if (pos > -1) {
                parts.protocol = string.substring(0, pos) || null;
                if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {
                    // : may be within the path
                    parts.protocol = undefined;
                } else if (string.substring(pos + 1, pos + 3) === '//') {
                    string = string.substring(pos + 3);

                    // extract "user:pass@host:port"
                    string = URI.parseAuthority(string, parts);
                } else {
                    string = string.substring(pos + 1);
                    parts.urn = true;
                }
            }
        }

        // what's left must be the path
        parts.path = string;

        // and we're done
        return parts;
    };
    URI.parseHost = function (string, parts) {
        if (!string) {
            string = '';
        }

        // Copy chrome, IE, opera backslash-handling behavior.
        // Back slashes before the query string get converted to forward slashes
        // See: https://github.com/joyent/node/blob/386fd24f49b0e9d1a8a076592a404168faeecc34/lib/url.js#L115-L124
        // See: https://code.google.com/p/chromium/issues/detail?id=25916
        // https://github.com/medialize/URI.js/pull/233
        string = string.replace(/\\/g, '/');

        // extract host:port
        var pos = string.indexOf('/');
        var bracketPos;
        var t;

        if (pos === -1) {
            pos = string.length;
        }

        if (string.charAt(0) === '[') {
            // IPv6 host - http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04#section-6
            // I claim most client software breaks on IPv6 anyways. To simplify things, URI only accepts
            // IPv6+port in the format [2001:db8::1]:80 (for the time being)
            bracketPos = string.indexOf(']');
            parts.hostname = string.substring(1, bracketPos) || null;
            parts.port = string.substring(bracketPos + 2, pos) || null;
            if (parts.port === '/') {
                parts.port = null;
            }
        } else {
            var firstColon = string.indexOf(':');
            var firstSlash = string.indexOf('/');
            var nextColon = string.indexOf(':', firstColon + 1);
            if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {
                // IPv6 host contains multiple colons - but no port
                // this notation is actually not allowed by RFC 3986, but we're a liberal parser
                parts.hostname = string.substring(0, pos) || null;
                parts.port = null;
            } else {
                t = string.substring(0, pos).split(':');
                parts.hostname = t[0] || null;
                parts.port = t[1] || null;
            }
        }

        if (parts.hostname && string.substring(pos).charAt(0) !== '/') {
            pos++;
            string = '/' + string;
        }

        if (parts.preventInvalidHostname) {
            URI.ensureValidHostname(parts.hostname, parts.protocol);
        }

        if (parts.port) {
            URI.ensureValidPort(parts.port);
        }

        return string.substring(pos) || '/';
    };
    URI.parseAuthority = function (string, parts) {
        string = URI.parseUserinfo(string, parts);
        return URI.parseHost(string, parts);
    };
    URI.parseUserinfo = function (string, parts) {
        // extract username:password
        var firstSlash = string.indexOf('/');
        var pos = string.lastIndexOf('@', firstSlash > -1 ? firstSlash : string.length - 1);
        var t;

        // authority@ must come before /path
        if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {
            t = string.substring(0, pos).split(':');
            parts.username = t[0] ? URI.decode(t[0]) : null;
            t.shift();
            parts.password = t[0] ? URI.decode(t.join(':')) : null;
            string = string.substring(pos + 1);
        } else {
            parts.username = null;
            parts.password = null;
        }

        return string;
    };
    URI.parseQuery = function (string, escapeQuerySpace) {
        if (!string) {
            return {};
        }

        // throw out the funky business - "?"[name"="value"&"]+
        string = string.replace(/&+/g, '&').replace(/^\?*&*|&+$/g, '');

        if (!string) {
            return {};
        }

        var items = {};
        var splits = string.split('&');
        var length = splits.length;
        var v, name, value;

        for (var i = 0; i < length; i++) {
            v = splits[i].split('=');
            name = URI.decodeQuery(v.shift(), escapeQuerySpace);
            // no "=" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters
            value = v.length ? URI.decodeQuery(v.join('='), escapeQuerySpace) : null;

            if (hasOwn.call(items, name)) {
                if (typeof items[name] === 'string' || items[name] === null) {
                    items[name] = [items[name]];
                }

                items[name].push(value);
            } else {
                items[name] = value;
            }
        }

        return items;
    };

    URI.build = function (parts) {
        var t = '';

        if (parts.protocol) {
            t += parts.protocol + ':';
        }

        if (!parts.urn && (t || parts.hostname)) {
            t += '//';
        }

        t += (URI.buildAuthority(parts) || '');

        if (typeof parts.path === 'string') {
            if (parts.path.charAt(0) !== '/' && typeof parts.hostname === 'string') {
                t += '/';
            }

            t += parts.path;
        }

        if (typeof parts.query === 'string' && parts.query) {
            t += '?' + parts.query;
        }

        if (typeof parts.fragment === 'string' && parts.fragment) {
            t += '#' + parts.fragment;
        }
        return t;
    };
    URI.buildHost = function (parts) {
        var t = '';

        if (!parts.hostname) {
            return '';
        } else if (URI.ip6_expression.test(parts.hostname)) {
            t += '[' + parts.hostname + ']';
        } else {
            t += parts.hostname;
        }

        if (parts.port) {
            t += ':' + parts.port;
        }

        return t;
    };
    URI.buildAuthority = function (parts) {
        return URI.buildUserinfo(parts) + URI.buildHost(parts);
    };
    URI.buildUserinfo = function (parts) {
        var t = '';

        if (parts.username) {
            t += URI.encode(parts.username);
        }

        if (parts.password) {
            t += ':' + URI.encode(parts.password);
        }

        if (t) {
            t += '@';
        }

        return t;
    };
    URI.buildQuery = function (data, duplicateQueryParameters, escapeQuerySpace) {
        // according to http://tools.ietf.org/html/rfc3986 or http://labs.apache.org/webarch/uri/rfc/rfc3986.html
        // being »-._~!$&'()*+,;=:@/?« %HEX and alnum are allowed
        // the RFC explicitly states ?/foo being a valid use case, no mention of parameter syntax!
        // URI.js treats the query string as being application/x-www-form-urlencoded
        // see http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type

        var t = '';
        var unique, key, i, length;
        for (key in data) {
            if (hasOwn.call(data, key) && key) {
                if (isArray(data[key])) {
                    unique = {};
                    for (i = 0, length = data[key].length; i < length; i++) {
                        if (data[key][i] !== undefined && unique[data[key][i] + ''] === undefined) {
                            t += '&' + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);
                            if (duplicateQueryParameters !== true) {
                                unique[data[key][i] + ''] = true;
                            }
                        }
                    }
                } else if (data[key] !== undefined) {
                    t += '&' + URI.buildQueryParameter(key, data[key], escapeQuerySpace);
                }
            }
        }

        return t.substring(1);
    };
    URI.buildQueryParameter = function (name, value, escapeQuerySpace) {
        // http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type -- application/x-www-form-urlencoded
        // don't append "=" for null values, according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization
        return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? '=' + URI.encodeQuery(value, escapeQuerySpace) : '');
    };

    URI.addQuery = function (data, name, value) {
        if (typeof name === 'object') {
            for (var key in name) {
                if (hasOwn.call(name, key)) {
                    URI.addQuery(data, key, name[key]);
                }
            }
        } else if (typeof name === 'string') {
            if (data[name] === undefined) {
                data[name] = value;
                return;
            } else if (typeof data[name] === 'string') {
                data[name] = [data[name]];
            }

            if (!isArray(value)) {
                value = [value];
            }

            data[name] = (data[name] || []).concat(value);
        } else {
            throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');
        }
    };

    URI.setQuery = function (data, name, value) {
        if (typeof name === 'object') {
            for (var key in name) {
                if (hasOwn.call(name, key)) {
                    URI.setQuery(data, key, name[key]);
                }
            }
        } else if (typeof name === 'string') {
            data[name] = value === undefined ? null : value;
        } else {
            throw new TypeError('URI.setQuery() accepts an object, string as the name parameter');
        }
    };

    URI.removeQuery = function (data, name, value) {
        var i, length, key;

        if (isArray(name)) {
            for (i = 0, length = name.length; i < length; i++) {
                data[name[i]] = undefined;
            }
        } else if (getType(name) === 'RegExp') {
            for (key in data) {
                if (name.test(key)) {
                    data[key] = undefined;
                }
            }
        } else if (typeof name === 'object') {
            for (key in name) {
                if (hasOwn.call(name, key)) {
                    URI.removeQuery(data, key, name[key]);
                }
            }
        } else if (typeof name === 'string') {
            if (value !== undefined) {
                if (getType(value) === 'RegExp') {
                    if (!isArray(data[name]) && value.test(data[name])) {
                        data[name] = undefined;
                    } else {
                        data[name] = filterArrayValues(data[name], value);
                    }
                } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {
                    data[name] = undefined;
                } else if (isArray(data[name])) {
                    data[name] = filterArrayValues(data[name], value);
                }
            } else {
                data[name] = undefined;
            }
        } else {
            throw new TypeError('URI.removeQuery() accepts an object, string, RegExp as the first parameter');
        }
    };
    URI.hasQuery = function (data, name, value, withinArray) {
        switch (getType(name)) {
            case 'String':
                // Nothing to do here
                break;

            case 'RegExp':
                for (var key in data) {
                    if (hasOwn.call(data, key)) {
                        if (name.test(key) && (value === undefined || URI.hasQuery(data, key, value))) {
                            return true;
                        }
                    }
                }

                return false;

            case 'Object':
                for (var _key in name) {
                    if (hasOwn.call(name, _key)) {
                        if (!URI.hasQuery(data, _key, name[_key])) {
                            return false;
                        }
                    }
                }

                return true;

            default:
                throw new TypeError('URI.hasQuery() accepts a string, regular expression or object as the name parameter');
        }

        switch (getType(value)) {
            case 'Undefined':
                // true if exists (but may be empty)
                return name in data; // data[name] !== undefined;

            case 'Boolean':
                // true if exists and non-empty
                var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);
                return value === _booly;

            case 'Function':
                // allow complex comparison
                return !!value(data[name], name, data);

            case 'Array':
                if (!isArray(data[name])) {
                    return false;
                }

                var op = withinArray ? arrayContains : arraysEqual;
                return op(data[name], value);

            case 'RegExp':
                if (!isArray(data[name])) {
                    return Boolean(data[name] && data[name].match(value));
                }

                if (!withinArray) {
                    return false;
                }

                return arrayContains(data[name], value);

            case 'Number':
                value = String(value);
                /* falls through */
            case 'String':
                if (!isArray(data[name])) {
                    return data[name] === value;
                }

                if (!withinArray) {
                    return false;
                }

                return arrayContains(data[name], value);

            default:
                throw new TypeError('URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter');
        }
    };


    URI.joinPaths = function () {
        var input = [];
        var segments = [];
        var nonEmptySegments = 0;

        for (var i = 0; i < arguments.length; i++) {
            var url = new URI(arguments[i]);
            input.push(url);
            var _segments = url.segment();
            for (var s = 0; s < _segments.length; s++) {
                if (typeof _segments[s] === 'string') {
                    segments.push(_segments[s]);
                }

                if (_segments[s]) {
                    nonEmptySegments++;
                }
            }
        }

        if (!segments.length || !nonEmptySegments) {
            return new URI('');
        }

        var uri = new URI('').segment(segments);

        if (input[0].path() === '' || input[0].path().slice(0, 1) === '/') {
            uri.path('/' + uri.path());
        }

        return uri.normalize();
    };

    URI.commonPath = function (one, two) {
        var length = Math.min(one.length, two.length);
        var pos;

        // find first non-matching character
        for (pos = 0; pos < length; pos++) {
            if (one.charAt(pos) !== two.charAt(pos)) {
                pos--;
                break;
            }
        }

        if (pos < 1) {
            return one.charAt(0) === two.charAt(0) && one.charAt(0) === '/' ? '/' : '';
        }

        // revert to last /
        if (one.charAt(pos) !== '/' || two.charAt(pos) !== '/') {
            pos = one.substring(0, pos).lastIndexOf('/');
        }

        return one.substring(0, pos + 1);
    };

    URI.withinString = function (string, callback, options) {
        options || (options = {});
        var _start = options.start || URI.findUri.start;
        var _end = options.end || URI.findUri.end;
        var _trim = options.trim || URI.findUri.trim;
        var _parens = options.parens || URI.findUri.parens;
        var _attributeOpen = /[a-z0-9-]=["']?$/i;

        _start.lastIndex = 0;
        while (true) {
            var match = _start.exec(string);
            if (!match) {
                break;
            }

            var start = match.index;
            if (options.ignoreHtml) {
                // attribut(e=["']?$)
                var attributeOpen = string.slice(Math.max(start - 3, 0), start);
                if (attributeOpen && _attributeOpen.test(attributeOpen)) {
                    continue;
                }
            }

            var end = start + string.slice(start).search(_end);
            var slice = string.slice(start, end);
            // make sure we include well balanced parens
            var parensEnd = -1;
            while (true) {
                var parensMatch = _parens.exec(slice);
                if (!parensMatch) {
                    break;
                }

                var parensMatchEnd = parensMatch.index + parensMatch[0].length;
                parensEnd = Math.max(parensEnd, parensMatchEnd);
            }

            if (parensEnd > -1) {
                slice = slice.slice(0, parensEnd) + slice.slice(parensEnd).replace(_trim, '');
            } else {
                slice = slice.replace(_trim, '');
            }

            if (slice.length <= match[0].length) {
                // the extract only contains the starting marker of a URI,
                // e.g. "www" or "http://"
                continue;
            }

            if (options.ignore && options.ignore.test(slice)) {
                continue;
            }

            end = start + slice.length;
            var result = callback(slice, start, end, string);
            if (result === undefined) {
                _start.lastIndex = end;
                continue;
            }

            result = String(result);
            string = string.slice(0, start) + result + string.slice(end);
            _start.lastIndex = start + result.length;
        }

        _start.lastIndex = 0;
        return string;
    };

    URI.ensureValidHostname = function (v, protocol) {
        // Theoretically URIs allow percent-encoding in Hostnames (according to RFC 3986)
        // they are not part of DNS and therefore ignored by URI.js

        var hasHostname = !!v; // not null and not an empty string
        var hasProtocol = !!protocol;
        var rejectEmptyHostname = false;

        if (hasProtocol) {
            rejectEmptyHostname = arrayContains(URI.hostProtocols, protocol);
        }

        if (rejectEmptyHostname && !hasHostname) {
            throw new TypeError('Hostname cannot be empty, if protocol is ' + protocol);
        } else if (v && v.match(URI.invalid_hostname_characters)) {
            // test punycode
            if (!punycode) {
                throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
            }
            if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {
                throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-:_]');
            }
        }
    };

    URI.ensureValidPort = function (v) {
        if (!v) {
            return;
        }

        var port = Number(v);
        if (isInteger(port) && (port > 0) && (port < 65536)) {
            return;
        }

        throw new TypeError('Port "' + v + '" is not a valid port');
    };

    // noConflict
    URI.noConflict = function (removeAll) {
        if (removeAll) {
            var unconflicted = {
                URI: this.noConflict()
            };

            if (root.URITemplate && typeof root.URITemplate.noConflict === 'function') {
                unconflicted.URITemplate = root.URITemplate.noConflict();
            }

            if (root.IPv6 && typeof root.IPv6.noConflict === 'function') {
                unconflicted.IPv6 = root.IPv6.noConflict();
            }

            if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === 'function') {
                unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();
            }

            return unconflicted;
        } else if (root.URI === this) {
            root.URI = _URI;
        }

        return this;
    };

    p.build = function (deferBuild) {
        if (deferBuild === true) {
            this._deferred_build = true;
        } else if (deferBuild === undefined || this._deferred_build) {
            this._string = URI.build(this._parts);
            this._deferred_build = false;
        }

        return this;
    };

    p.clone = function () {
        return new URI(this);
    };

    p.valueOf = p.toString = function () {
        return this.build(false)._string;
    };


    function generateSimpleAccessor(_part) {
        return function (v, build) {
            if (v === undefined) {
                return this._parts[_part] || '';
            } else {
                this._parts[_part] = v || null;
                this.build(!build);
                return this;
            }
        };
    }

    function generatePrefixAccessor(_part, _key) {
        return function (v, build) {
            if (v === undefined) {
                return this._parts[_part] || '';
            } else {
                if (v !== null) {
                    v = v + '';
                    if (v.charAt(0) === _key) {
                        v = v.substring(1);
                    }
                }

                this._parts[_part] = v;
                this.build(!build);
                return this;
            }
        };
    }

    p.protocol = generateSimpleAccessor('protocol');
    p.username = generateSimpleAccessor('username');
    p.password = generateSimpleAccessor('password');
    p.hostname = generateSimpleAccessor('hostname');
    p.port = generateSimpleAccessor('port');
    p.query = generatePrefixAccessor('query', '?');
    p.fragment = generatePrefixAccessor('fragment', '#');

    p.search = function (v, build) {
        var t = this.query(v, build);
        return typeof t === 'string' && t.length ? ('?' + t) : t;
    };
    p.hash = function (v, build) {
        var t = this.fragment(v, build);
        return typeof t === 'string' && t.length ? ('#' + t) : t;
    };

    p.pathname = function (v, build) {
        if (v === undefined || v === true) {
            var res = this._parts.path || (this._parts.hostname ? '/' : '');
            return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;
        } else {
            if (this._parts.urn) {
                this._parts.path = v ? URI.recodeUrnPath(v) : '';
            } else {
                this._parts.path = v ? URI.recodePath(v) : '/';
            }
            this.build(!build);
            return this;
        }
    };
    p.path = p.pathname;
    p.href = function (href, build) {
        var key;

        if (href === undefined) {
            return this.toString();
        }

        this._string = '';
        this._parts = URI._parts();

        var _URI = href instanceof URI;
        var _object = typeof href === 'object' && (href.hostname || href.path || href.pathname);
        if (href.nodeName) {
            var attribute = URI.getDomAttribute(href);
            href = href[attribute] || '';
            _object = false;
        }

        // window.location is reported to be an object, but it's not the sort
        // of object we're looking for:
        // * location.protocol ends with a colon
        // * location.query != object.search
        // * location.hash != object.fragment
        // simply serializing the unknown object should do the trick
        // (for location, not for everything...)
        if (!_URI && _object && href.pathname !== undefined) {
            href = href.toString();
        }

        if (typeof href === 'string' || href instanceof String) {
            this._parts = URI.parse(String(href), this._parts);
        } else if (_URI || _object) {
            var src = _URI ? href._parts : href;
            for (key in src) {
                if (key === 'query') {
                    continue;
                }
                if (hasOwn.call(this._parts, key)) {
                    this._parts[key] = src[key];
                }
            }
            if (src.query) {
                this.query(src.query, false);
            }
        } else {
            throw new TypeError('invalid input');
        }

        this.build(!build);
        return this;
    };

    // identification accessors
    p.is = function (what) {
        var ip = false;
        var ip4 = false;
        var ip6 = false;
        var name = false;
        var sld = false;
        var idn = false;
        var punycode = false;
        var relative = !this._parts.urn;

        if (this._parts.hostname) {
            relative = false;
            ip4 = URI.ip4_expression.test(this._parts.hostname);
            ip6 = URI.ip6_expression.test(this._parts.hostname);
            ip = ip4 || ip6;
            name = !ip;
            sld = name && SLD && SLD.has(this._parts.hostname);
            idn = name && URI.idn_expression.test(this._parts.hostname);
            punycode = name && URI.punycode_expression.test(this._parts.hostname);
        }

        switch (what.toLowerCase()) {
            case 'relative':
                return relative;

            case 'absolute':
                return !relative;

                // hostname identification
            case 'domain':
            case 'name':
                return name;

            case 'sld':
                return sld;

            case 'ip':
                return ip;

            case 'ip4':
            case 'ipv4':
            case 'inet4':
                return ip4;

            case 'ip6':
            case 'ipv6':
            case 'inet6':
                return ip6;

            case 'idn':
                return idn;

            case 'url':
                return !this._parts.urn;

            case 'urn':
                return !!this._parts.urn;

            case 'punycode':
                return punycode;
        }

        return null;
    };

    // component specific input validation
    var _protocol = p.protocol;
    var _port = p.port;
    var _hostname = p.hostname;

    p.protocol = function (v, build) {
        if (v) {
            // accept trailing ://
            v = v.replace(/:(\/\/)?$/, '');

            if (!v.match(URI.protocol_expression)) {
                throw new TypeError('Protocol "' + v + '" contains characters other than [A-Z0-9.+-] or doesn\'t start with [A-Z]');
            }
        }

        return _protocol.call(this, v, build);
    };
    p.scheme = p.protocol;
    p.port = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v !== undefined) {
            if (v === 0) {
                v = null;
            }

            if (v) {
                v += '';
                if (v.charAt(0) === ':') {
                    v = v.substring(1);
                }

                URI.ensureValidPort(v);
            }
        }
        return _port.call(this, v, build);
    };
    p.hostname = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v !== undefined) {
            var x = {
                preventInvalidHostname: this._parts.preventInvalidHostname
            };
            var res = URI.parseHost(v, x);
            if (res !== '/') {
                throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
            }

            v = x.hostname;
            if (this._parts.preventInvalidHostname) {
                URI.ensureValidHostname(v, this._parts.protocol);
            }
        }

        return _hostname.call(this, v, build);
    };

    // compound accessors
    p.origin = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v === undefined) {
            var protocol = this.protocol();
            var authority = this.authority();
            if (!authority) {
                return '';
            }

            return (protocol ? protocol + '://' : '') + this.authority();
        } else {
            var origin = URI(v);
            this
                .protocol(origin.protocol())
                .authority(origin.authority())
                .build(!build);
            return this;
        }
    };
    p.host = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v === undefined) {
            return this._parts.hostname ? URI.buildHost(this._parts) : '';
        } else {
            var res = URI.parseHost(v, this._parts);
            if (res !== '/') {
                throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
            }

            this.build(!build);
            return this;
        }
    };
    p.authority = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v === undefined) {
            return this._parts.hostname ? URI.buildAuthority(this._parts) : '';
        } else {
            var res = URI.parseAuthority(v, this._parts);
            if (res !== '/') {
                throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
            }

            this.build(!build);
            return this;
        }
    };
    p.userinfo = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v === undefined) {
            var t = URI.buildUserinfo(this._parts);
            return t ? t.substring(0, t.length - 1) : t;
        } else {
            if (v[v.length - 1] !== '@') {
                v += '@';
            }

            URI.parseUserinfo(v, this._parts);
            this.build(!build);
            return this;
        }
    };
    p.resource = function (v, build) {
        var parts;

        if (v === undefined) {
            return this.path() + this.search() + this.hash();
        }

        parts = URI.parse(v);
        this._parts.path = parts.path;
        this._parts.query = parts.query;
        this._parts.fragment = parts.fragment;
        this.build(!build);
        return this;
    };

    // fraction accessors
    p.subdomain = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        // convenience, return "www" from "www.example.org"
        if (v === undefined) {
            if (!this._parts.hostname || this.is('IP')) {
                return '';
            }

            // grab domain and add another segment
            var end = this._parts.hostname.length - this.domain().length - 1;
            return this._parts.hostname.substring(0, end) || '';
        } else {
            var e = this._parts.hostname.length - this.domain().length;
            var sub = this._parts.hostname.substring(0, e);
            var replace = new RegExp('^' + escapeRegEx(sub));

            if (v && v.charAt(v.length - 1) !== '.') {
                v += '.';
            }

            if (v.indexOf(':') !== -1) {
                throw new TypeError('Domains cannot contain colons');
            }

            if (v) {
                URI.ensureValidHostname(v, this._parts.protocol);
            }

            this._parts.hostname = this._parts.hostname.replace(replace, v);
            this.build(!build);
            return this;
        }
    };
    p.domain = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (typeof v === 'boolean') {
            build = v;
            v = undefined;
        }

        // convenience, return "example.org" from "www.example.org"
        if (v === undefined) {
            if (!this._parts.hostname || this.is('IP')) {
                return '';
            }

            // if hostname consists of 1 or 2 segments, it must be the domain
            var t = this._parts.hostname.match(/\./g);
            if (t && t.length < 2) {
                return this._parts.hostname;
            }

            // grab tld and add another segment
            var end = this._parts.hostname.length - this.tld(build).length - 1;
            end = this._parts.hostname.lastIndexOf('.', end - 1) + 1;
            return this._parts.hostname.substring(end) || '';
        } else {
            if (!v) {
                throw new TypeError('cannot set domain empty');
            }

            if (v.indexOf(':') !== -1) {
                throw new TypeError('Domains cannot contain colons');
            }

            URI.ensureValidHostname(v, this._parts.protocol);

            if (!this._parts.hostname || this.is('IP')) {
                this._parts.hostname = v;
            } else {
                var replace = new RegExp(escapeRegEx(this.domain()) + '$');
                this._parts.hostname = this._parts.hostname.replace(replace, v);
            }

            this.build(!build);
            return this;
        }
    };
    p.tld = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (typeof v === 'boolean') {
            build = v;
            v = undefined;
        }

        // return "org" from "www.example.org"
        if (v === undefined) {
            if (!this._parts.hostname || this.is('IP')) {
                return '';
            }

            var pos = this._parts.hostname.lastIndexOf('.');
            var tld = this._parts.hostname.substring(pos + 1);

            if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {
                return SLD.get(this._parts.hostname) || tld;
            }

            return tld;
        } else {
            var replace;

            if (!v) {
                throw new TypeError('cannot set TLD empty');
            } else if (v.match(/[^a-zA-Z0-9-]/)) {
                if (SLD && SLD.is(v)) {
                    replace = new RegExp(escapeRegEx(this.tld()) + '$');
                    this._parts.hostname = this._parts.hostname.replace(replace, v);
                } else {
                    throw new TypeError('TLD "' + v + '" contains characters other than [A-Z0-9]');
                }
            } else if (!this._parts.hostname || this.is('IP')) {
                throw new ReferenceError('cannot set TLD on non-domain host');
            } else {
                replace = new RegExp(escapeRegEx(this.tld()) + '$');
                this._parts.hostname = this._parts.hostname.replace(replace, v);
            }

            this.build(!build);
            return this;
        }
    };
    p.directory = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v === undefined || v === true) {
            if (!this._parts.path && !this._parts.hostname) {
                return '';
            }

            if (this._parts.path === '/') {
                return '/';
            }

            var end = this._parts.path.length - this.filename().length - 1;
            var res = this._parts.path.substring(0, end) || (this._parts.hostname ? '/' : '');

            return v ? URI.decodePath(res) : res;

        } else {
            var e = this._parts.path.length - this.filename().length;
            var directory = this._parts.path.substring(0, e);
            var replace = new RegExp('^' + escapeRegEx(directory));

            // fully qualifier directories begin with a slash
            if (!this.is('relative')) {
                if (!v) {
                    v = '/';
                }

                if (v.charAt(0) !== '/') {
                    v = '/' + v;
                }
            }

            // directories always end with a slash
            if (v && v.charAt(v.length - 1) !== '/') {
                v += '/';
            }

            v = URI.recodePath(v);
            this._parts.path = this._parts.path.replace(replace, v);
            this.build(!build);
            return this;
        }
    };
    p.filename = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (typeof v !== 'string') {
            if (!this._parts.path || this._parts.path === '/') {
                return '';
            }

            var pos = this._parts.path.lastIndexOf('/');
            var res = this._parts.path.substring(pos + 1);

            return v ? URI.decodePathSegment(res) : res;
        } else {
            var mutatedDirectory = false;

            if (v.charAt(0) === '/') {
                v = v.substring(1);
            }

            if (v.match(/\.?\//)) {
                mutatedDirectory = true;
            }

            var replace = new RegExp(escapeRegEx(this.filename()) + '$');
            v = URI.recodePath(v);
            this._parts.path = this._parts.path.replace(replace, v);

            if (mutatedDirectory) {
                this.normalizePath(build);
            } else {
                this.build(!build);
            }

            return this;
        }
    };
    p.suffix = function (v, build) {
        if (this._parts.urn) {
            return v === undefined ? '' : this;
        }

        if (v === undefined || v === true) {
            if (!this._parts.path || this._parts.path === '/') {
                return '';
            }

            var filename = this.filename();
            var pos = filename.lastIndexOf('.');
            var s, res;

            if (pos === -1) {
                return '';
            }

            // suffix may only contain alnum characters (yup, I made this up.)
            s = filename.substring(pos + 1);
            res = (/^[a-z0-9%]+$/i).test(s) ? s : '';
            return v ? URI.decodePathSegment(res) : res;
        } else {
            if (v.charAt(0) === '.') {
                v = v.substring(1);
            }

            var suffix = this.suffix();
            var replace;

            if (!suffix) {
                if (!v) {
                    return this;
                }

                this._parts.path += '.' + URI.recodePath(v);
            } else if (!v) {
                replace = new RegExp(escapeRegEx('.' + suffix) + '$');
            } else {
                replace = new RegExp(escapeRegEx(suffix) + '$');
            }

            if (replace) {
                v = URI.recodePath(v);
                this._parts.path = this._parts.path.replace(replace, v);
            }

            this.build(!build);
            return this;
        }
    };
    p.segment = function (segment, v, build) {
        var separator = this._parts.urn ? ':' : '/';
        var path = this.path();
        var absolute = path.substring(0, 1) === '/';
        var segments = path.split(separator);

        if (segment !== undefined && typeof segment !== 'number') {
            build = v;
            v = segment;
            segment = undefined;
        }

        if (segment !== undefined && typeof segment !== 'number') {
            throw new Error('Bad segment "' + segment + '", must be 0-based integer');
        }

        if (absolute) {
            segments.shift();
        }

        if (segment < 0) {
            // allow negative indexes to address from the end
            segment = Math.max(segments.length + segment, 0);
        }

        if (v === undefined) {
            /*jshint laxbreak: true */
            return segment === undefined ?
                segments :
                segments[segment];
            /*jshint laxbreak: false */
        } else if (segment === null || segments[segment] === undefined) {
            if (isArray(v)) {
                segments = [];
                // collapse empty elements within array
                for (var i = 0, l = v.length; i < l; i++) {
                    if (!v[i].length && (!segments.length || !segments[segments.length - 1].length)) {
                        continue;
                    }

                    if (segments.length && !segments[segments.length - 1].length) {
                        segments.pop();
                    }

                    segments.push(trimSlashes(v[i]));
                }
            } else if (v || typeof v === 'string') {
                v = trimSlashes(v);
                if (segments[segments.length - 1] === '') {
                    // empty trailing elements have to be overwritten
                    // to prevent results such as /foo//bar
                    segments[segments.length - 1] = v;
                } else {
                    segments.push(v);
                }
            }
        } else {
            if (v) {
                segments[segment] = trimSlashes(v);
            } else {
                segments.splice(segment, 1);
            }
        }

        if (absolute) {
            segments.unshift('');
        }

        return this.path(segments.join(separator), build);
    };
    p.segmentCoded = function (segment, v, build) {
        var segments, i, l;

        if (typeof segment !== 'number') {
            build = v;
            v = segment;
            segment = undefined;
        }

        if (v === undefined) {
            segments = this.segment(segment, v, build);
            if (!isArray(segments)) {
                segments = segments !== undefined ? URI.decode(segments) : undefined;
            } else {
                for (i = 0, l = segments.length; i < l; i++) {
                    segments[i] = URI.decode(segments[i]);
                }
            }

            return segments;
        }

        if (!isArray(v)) {
            v = (typeof v === 'string' || v instanceof String) ? URI.encode(v) : v;
        } else {
            for (i = 0, l = v.length; i < l; i++) {
                v[i] = URI.encode(v[i]);
            }
        }

        return this.segment(segment, v, build);
    };

    // mutating query string
    var q = p.query;
    p.query = function (v, build) {
        if (v === true) {
            return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        } else if (typeof v === 'function') {
            var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            var result = v.call(this, data);
            this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
            this.build(!build);
            return this;
        } else if (v !== undefined && typeof v !== 'string') {
            this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
            this.build(!build);
            return this;
        } else {
            return q.call(this, v, build);
        }
    };
    p.setQuery = function (name, value, build) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);

        if (typeof name === 'string' || name instanceof String) {
            data[name] = value !== undefined ? value : null;
        } else if (typeof name === 'object') {
            for (var key in name) {
                if (hasOwn.call(name, key)) {
                    data[key] = name[key];
                }
            }
        } else {
            throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');
        }

        this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        if (typeof name !== 'string') {
            build = value;
        }

        this.build(!build);
        return this;
    };
    p.addQuery = function (name, value, build) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        URI.addQuery(data, name, value === undefined ? null : value);
        this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        if (typeof name !== 'string') {
            build = value;
        }

        this.build(!build);
        return this;
    };
    p.removeQuery = function (name, value, build) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        URI.removeQuery(data, name, value);
        this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
        if (typeof name !== 'string') {
            build = value;
        }

        this.build(!build);
        return this;
    };
    p.hasQuery = function (name, value, withinArray) {
        var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return URI.hasQuery(data, name, value, withinArray);
    };
    p.setSearch = p.setQuery;
    p.addSearch = p.addQuery;
    p.removeSearch = p.removeQuery;
    p.hasSearch = p.hasQuery;

    // sanitizing URLs
    p.normalize = function () {
        if (this._parts.urn) {
            return this
                .normalizeProtocol(false)
                .normalizePath(false)
                .normalizeQuery(false)
                .normalizeFragment(false)
                .build();
        }

        return this
            .normalizeProtocol(false)
            .normalizeHostname(false)
            .normalizePort(false)
            .normalizePath(false)
            .normalizeQuery(false)
            .normalizeFragment(false)
            .build();
    };
    p.normalizeProtocol = function (build) {
        if (typeof this._parts.protocol === 'string') {
            this._parts.protocol = this._parts.protocol.toLowerCase();
            this.build(!build);
        }

        return this;
    };
    p.normalizeHostname = function (build) {
        if (this._parts.hostname) {
            if (this.is('IDN') && punycode) {
                this._parts.hostname = punycode.toASCII(this._parts.hostname);
            } else if (this.is('IPv6') && IPv6) {
                this._parts.hostname = IPv6.best(this._parts.hostname);
            }

            this._parts.hostname = this._parts.hostname.toLowerCase();
            this.build(!build);
        }

        return this;
    };
    p.normalizePort = function (build) {
        // remove port of it's the protocol's default
        if (typeof this._parts.protocol === 'string' && this._parts.port === URI.defaultPorts[this._parts.protocol]) {
            this._parts.port = null;
            this.build(!build);
        }

        return this;
    };
    p.normalizePath = function (build) {
        var _path = this._parts.path;
        if (!_path) {
            return this;
        }

        if (this._parts.urn) {
            this._parts.path = URI.recodeUrnPath(this._parts.path);
            this.build(!build);
            return this;
        }

        if (this._parts.path === '/') {
            return this;
        }

        _path = URI.recodePath(_path);

        var _was_relative;
        var _leadingParents = '';
        var _parent, _pos;

        // handle relative paths
        if (_path.charAt(0) !== '/') {
            _was_relative = true;
            _path = '/' + _path;
        }

        // handle relative files (as opposed to directories)
        if (_path.slice(-3) === '/..' || _path.slice(-2) === '/.') {
            _path += '/';
        }

        // resolve simples
        _path = _path
            .replace(/(\/(\.\/)+)|(\/\.$)/g, '/')
            .replace(/\/{2,}/g, '/');

        // remember leading parents
        if (_was_relative) {
            _leadingParents = _path.substring(1).match(/^(\.\.\/)+/) || '';
            if (_leadingParents) {
                _leadingParents = _leadingParents[0];
            }
        }

        // resolve parents
        while (true) {
            _parent = _path.search(/\/\.\.(\/|$)/);
            if (_parent === -1) {
                // no more ../ to resolve
                break;
            } else if (_parent === 0) {
                // top level cannot be relative, skip it
                _path = _path.substring(3);
                continue;
            }

            _pos = _path.substring(0, _parent).lastIndexOf('/');
            if (_pos === -1) {
                _pos = _parent;
            }
            _path = _path.substring(0, _pos) + _path.substring(_parent + 3);
        }

        // revert to relative
        if (_was_relative && this.is('relative')) {
            _path = _leadingParents + _path.substring(1);
        }

        this._parts.path = _path;
        this.build(!build);
        return this;
    };
    p.normalizePathname = p.normalizePath;
    p.normalizeQuery = function (build) {
        if (typeof this._parts.query === 'string') {
            if (!this._parts.query.length) {
                this._parts.query = null;
            } else {
                this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));
            }

            this.build(!build);
        }

        return this;
    };
    p.normalizeFragment = function (build) {
        if (!this._parts.fragment) {
            this._parts.fragment = null;
            this.build(!build);
        }

        return this;
    };
    p.normalizeSearch = p.normalizeQuery;
    p.normalizeHash = p.normalizeFragment;

    p.iso8859 = function () {
        // expect unicode input, iso8859 output
        var e = URI.encode;
        var d = URI.decode;

        URI.encode = escape;
        URI.decode = decodeURIComponent;
        try {
            this.normalize();
        } finally {
            URI.encode = e;
            URI.decode = d;
        }
        return this;
    };

    p.unicode = function () {
        // expect iso8859 input, unicode output
        var e = URI.encode;
        var d = URI.decode;

        URI.encode = strictEncodeURIComponent;
        URI.decode = unescape;
        try {
            this.normalize();
        } finally {
            URI.encode = e;
            URI.decode = d;
        }
        return this;
    };

    p.readable = function () {
        var uri = this.clone();
        // removing username, password, because they shouldn't be displayed according to RFC 3986
        uri.username('').password('').normalize();
        var t = '';
        if (uri._parts.protocol) {
            t += uri._parts.protocol + '://';
        }

        if (uri._parts.hostname) {
            if (uri.is('punycode') && punycode) {
                t += punycode.toUnicode(uri._parts.hostname);
                if (uri._parts.port) {
                    t += ':' + uri._parts.port;
                }
            } else {
                t += uri.host();
            }
        }

        if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== '/') {
            t += '/';
        }

        t += uri.path(true);
        if (uri._parts.query) {
            var q = '';
            for (var i = 0, qp = uri._parts.query.split('&'), l = qp.length; i < l; i++) {
                var kv = (qp[i] || '').split('=');
                q += '&' + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace)
                    .replace(/&/g, '%26');

                if (kv[1] !== undefined) {
                    q += '=' + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace)
                        .replace(/&/g, '%26');
                }
            }
            t += '?' + q.substring(1);
        }

        t += URI.decodeQuery(uri.hash(), true);
        return t;
    };

    // resolving relative and absolute URLs
    p.absoluteTo = function (base) {
        var resolved = this.clone();
        var properties = ['protocol', 'username', 'password', 'hostname', 'port'];
        var basedir, i, p;

        if (this._parts.urn) {
            throw new Error('URNs do not have any generally defined hierarchical components');
        }

        if (!(base instanceof URI)) {
            base = new URI(base);
        }

        if (resolved._parts.protocol) {
            // Directly returns even if this._parts.hostname is empty.
            return resolved;
        } else {
            resolved._parts.protocol = base._parts.protocol;
        }

        if (this._parts.hostname) {
            return resolved;
        }

        for (i = 0;
            (p = properties[i]); i++) {
            resolved._parts[p] = base._parts[p];
        }

        if (!resolved._parts.path) {
            resolved._parts.path = base._parts.path;
            if (!resolved._parts.query) {
                resolved._parts.query = base._parts.query;
            }
        } else {
            if (resolved._parts.path.substring(-2) === '..') {
                resolved._parts.path += '/';
            }

            if (resolved.path().charAt(0) !== '/') {
                basedir = base.directory();
                basedir = basedir ? basedir : base.path().indexOf('/') === 0 ? '/' : '';
                resolved._parts.path = (basedir ? (basedir + '/') : '') + resolved._parts.path;
                resolved.normalizePath();
            }
        }

        resolved.build();
        return resolved;
    };
    p.relativeTo = function (base) {
        var relative = this.clone().normalize();
        var relativeParts, baseParts, common, relativePath, basePath;

        if (relative._parts.urn) {
            throw new Error('URNs do not have any generally defined hierarchical components');
        }

        base = new URI(base).normalize();
        relativeParts = relative._parts;
        baseParts = base._parts;
        relativePath = relative.path();
        basePath = base.path();

        if (relativePath.charAt(0) !== '/') {
            throw new Error('URI is already relative');
        }

        if (basePath.charAt(0) !== '/') {
            throw new Error('Cannot calculate a URI relative to another relative URI');
        }

        if (relativeParts.protocol === baseParts.protocol) {
            relativeParts.protocol = null;
        }

        if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {
            return relative.build();
        }

        if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {
            return relative.build();
        }

        if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {
            relativeParts.hostname = null;
            relativeParts.port = null;
        } else {
            return relative.build();
        }

        if (relativePath === basePath) {
            relativeParts.path = '';
            return relative.build();
        }

        // determine common sub path
        common = URI.commonPath(relativePath, basePath);

        // If the paths have nothing in common, return a relative URL with the absolute path.
        if (!common) {
            return relative.build();
        }

        var parents = baseParts.path
            .substring(common.length)
            .replace(/[^\/]*$/, '')
            .replace(/.*?\//g, '../');

        relativeParts.path = (parents + relativeParts.path.substring(common.length)) || './';

        return relative.build();
    };

    // comparing URIs
    p.equals = function (uri) {
        var one = this.clone();
        var two = new URI(uri);
        var one_map = {};
        var two_map = {};
        var checked = {};
        var one_query, two_query, key;

        one.normalize();
        two.normalize();

        // exact match
        if (one.toString() === two.toString()) {
            return true;
        }

        // extract query string
        one_query = one.query();
        two_query = two.query();
        one.query('');
        two.query('');

        // definitely not equal if not even non-query parts match
        if (one.toString() !== two.toString()) {
            return false;
        }

        // query parameters have the same length, even if they're permuted
        if (one_query.length !== two_query.length) {
            return false;
        }

        one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);
        two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);

        for (key in one_map) {
            if (hasOwn.call(one_map, key)) {
                if (!isArray(one_map[key])) {
                    if (one_map[key] !== two_map[key]) {
                        return false;
                    }
                } else if (!arraysEqual(one_map[key], two_map[key])) {
                    return false;
                }

                checked[key] = true;
            }
        }

        for (key in two_map) {
            if (hasOwn.call(two_map, key)) {
                if (!checked[key]) {
                    // two contains a parameter not present in one
                    return false;
                }
            }
        }

        return true;
    };

    // state
    p.preventInvalidHostname = function (v) {
        this._parts.preventInvalidHostname = !!v;
        return this;
    };

    p.duplicateQueryParameters = function (v) {
        this._parts.duplicateQueryParameters = !!v;
        return this;
    };

    p.escapeQuerySpace = function (v) {
        this._parts.escapeQuerySpace = !!v;
        return this;
    };

    return URI;
}

/***/ }),

/***/ "./ClientApp/modules/uri/src/URITemplate.js":
/*!**************************************************!*\
  !*** ./ClientApp/modules/uri/src/URITemplate.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 * URI.js - Mutating URLs
 * URI Template Support - http://tools.ietf.org/html/rfc6570
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */

module.exports = function (root, URI) {
  'use strict';
  // FIXME: v2.0.0 renamce non-camelCase properties to uppercase
  /*jshint camelcase: false */

  // save current URITemplate variable, if any
  var _URITemplate = root && root.URITemplate;

  var hasOwn = Object.prototype.hasOwnProperty;

  function URITemplate(expression) {
    // serve from cache where possible
    if (URITemplate._cache[expression]) {
      return URITemplate._cache[expression];
    }

    // Allow instantiation without the 'new' keyword
    if (!(this instanceof URITemplate)) {
      return new URITemplate(expression);
    }

    this.expression = expression;
    URITemplate._cache[expression] = this;
    return this;
  }

  function Data(data) {
    this.data = data;
    this.cache = {};
  }

  var p = URITemplate.prototype;
  // list of operators and their defined options
  var operators = {
    // Simple string expansion
    '': {
      prefix: '',
      separator: ',',
      named: false,
      empty_name_separator: false,
      encode: 'encode'
    },
    // Reserved character strings
    '+': {
      prefix: '',
      separator: ',',
      named: false,
      empty_name_separator: false,
      encode: 'encodeReserved'
    },
    // Fragment identifiers prefixed by '#'
    '#': {
      prefix: '#',
      separator: ',',
      named: false,
      empty_name_separator: false,
      encode: 'encodeReserved'
    },
    // Name labels or extensions prefixed by '.'
    '.': {
      prefix: '.',
      separator: '.',
      named: false,
      empty_name_separator: false,
      encode: 'encode'
    },
    // Path segments prefixed by '/'
    '/': {
      prefix: '/',
      separator: '/',
      named: false,
      empty_name_separator: false,
      encode: 'encode'
    },
    // Path parameter name or name=value pairs prefixed by ';'
    ';': {
      prefix: ';',
      separator: ';',
      named: true,
      empty_name_separator: false,
      encode: 'encode'
    },
    // Query component beginning with '?' and consisting
    // of name=value pairs separated by '&'; an
    '?': {
      prefix: '?',
      separator: '&',
      named: true,
      empty_name_separator: true,
      encode: 'encode'
    },
    // Continuation of query-style &name=value pairs
    // within a literal query component.
    '&': {
      prefix: '&',
      separator: '&',
      named: true,
      empty_name_separator: true,
      encode: 'encode'
    }

    // The operator characters equals ("="), comma (","), exclamation ("!"),
    // at sign ("@"), and pipe ("|") are reserved for future extensions.
  };

  // storage for already parsed templates
  URITemplate._cache = {};
  // pattern to identify expressions [operator, variable-list] in template
  URITemplate.EXPRESSION_PATTERN = /\{([^a-zA-Z0-9%_]?)([^\}]+)(\}|$)/g;
  // pattern to identify variables [name, explode, maxlength] in variable-list
  URITemplate.VARIABLE_PATTERN = /^([^*:.](?:\.?[^*:.])*)((\*)|:(\d+))?$/;
  // pattern to verify variable name integrity
  URITemplate.VARIABLE_NAME_PATTERN = /[^a-zA-Z0-9%_.]/;
  // pattern to verify literal integrity
  URITemplate.LITERAL_PATTERN = /[<>{}"`^| \\]/;

  // expand parsed expression (expression, not template!)
  URITemplate.expand = function (expression, data, opts) {
    // container for defined options for the given operator
    var options = operators[expression.operator];
    // expansion type (include keys or not)
    var type = options.named ? 'Named' : 'Unnamed';
    // list of variables within the expression
    var variables = expression.variables;
    // result buffer for evaluating the expression
    var buffer = [];
    var d, variable, i;

    for (i = 0;
      (variable = variables[i]); i++) {
      // fetch simplified data source
      d = data.get(variable.name);
      if (d.type === 0 && opts && opts.strict) {
        throw new Error('Missing expansion value for variable "' + variable.name + '"');
      }
      if (!d.val.length) {
        if (d.type) {
          // empty variables (empty string)
          // still lead to a separator being appended!
          buffer.push('');
        }
        // no data, no action
        continue;
      }

      if (d.type > 1 && variable.maxlength) {
        // composite variable cannot specify maxlength
        throw new Error('Invalid expression: Prefix modifier not applicable to variable "' + variable.name + '"');
      }

      // expand the given variable
      buffer.push(URITemplate['expand' + type](
        d,
        options,
        variable.explode,
        variable.explode && options.separator || ',',
        variable.maxlength,
        variable.name
      ));
    }

    if (buffer.length) {
      return options.prefix + buffer.join(options.separator);
    } else {
      // prefix is not prepended for empty expressions
      return '';
    }
  };
  // expand a named variable
  URITemplate.expandNamed = function (d, options, explode, separator, length, name) {
    // variable result buffer
    var result = '';
    // peformance crap
    var encode = options.encode;
    var empty_name_separator = options.empty_name_separator;
    // flag noting if values are already encoded
    var _encode = !d[encode].length;
    // key for named expansion
    var _name = d.type === 2 ? '' : URI[encode](name);
    var _value, i, l;

    // for each found value
    for (i = 0, l = d.val.length; i < l; i++) {
      if (length) {
        // maxlength must be determined before encoding can happen
        _value = URI[encode](d.val[i][1].substring(0, length));
        if (d.type === 2) {
          // apply maxlength to keys of objects as well
          _name = URI[encode](d.val[i][0].substring(0, length));
        }
      } else if (_encode) {
        // encode value
        _value = URI[encode](d.val[i][1]);
        if (d.type === 2) {
          // encode name and cache encoded value
          _name = URI[encode](d.val[i][0]);
          d[encode].push([_name, _value]);
        } else {
          // cache encoded value
          d[encode].push([undefined, _value]);
        }
      } else {
        // values are already encoded and can be pulled from cache
        _value = d[encode][i][1];
        if (d.type === 2) {
          _name = d[encode][i][0];
        }
      }

      if (result) {
        // unless we're the first value, prepend the separator
        result += separator;
      }

      if (!explode) {
        if (!i) {
          // first element, so prepend variable name
          result += URI[encode](name) + (empty_name_separator || _value ? '=' : '');
        }

        if (d.type === 2) {
          // without explode-modifier, keys of objects are returned comma-separated
          result += _name + ',';
        }

        result += _value;
      } else {
        // only add the = if it is either default (?&) or there actually is a value (;)
        result += _name + (empty_name_separator || _value ? '=' : '') + _value;
      }
    }

    return result;
  };
  // expand an unnamed variable
  URITemplate.expandUnnamed = function (d, options, explode, separator, length) {
    // variable result buffer
    var result = '';
    // performance crap
    var encode = options.encode;
    var empty_name_separator = options.empty_name_separator;
    // flag noting if values are already encoded
    var _encode = !d[encode].length;
    var _name, _value, i, l;

    // for each found value
    for (i = 0, l = d.val.length; i < l; i++) {
      if (length) {
        // maxlength must be determined before encoding can happen
        _value = URI[encode](d.val[i][1].substring(0, length));
      } else if (_encode) {
        // encode and cache value
        _value = URI[encode](d.val[i][1]);
        d[encode].push([
          d.type === 2 ? URI[encode](d.val[i][0]) : undefined,
          _value
        ]);
      } else {
        // value already encoded, pull from cache
        _value = d[encode][i][1];
      }

      if (result) {
        // unless we're the first value, prepend the separator
        result += separator;
      }

      if (d.type === 2) {
        if (length) {
          // maxlength also applies to keys of objects
          _name = URI[encode](d.val[i][0].substring(0, length));
        } else {
          // at this point the name must already be encoded
          _name = d[encode][i][0];
        }

        result += _name;
        if (explode) {
          // explode-modifier separates name and value by "="
          result += (empty_name_separator || _value ? '=' : '');
        } else {
          // no explode-modifier separates name and value by ","
          result += ',';
        }
      }

      result += _value;
    }

    return result;
  };

  URITemplate.noConflict = function () {
    if (root.URITemplate === URITemplate) {
      root.URITemplate = _URITemplate;
    }

    return URITemplate;
  };

  // expand template through given data map
  p.expand = function (data, opts) {
    var result = '';

    if (!this.parts || !this.parts.length) {
      // lazilyy parse the template
      this.parse();
    }

    if (!(data instanceof Data)) {
      // make given data available through the
      // optimized data handling thingie
      data = new Data(data);
    }

    for (var i = 0, l = this.parts.length; i < l; i++) {
      /*jshint laxbreak: true */
      result += typeof this.parts[i] === 'string'
        // literal string
        ?
        this.parts[i]
        // expression
        :
        URITemplate.expand(this.parts[i], data, opts);
      /*jshint laxbreak: false */
    }

    return result;
  };
  // parse template into action tokens
  p.parse = function () {
    // performance crap
    var expression = this.expression;
    var ePattern = URITemplate.EXPRESSION_PATTERN;
    var vPattern = URITemplate.VARIABLE_PATTERN;
    var nPattern = URITemplate.VARIABLE_NAME_PATTERN;
    var lPattern = URITemplate.LITERAL_PATTERN;
    // token result buffer
    var parts = [];
    // position within source template
    var pos = 0;
    var variables, eMatch, vMatch;

    var checkLiteral = function (literal) {
      if (literal.match(lPattern)) {
        throw new Error('Invalid Literal "' + literal + '"');
      }
      return literal;
    };

    // RegExp is shared accross all templates,
    // which requires a manual reset
    ePattern.lastIndex = 0;
    // I don't like while(foo = bar()) loops,
    // to make things simpler I go while(true) and break when required
    while (true) {
      eMatch = ePattern.exec(expression);
      if (eMatch === null) {
        // push trailing literal
        parts.push(checkLiteral(expression.substring(pos)));
        break;
      } else {
        // push leading literal
        parts.push(checkLiteral(expression.substring(pos, eMatch.index)));
        pos = eMatch.index + eMatch[0].length;
      }

      if (!operators[eMatch[1]]) {
        throw new Error('Unknown Operator "' + eMatch[1] + '" in "' + eMatch[0] + '"');
      } else if (!eMatch[3]) {
        throw new Error('Unclosed Expression "' + eMatch[0] + '"');
      }

      // parse variable-list
      variables = eMatch[2].split(',');
      for (var i = 0, l = variables.length; i < l; i++) {
        vMatch = variables[i].match(vPattern);
        if (vMatch === null) {
          throw new Error('Invalid Variable "' + variables[i] + '" in "' + eMatch[0] + '"');
        } else if (vMatch[1].match(nPattern)) {
          throw new Error('Invalid Variable Name "' + vMatch[1] + '" in "' + eMatch[0] + '"');
        }

        variables[i] = {
          name: vMatch[1],
          explode: !!vMatch[3],
          maxlength: vMatch[4] && parseInt(vMatch[4], 10)
        };
      }

      if (!variables.length) {
        throw new Error('Expression Missing Variable(s) "' + eMatch[0] + '"');
      }

      parts.push({
        expression: eMatch[0],
        operator: eMatch[1],
        variables: variables
      });
    }

    if (!parts.length) {
      // template doesn't contain any expressions
      // so it is a simple literal string
      // this probably should fire a warning or something?
      parts.push(checkLiteral(expression));
    }

    this.parts = parts;
    return this;
  };

  // simplify data structures
  Data.prototype.get = function (key) {
    // performance crap
    var data = this.data;
    // cache for processed data-point
    var d = {
      // type of data 0: undefined/null, 1: string, 2: object, 3: array
      type: 0,
      // original values (except undefined/null)
      val: [],
      // cache for encoded values (only for non-maxlength expansion)
      encode: [],
      encodeReserved: []
    };
    var i, l, value;

    if (this.cache[key] !== undefined) {
      // we've already processed this key
      return this.cache[key];
    }

    this.cache[key] = d;

    if (String(Object.prototype.toString.call(data)) === '[object Function]') {
      // data itself is a callback (global callback)
      value = data(key);
    } else if (String(Object.prototype.toString.call(data[key])) === '[object Function]') {
      // data is a map of callbacks (local callback)
      value = data[key](key);
    } else {
      // data is a map of data
      value = data[key];
    }

    // generalize input into [ [name1, value1], [name2, value2], … ]
    // so expansion has to deal with a single data structure only
    if (value === undefined || value === null) {
      // undefined and null values are to be ignored completely
      return d;
    } else if (String(Object.prototype.toString.call(value)) === '[object Array]') {
      for (i = 0, l = value.length; i < l; i++) {
        if (value[i] !== undefined && value[i] !== null) {
          // arrays don't have names
          d.val.push([undefined, String(value[i])]);
        }
      }

      if (d.val.length) {
        // only treat non-empty arrays as arrays
        d.type = 3; // array
      }
    } else if (String(Object.prototype.toString.call(value)) === '[object Object]') {
      for (i in value) {
        if (hasOwn.call(value, i) && value[i] !== undefined && value[i] !== null) {
          // objects have keys, remember them for named expansion
          d.val.push([i, String(value[i])]);
        }
      }

      if (d.val.length) {
        // only treat non-empty objects as objects
        d.type = 2; // object
      }
    } else {
      d.type = 1; // primitive string (could've been string, number, boolean and objects with a toString())
      // arrays don't have names
      d.val.push([undefined, String(value)]);
    }

    return d;
  };

  // hook into URI for fluid access
  URI.expand = function (expression, data) {
    var template = new URITemplate(expression);
    var expansion = template.expand(data);

    return new URI(expansion);
  };

  return URITemplate;
}

/***/ }),

/***/ "./ClientApp/modules/utils.cache.js":
/*!******************************************!*\
  !*** ./ClientApp/modules/utils.cache.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var extend = __webpack_require__(/*! ./utils.extend */ "./ClientApp/modules/utils.extend.js");
module.exports = ObjectCache;
/**
 * 对象缓存容器
 * @param {object} obj 缓存对象
 */
function ObjectCache(obj) {
    if (obj) extend(this, obj || {}, false);
    this.getOrAdd = function (key, val) {
        if (typeof this[key] === "undefined") {
            this[key] = val;
        }
        return this[key];
    };
    this.set = function (key, val) {
        if (typeof val !== "undefined") {
            this[key] = val;
        }
        return this[key];
    };
    this.remove = function (key) {
        var value = this[key];
        if (typeof value === 'function') return value;
        try {
            delete this[key];
        } catch (e) {
            this[key] = undefined;
        }
        return value;
    };
    this.clear = function () {
        for (var key in this) {
            if (this.hasOwnProperty(key)) {
                this.remove(key);
            }
        }
        return this;
    }
};
ObjectCache['default'] = new ObjectCache();



/***/ }),

/***/ "./ClientApp/modules/utils.cookie.js":
/*!*******************************************!*\
  !*** ./ClientApp/modules/utils.cookie.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var extend = __webpack_require__(/*! ./utils.extend */ "./ClientApp/modules/utils.extend.js");

var pluses = /\+/g;

function encode(s) {
	return _cookie.raw ? s : encodeURIComponent(s);
}

function decode(s) {
	return _cookie.raw ? s : decodeURIComponent(s);
}

function stringifyCookieValue(value) {
	return encode(_cookie.json ? JSON.stringify(value) : String(value));
}

function parseCookieValue(s) {
	if (s.indexOf('"') === 0) {
		// This is a quoted cookie as according to RFC2068, unescape...
		s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
	}

	try {
		// Replace server-side written pluses with spaces.
		// If we can't decode the cookie, ignore it, it's unusable.
		// If we can't parse the cookie, ignore it, it's unusable.
		s = decodeURIComponent(s.replace(pluses, ' '));
		return _cookie.json ? JSON.parse(s) : s;
	} catch (e) {}
}

function read(s, converter) {
	var value = _cookie.raw ? s : parseCookieValue(s);
	return typeof converter === 'function' ? converter(value) : value;
}

var _cookie = function (key, value, options) {

	// Write

	if (value !== undefined && !typeof value === 'function') {
		options = extend(extend({}, _cookie.defaults, true), options);

		if (typeof options.expires === 'number') {
			var days = options.expires,
				t = options.expires = new Date();
			t.setTime(+t + days * 864e+5);
		}

		return (document.cookie = [
			encode(key), '=', stringifyCookieValue(value),
			options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
			options.path ? '; path=' + options.path : '',
			options.domain ? '; domain=' + options.domain : '',
			options.secure ? '; secure' : ''
		].join(''));
	}

	// Read

	var result = key ? undefined : {};

	// To prevent the for loop in the first place assign an empty array
	// in case there are no cookies at all. Also prevents odd result when
	// calling cookie().
	var cookies = document.cookie ? document.cookie.split('; ') : [];

	for (var i = 0, l = cookies.length; i < l; i++) {
		var parts = cookies[i].split('=');
		var name = decode(parts.shift());
		var cookie = parts.join('=');

		if (key && key === name) {
			// If second argument (value) is a function it's a converter...
			result = read(cookie, value);
			break;
		}

		// Prevent storing a cookie that we couldn't decode.
		if (!key && (cookie = read(cookie)) !== undefined) {
			result[name] = cookie;
		}
	}

	return result;
};

_cookie.defaults = {};

_cookie.remove = function (key, options) {
	if (_cookie(key) === undefined) {
		return false;
	}

	// Must not alter options, thus extending a fresh object...
	_cookie(key, '', extend(options || {}, {
		expires: -1
	}));
	return !_cookie(key);
};

_cookie.hasOwnProperty = function (key) {
	return (new RegExp("(?:^|;\\s*)" + escape(key).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(document.cookie);
}

_cookie.key = function (n) {
	return unescape(document.cookie.replace(/\s*\=(?:.(?!;))*$/, "").split(/\s*\=(?:[^;](?!;))*[^;]?;\s*/)[n]);
}

module.exports = _cookie;

/***/ }),

/***/ "./ClientApp/modules/utils.extend.js":
/*!*******************************************!*\
  !*** ./ClientApp/modules/utils.extend.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = extend;

/**
 * 扩展方法
 * @param {Object} target 目标对象。 
 * @param {Object} source 源对象。 
 * @param {boolean} deep 是否复制(继承)对象中的对象。 
 * @returns {Object} 返回继承了source对象属性的新对象。 
 */
function extend(target, /*optional*/ source, /*optional*/ deep) {
    target = target || {};
    var sType = typeof source,
        i = 1,
        options;
    if (sType === 'undefined' || sType === 'boolean') {
        deep = sType === 'boolean' ? source : false;
        source = target;
        target = this;
    }
    if (typeof source !== 'object' && Object.prototype.toString.call(source) !== '[object Function]')
        source = {};
    while (i <= 2) {
        options = i === 1 ? target : source;
        if (options != null) {
            for (var name in options) {
                var src = target[name],
                    copy = options[name];
                if (target === copy)
                    continue;
                if (deep && copy && typeof copy === 'object' && !copy.nodeType)
                    target[name] = extend(src || (copy.length != null ? [] : {}), copy, deep);
                else if (copy !== undefined)
                    target[name] = copy;
            }
        }
        i++;
    }
    return target;
}

/***/ }),

/***/ "./ClientApp/modules/utils.js":
/*!************************************!*\
  !*** ./ClientApp/modules/utils.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var extend = __webpack_require__(/*! ./utils.extend */ "./ClientApp/modules/utils.extend.js");
var cacheManager = __webpack_require__(/*! ./utils.cache */ "./ClientApp/modules/utils.cache.js");
module.exports = {
    extend: extend,
    isDOM: isDOM,
    ObjectCache: cacheManager,
    formatDate: formatDate,
    getQueryString: getQueryString,
    cutstr: cutstr,
    getMarketCode: getMarketCode,
    getStockStatus: getStockStatus,
    getColor: getColor,
    fixMarket: fixMarket,
    numbericFormat: numbericFormat,
    blinker: blinker,
    toFixedFun: toFixedFun ,
    addPercent: addPercent
};


/** 
 * js截取字符串，中英文都能用 
 * @param {string} str: 需要截取的字符串 
 * @param {number} len: 需要截取的长度
 * @param {string} ellipsis: 溢出文字
 * @returns {string} 截取后的字符串
 */
function cutstr(str, len, ellipsis) {
    if (typeof ellipsis != "string") ellipsis = "...";
    var str_length = 0;
    var str_len = 0;
    str_cut = new String();
    for (var i = 0; i < str.length; i++) {
        a = str.charAt(i);
        str_length++;
        if (escape(a).length > 4) {
            //中文字符的长度经编码之后大于4  
            str_length++;
        }
        //str_cut = str_cut.concat(a);
        if (str_length <= len) {
            str_len++;
        }
    }
    //如果给定字符串小于指定长度，则返回源字符串；  
    if (str_length <= len) {
        return str.toString();
    } else {
        return str.substr(0, str_len).concat(ellipsis);
    }
}

/**
 * 格式化时间
 * @param {String|Date} date 时间
 * @param {string} fmt 时间格式
 * @param {string} 默认值
 * @returns {string} 格式化时间
 */
function formatDate(date, fmt, dft) {
    fmt = fmt || "yyyy-MM-dd HH:mm:ss"
    if (typeof date === "string")
        date = new Date(date.replace(/-/g, '/').replace('T', ' ').split('+')[0]);
    if (isNaN(date.getTime())) return dft || '';
    var o = {
        "M+": date.getMonth() + 1, //月份         
        "d+": date.getDate(), //日         
        "h+": date.getHours() % 12 == 0 ? 12 : date.getHours() % 12, //小时         
        "H+": date.getHours(), //小时         
        "m+": date.getMinutes(), //分         
        "s+": date.getSeconds(), //秒         
        "q+": Math.floor((date.getMonth() + 3) / 3), //季度         
        "S": date.getMilliseconds() //毫秒         
    };
    var week = {
        "0": "\u65e5",
        "1": "\u4e00",
        "2": "\u4e8c",
        "3": "\u4e09",
        "4": "\u56db",
        "5": "\u4e94",
        "6": "\u516d"
    };
    if (/(y+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
    }
    if (/(E+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? "\u661f\u671f" : "\u5468") : "") + week[date.getDay() + ""]);
    }
    for (var k in o) {
        if (new RegExp("(" + k + ")").test(fmt)) {
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        }
    }
    return fmt;
}

/**
 * unicode转中文字符串
 * @param {string} str unicode
 */
function reconvert(str) {
    str = str.replace(/(\\u)(\w{4})/gi, function ($0) {
        return (String.fromCharCode(parseInt((escape($0).replace(/(%5Cu)(\w{4})/g, "$2")), 16)));
    });

    str = str.replace(/(&#x)(\w{4});/gi, function ($0) {
        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23x)(\w{4})(%3B)/g, "$2"), 16));
    });
    return str;
}

/**
 * 获取链接地址中的参数
 * @param {string} name 参数名
 * @returns {string} 参数值
 */
function getQueryString(name) {
    var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');
    var r = window.location.search.substr(1).match(reg);
    if (r != null) {
        return unescape(r[2]);
    }
    return null;
}

/**
 * (弃用的)根据股票代码获取股票名称
 * @param {string} code 
 * @returns {"1"|"2"} 市场代码，上海1，深圳2
 */
function getMarketCode(code) {
    var i = sc.substring(0, 1);
    var j = sc.substring(0, 3);
    if (i == "5" || i == "6" || i == "9") {
        return "1"; //上证股票
    } else {
        if (j == "009" || j == "126" || j == "110") {
            return "1"; //上证股票
        } else {
            return "2"; //深圳股票
        }
    }
}

/**
 * 根据数据获取颜色样式
 * @returns {"red"|"green"|""} 颜色样式
 */
function getColor() {
    var num = 0;
    if (arguments[1]) {
        num = parseFloat(arguments[0]) - parseFloat(arguments[1]);
    } else if (arguments[0]) {
        num = parseFloat(arguments[0]);
    }
    return num > 0 ? "red" : num < 0 ? "green" : "";
}

/**
 * 个股状态
 * @param {number} code 代码
 * @returns {string} 状态
 */
function getStockStatus(code) {
    var status = parseInt(code);
    switch (status) {
        case -2:
            return "额度不可用";
        case -1:
            return "已停牌";
        case 0:
            return "额度可用";
        case 1:
            return "已收盘";
        case 2:
            return "午盘";
        case 3:
            return "休市";
        case 4:
            return "早盘清空";
        case 5:
            return "限制买入";
        case 6:
            return "限制卖出";
        case 7:
            return "暂停交易";
        case 8:
            return "上涨熔断5%";
        case 9:
            return "上涨熔断7%";
        case 10:
            return "下跌熔断5%";
        case 11:
            return "下跌熔断7%";
        default:
            return "不存在/额度不可用";
    }
};

/**
 * 判断对象是否为dom
 * @param {object} obj 对象
 * @returns {Boolean} true表示是dom对象，否则不是
 */
function isDOM(obj) {
    //首先要对HTMLElement进行类型检查，因为即使在支持HTMLElement
    //的浏览器中，类型却是有差别的，在Chrome,Opera中HTMLElement的
    //类型为function，此时就不能用它来判断了
    if (typeof HTMLElement === 'object') {
        return obj instanceof HTMLElement;
    } else {
        return obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string';
    }
}

/**
 * 科学计数格式化数据(加单位)
 * @param {string|number} data 数据
 * @returns {string} 格式化结果
 */
function numbericFormat(data) {
    var item = parseFloat(data);
    if (!isNaN(item)) {
        var symbol = item < 0 ? -1 : item > 0 ? 1 : 0;
        if (item < 0) item = item * -1;
        if ((item > 0 && item < 1e4) || (item < 0 && item > -1e4)) {
            return (item * symbol).toString();
        } else if ((item > 0 && item < 1e6) || (item < 0 && item > -1e6)) {
            item = item / 10000;
            return item.toFixed(2) * symbol + "万";
        } else if ((item > 0 && item < 1e7) || (item < 0 && item > -1e7)) {
            item = item / 10000;
            return item.toFixed(1) * symbol + "万";
        } else if ((item > 0 && item < 1e8) || (item < 0 && item > -1e8)) {
            item = item / 10000;
            return item.toFixed(0) * symbol + "万";
        } else if ((item > 0 && item < 1e10) || (item < 0 && item > -1e10)) {
            item = item / 1e8;
            return item.toFixed(2) * symbol + "亿";
        } else if ((item > 0 && item < 1e11) || (item < 0 && item > -1e11)) {
            item = item / 1e8;
            return item.toFixed(1) * symbol + "亿";
        } else if ((item > 0 && item < 1e12) || (item < 0 && item > -1e12)) {
            item = item / 1e8;
            return item.toFixed(0) * symbol + "亿";
        } else if ((item > 0 && item < 1e14) || (item < 0 && item > -1e14)) {
            item = item / 1e12;
            return item.toFixed(2) + "万亿";
        } else if ((item > 0 && item < 1e15) || (item < 0 && item > -1e15)) {
            item = item / 1e12;
            return item.toFixed(1) * symbol + "万亿";
        } else if ((item > 0 && item < 1e16) || (item < 0 && item > -1e16)) {
            item = item / 1e12;
            return item.toFixed(0) * symbol + "万亿";
        } else {
            return item;
        }
    }
    return '-';
}

/**
 * 添加百分号
 * 
 */
function addPercent(vs) {
    var num = parseFloat(vs), item;
    if (num == 0) {
        item = num.toFixed(2) + "%";
    } else if (num) {
        item = num.toFixed(2) + "%";
    } else {
        item = vs;
    }
    return item
}

/**
 * 保留两位小数
 * 
 */
 function toFixedFun(vs, tfx) {
    var num = parseFloat(vs), item = "-";
    var tofixed = tfx ? tfx : 2;
    if (num >= 0 || num <= 0) {
        item = num.toFixed(tofixed);
    }
    return item;
}

/**
 * 闪烁器
 * @param {object} options 配置
 */
function blinker(options) {
    var _opt = extend({
        doms: [],
        color: {
            up: ["#FFDDDD", "#FFEEEE", ""], //红
            down: ["#b4f7af", "#ccffcc", ""], //绿
            others: ["#b2c3ea", "#cedaf5", ""] //浅蓝
        },
        interval: 300,
        blinktime: 150, //每帧时间 毫秒
        circle: 2 //闪烁次数
    }, options);
    var instance = this;
    instance.raise = false, instance.loop = 0;
    var tid;
    var _doms = [];
    for (var i = 0; i < _opt.doms.length; i++) {
        var obj = _opt.doms[i];
        if (isDOM(obj)) _doms.push(obj);
        else if (typeof _opt.doms[i] === "string") {
            obj = mini(_opt.doms[i]);
            if (obj) _doms.push(obj);
        }
    }
    tid = setInterval(function () {
        if (!instance.raise) return;
        var color = instance.comparer > 0 ? _opt.color.up : instance.comparer < 0 ?
            _opt.color.down : _opt.color.others;
        for (var i = 0; i < color.length * _opt.circle; i++) {
            setTimeout(function () {
                for (var i = 0; i < _doms.length; i++) {
                    _doms[i].style["background-color"] = color[instance.loop];
                    //_options.doms[i].css("background-color", color[instance.loop]);
                }
                instance.loop++;
                instance.loop = instance.loop % color.length;
            }, _opt.blinktime * i);
        }
        instance.raise = false;
    }, _opt.interval);
    this.stop = function () {
        clearInterval(tid);
    }
}

function fixMarket(code) {
    var one = code.substr(0, 1);
    var three = code.substr(0, 3);
    if (one == "5" || one == "6" || one == "9") {
        //上证股票
        return "1";
    } else {
        if (three == "009" || three == "126" || three == "110" || three == "201" || three == "202" || three == "203" || three == "204") {
            //上证股票
            return "1";
        } else {
            //深圳股票
            return "2";
        }
    }
}




Number.prototype.toFixedFit = function (num) {
    var s = this.toPrecision(num + 1);
    return s.substr(0, s.indexOf('.') + num);
}

String.prototype.cutstr = function (len, ellipsis) {
    return cutstr(this, len, ellipsis);
}

/**
 * 判断数据是否为正数
 * @returns {boolen} true表示正数,false表示负数,NaN表示非数字
 */
String.prototype.isPositive = function () {
    var context = this;
    if (typeof (context).toLowerCase() === "string") {
        context = context.replace("%", "");
        var regNum = new RegExp("^([\\-\\+]?\\d+(\\.\\d+)?)$");
        if (regNum.test(context)) {
            var reg = new RegExp("^-");
            return !reg.test(context);
        } else return Number.NaN;
    }
}

String.prototype.numbericFormat = function () {
    return numbericFormat(this.toString());
}

Date.prototype.pattern = function (format) {
    return formatDate(this, format);
}

/***/ }),

/***/ "./ClientApp/readomNum/index.js":
/*!**************************************!*\
  !*** ./ClientApp/readomNum/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {


//生成1-99的随机数
module.exports = function () {
    return Math.floor(Math.random()*100+1)
}

/***/ }),

/***/ "./ClientApp/templates sync recursive gridlist\\.art$":
/*!*************************************************!*\
  !*** ./ClientApp/templates sync gridlist\.art$ ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = "./ClientApp/templates sync recursive gridlist\\.art$";

/***/ }),

/***/ "./ClientApp/user/index.js":
/*!*********************************!*\
  !*** ./ClientApp/user/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * 用户信息
 */

var cookie = __webpack_require__(/*! ../cookie/ */ "./ClientApp/cookie/index.js");

/**
 * 用户
 */
var user = {
    /**
     * 获取用户信息
     */
    get: function(){
        if (cookie.get('ut') && cookie.get('ct') && cookie.get('uidal')) {
            
            //获取加v信息
            var jiav = {vtype:null, state: null, name: ''};
            if (cookie.get('vtpst') && cookie.get('vtpst') != '|') {
                var jiavarr = cookie.get('vtpst').split('|');
                if( jiavarr.length > 1 ){
                    //console.info(typeof jiavarr[0]);
                    if (jiavarr[1] == "0" || jiavarr[1] == "3") {
                        switch (jiavarr[0]) {
                            case "301":
                                jiav.vtype = 1;
                                jiav.name = '理财师';
                                break;
                            case "302":
                                jiav.vtype = 2;
                                jiav.name = '非理财师';
                                break;
                            case "303":
                                jiav.vtype = 3;
                                jiav.name = '企业';
                                break;
                            default:
                                break;
                        }
                    }

                    switch (jiavarr[1]) {
                        case "0":
                            jiav.state = 0; //审核通过
                            break;                        
                        case "1":
                            jiav.state = 11; //审核未通过
                            break;
                        case "2":
                            jiav.state = 12; //审核中
                            break;
                        case "3":
                            jiav.state = 13; //加v用户修改审核
                            break;
                        case "8":
                            jiav.state = 18; //加v用户修改审核
                            break;
                        case "9":
                            jiav.state = 19; //加v用户修改审核
                            break;
                        default:
                            break;
                    }
                    
                    //console.info(jiav);

                }
            }
            
            return {
              id: cookie.get('uidal').substring(0,16),
              nick: cookie.get('uidal').substring(16),
              jiav: jiav
            };
        }
        return null; 
    },
    /**
     * 退出登录
     * @param  {function} 退出之后回调
     */
    logOut: function (callback) {
        var date = new Date();
        document.cookie = "pi=;path=/;domain=eastmoney.com;expires=" + date.toGMTString();
        document.cookie = "ct=;path=/;domain=eastmoney.com;expires=" + date.toGMTString();
        document.cookie = "ut=;path=/;domain=eastmoney.com;expires=" + date.toGMTString();
        document.cookie = "uidal=;path=/;domain=eastmoney.com;expires=" + date.toGMTString();
        if (callback) {
            callback();
        }
    },
    isLogin: function (){
        if( this.get() ){
            return true;
        }
        else{
            return false;
        }
    }
};

module.exports = user;





/***/ }),

/***/ "./node_modules/datatables.net-select/js/dataTables.select.js":
/*!********************************************************************!*\
  !*** ./node_modules/datatables.net-select/js/dataTables.select.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! Select for DataTables 1.3.1
 * 2015-2019 SpryMedia Ltd - datatables.net/license/mit
 */

/**
 * @summary     Select for DataTables
 * @description A collection of API methods, events and buttons for DataTables
 *   that provides selection options of the items in a DataTable
 * @version     1.3.1
 * @file        dataTables.select.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     datatables.net/forums
 * @copyright   Copyright 2015-2019 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net/extensions/select
 */
(function( factory ){
	if ( true ) {
		// AMD
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "jquery"), __webpack_require__(/*! datatables.net */ "./node_modules/datatables.net/js/jquery.dataTables.js")], __WEBPACK_AMD_DEFINE_RESULT__ = (function ( $ ) {
			return factory( $, window, document );
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}
	else {}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


// Version information for debugger
DataTable.select = {};

DataTable.select.version = '1.3.1';

DataTable.select.init = function ( dt ) {
	var ctx = dt.settings()[0];
	var init = ctx.oInit.select;
	var defaults = DataTable.defaults.select;
	var opts = init === undefined ?
		defaults :
		init;

	// Set defaults
	var items = 'row';
	var style = 'api';
	var blurable = false;
	var toggleable = true;
	var info = true;
	var selector = 'td, th';
	var className = 'selected';
	var setStyle = false;

	ctx._select = {};

	// Initialisation customisations
	if ( opts === true ) {
		style = 'os';
		setStyle = true;
	}
	else if ( typeof opts === 'string' ) {
		style = opts;
		setStyle = true;
	}
	else if ( $.isPlainObject( opts ) ) {
		if ( opts.blurable !== undefined ) {
			blurable = opts.blurable;
		}
		
		if ( opts.toggleable !== undefined ) {
			toggleable = opts.toggleable;
		}

		if ( opts.info !== undefined ) {
			info = opts.info;
		}

		if ( opts.items !== undefined ) {
			items = opts.items;
		}

		if ( opts.style !== undefined ) {
			style = opts.style;
			setStyle = true;
		}
		else {
			style = 'os';
			setStyle = true;
		}

		if ( opts.selector !== undefined ) {
			selector = opts.selector;
		}

		if ( opts.className !== undefined ) {
			className = opts.className;
		}
	}

	dt.select.selector( selector );
	dt.select.items( items );
	dt.select.style( style );
	dt.select.blurable( blurable );
	dt.select.toggleable( toggleable );
	dt.select.info( info );
	ctx._select.className = className;


	// Sort table based on selected rows. Requires Select Datatables extension
	$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {
		return this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {
			if ( settings._select.items === 'row' ) {
				return $( td ).parent().hasClass( settings._select.className );
			} else if ( settings._select.items === 'cell' ) {
				return $( td ).hasClass( settings._select.className );
			}
			return false;
		});
	};

	// If the init options haven't enabled select, but there is a selectable
	// class name, then enable
	if ( ! setStyle && $( dt.table().node() ).hasClass( 'selectable' ) ) {
		dt.select.style( 'os' );
	}
};

/*

Select is a collection of API methods, event handlers, event emitters and
buttons (for the `Buttons` extension) for DataTables. It provides the following
features, with an overview of how they are implemented:

## Selection of rows, columns and cells. Whether an item is selected or not is
   stored in:

* rows: a `_select_selected` property which contains a boolean value of the
  DataTables' `aoData` object for each row
* columns: a `_select_selected` property which contains a boolean value of the
  DataTables' `aoColumns` object for each column
* cells: a `_selected_cells` property which contains an array of boolean values
  of the `aoData` object for each row. The array is the same length as the
  columns array, with each element of it representing a cell.

This method of using boolean flags allows Select to operate when nodes have not
been created for rows / cells (DataTables' defer rendering feature).

## API methods

A range of API methods are available for triggering selection and de-selection
of rows. Methods are also available to configure the selection events that can
be triggered by an end user (such as which items are to be selected). To a large
extent, these of API methods *is* Select. It is basically a collection of helper
functions that can be used to select items in a DataTable.

Configuration of select is held in the object `_select` which is attached to the
DataTables settings object on initialisation. Select being available on a table
is not optional when Select is loaded, but its default is for selection only to
be available via the API - so the end user wouldn't be able to select rows
without additional configuration.

The `_select` object contains the following properties:

```
{
	items:string       - Can be `rows`, `columns` or `cells`. Defines what item 
	                     will be selected if the user is allowed to activate row
	                     selection using the mouse.
	style:string       - Can be `none`, `single`, `multi` or `os`. Defines the
	                     interaction style when selecting items
	blurable:boolean   - If row selection can be cleared by clicking outside of
	                     the table
	toggleable:boolean - If row selection can be cancelled by repeated clicking
	                     on the row
	info:boolean       - If the selection summary should be shown in the table
	                     information elements
}
```

In addition to the API methods, Select also extends the DataTables selector
options for rows, columns and cells adding a `selected` option to the selector
options object, allowing the developer to select only selected items or
unselected items.

## Mouse selection of items

Clicking on items can be used to select items. This is done by a simple event
handler that will select the items using the API methods.

 */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local functions
 */

/**
 * Add one or more cells to the selection when shift clicking in OS selection
 * style cell selection.
 *
 * Cell range is more complicated than row and column as we want to select
 * in the visible grid rather than by index in sequence. For example, if you
 * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1
 * should also be selected (and not 1-3, 1-4. etc)
 * 
 * @param  {DataTable.Api} dt   DataTable
 * @param  {object}        idx  Cell index to select to
 * @param  {object}        last Cell index to select from
 * @private
 */
function cellRange( dt, idx, last )
{
	var indexes;
	var columnIndexes;
	var rowIndexes;
	var selectColumns = function ( start, end ) {
		if ( start > end ) {
			var tmp = end;
			end = start;
			start = tmp;
		}
		
		var record = false;
		return dt.columns( ':visible' ).indexes().filter( function (i) {
			if ( i === start ) {
				record = true;
			}
			
			if ( i === end ) { // not else if, as start might === end
				record = false;
				return true;
			}

			return record;
		} );
	};

	var selectRows = function ( start, end ) {
		var indexes = dt.rows( { search: 'applied' } ).indexes();

		// Which comes first - might need to swap
		if ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {
			var tmp = end;
			end = start;
			start = tmp;
		}

		var record = false;
		return indexes.filter( function (i) {
			if ( i === start ) {
				record = true;
			}
			
			if ( i === end ) {
				record = false;
				return true;
			}

			return record;
		} );
	};

	if ( ! dt.cells( { selected: true } ).any() && ! last ) {
		// select from the top left cell to this one
		columnIndexes = selectColumns( 0, idx.column );
		rowIndexes = selectRows( 0 , idx.row );
	}
	else {
		// Get column indexes between old and new
		columnIndexes = selectColumns( last.column, idx.column );
		rowIndexes = selectRows( last.row , idx.row );
	}

	indexes = dt.cells( rowIndexes, columnIndexes ).flatten();

	if ( ! dt.cells( idx, { selected: true } ).any() ) {
		// Select range
		dt.cells( indexes ).select();
	}
	else {
		// Deselect range
		dt.cells( indexes ).deselect();
	}
}

/**
 * Disable mouse selection by removing the selectors
 *
 * @param {DataTable.Api} dt DataTable to remove events from
 * @private
 */
function disableMouseSelection( dt )
{
	var ctx = dt.settings()[0];
	var selector = ctx._select.selector;

	$( dt.table().container() )
		.off( 'mousedown.dtSelect', selector )
		.off( 'mouseup.dtSelect', selector )
		.off( 'click.dtSelect', selector );

	$('body').off( 'click.dtSelect' + _safeId(dt.table().node()) );
}

/**
 * Attach mouse listeners to the table to allow mouse selection of items
 *
 * @param {DataTable.Api} dt DataTable to remove events from
 * @private
 */
function enableMouseSelection ( dt )
{
	var container = $( dt.table().container() );
	var ctx = dt.settings()[0];
	var selector = ctx._select.selector;
	var matchSelection;

	container
		.on( 'mousedown.dtSelect', selector, function(e) {
			// Disallow text selection for shift clicking on the table so multi
			// element selection doesn't look terrible!
			if ( e.shiftKey || e.metaKey || e.ctrlKey ) {
				container
					.css( '-moz-user-select', 'none' )
					.one('selectstart.dtSelect', selector, function () {
						return false;
					} );
			}

			if ( window.getSelection ) {
				matchSelection = window.getSelection();
			}
		} )
		.on( 'mouseup.dtSelect', selector, function() {
			// Allow text selection to occur again, Mozilla style (tested in FF
			// 35.0.1 - still required)
			container.css( '-moz-user-select', '' );
		} )
		.on( 'click.dtSelect', selector, function ( e ) {
			var items = dt.select.items();
			var idx;

			// If text was selected (click and drag), then we shouldn't change
			// the row's selected state
			if ( matchSelection ) {
				var selection = window.getSelection();

				// If the element that contains the selection is not in the table, we can ignore it
				// This can happen if the developer selects text from the click event
				if ( ! selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node() ) {
					if ( selection !== matchSelection ) {
						return;
					}
				}
			}

			var ctx = dt.settings()[0];
			var wrapperClass = $.trim(dt.settings()[0].oClasses.sWrapper).replace(/ +/g, '.');

			// Ignore clicks inside a sub-table
			if ( $(e.target).closest('div.'+wrapperClass)[0] != dt.table().container() ) {
				return;
			}

			var cell = dt.cell( $(e.target).closest('td, th') );

			// Check the cell actually belongs to the host DataTable (so child
			// rows, etc, are ignored)
			if ( ! cell.any() ) {
				return;
			}

			var event = $.Event('user-select.dt');
			eventTrigger( dt, event, [ items, cell, e ] );

			if ( event.isDefaultPrevented() ) {
				return;
			}

			var cellIndex = cell.index();
			if ( items === 'row' ) {
				idx = cellIndex.row;
				typeSelect( e, dt, ctx, 'row', idx );
			}
			else if ( items === 'column' ) {
				idx = cell.index().column;
				typeSelect( e, dt, ctx, 'column', idx );
			}
			else if ( items === 'cell' ) {
				idx = cell.index();
				typeSelect( e, dt, ctx, 'cell', idx );
			}

			ctx._select_lastCell = cellIndex;
		} );

	// Blurable
	$('body').on( 'click.dtSelect' + _safeId(dt.table().node()), function ( e ) {
		if ( ctx._select.blurable ) {
			// If the click was inside the DataTables container, don't blur
			if ( $(e.target).parents().filter( dt.table().container() ).length ) {
				return;
			}

			// Ignore elements which have been removed from the DOM (i.e. paging
			// buttons)
			if ( $(e.target).parents('html').length === 0 ) {
			 	return;
			}

			// Don't blur in Editor form
			if ( $(e.target).parents('div.DTE').length ) {
				return;
			}

			clear( ctx, true );
		}
	} );
}

/**
 * Trigger an event on a DataTable
 *
 * @param {DataTable.Api} api      DataTable to trigger events on
 * @param  {boolean}      selected true if selected, false if deselected
 * @param  {string}       type     Item type acting on
 * @param  {boolean}      any      Require that there are values before
 *     triggering
 * @private
 */
function eventTrigger ( api, type, args, any )
{
	if ( any && ! api.flatten().length ) {
		return;
	}

	if ( typeof type === 'string' ) {
		type = type +'.dt';
	}

	args.unshift( api );

	$(api.table().node()).trigger( type, args );
}

/**
 * Update the information element of the DataTable showing information about the
 * items selected. This is done by adding tags to the existing text
 * 
 * @param {DataTable.Api} api DataTable to update
 * @private
 */
function info ( api )
{
	var ctx = api.settings()[0];

	if ( ! ctx._select.info || ! ctx.aanFeatures.i ) {
		return;
	}

	if ( api.select.style() === 'api' ) {
		return;
	}

	var rows    = api.rows( { selected: true } ).flatten().length;
	var columns = api.columns( { selected: true } ).flatten().length;
	var cells   = api.cells( { selected: true } ).flatten().length;

	var add = function ( el, name, num ) {
		el.append( $('<span class="select-item"/>').append( api.i18n(
			'select.'+name+'s',
			{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },
			num
		) ) );
	};

	// Internal knowledge of DataTables to loop over all information elements
	$.each( ctx.aanFeatures.i, function ( i, el ) {
		el = $(el);

		var output  = $('<span class="select-info"/>');
		add( output, 'row', rows );
		add( output, 'column', columns );
		add( output, 'cell', cells  );

		var exisiting = el.children('span.select-info');
		if ( exisiting.length ) {
			exisiting.remove();
		}

		if ( output.text() !== '' ) {
			el.append( output );
		}
	} );
}

/**
 * Initialisation of a new table. Attach event handlers and callbacks to allow
 * Select to operate correctly.
 *
 * This will occur _after_ the initial DataTables initialisation, although
 * before Ajax data is rendered, if there is ajax data
 *
 * @param  {DataTable.settings} ctx Settings object to operate on
 * @private
 */
function init ( ctx ) {
	var api = new DataTable.Api( ctx );

	// Row callback so that classes can be added to rows and cells if the item
	// was selected before the element was created. This will happen with the
	// `deferRender` option enabled.
	// 
	// This method of attaching to `aoRowCreatedCallback` is a hack until
	// DataTables has proper events for row manipulation If you are reviewing
	// this code to create your own plug-ins, please do not do this!
	ctx.aoRowCreatedCallback.push( {
		fn: function ( row, data, index ) {
			var i, ien;
			var d = ctx.aoData[ index ];

			// Row
			if ( d._select_selected ) {
				$( row ).addClass( ctx._select.className );
			}

			// Cells and columns - if separated out, we would need to do two
			// loops, so it makes sense to combine them into a single one
			for ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {
				if ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {
					$(d.anCells[i]).addClass( ctx._select.className );
				}
			}
		},
		sName: 'select-deferRender'
	} );

	// On Ajax reload we want to reselect all rows which are currently selected,
	// if there is an rowId (i.e. a unique value to identify each row with)
	api.on( 'preXhr.dt.dtSelect', function () {
		// note that column selection doesn't need to be cached and then
		// reselected, as they are already selected
		var rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {
			return d !== undefined;
		} );

		var cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {
			var id = api.row( cellIdx.row ).id( true );
			return id ?
				{ row: id, column: cellIdx.column } :
				undefined;
		} ).filter( function ( d ) {
			return d !== undefined;
		} );

		// On the next draw, reselect the currently selected items
		api.one( 'draw.dt.dtSelect', function () {
			api.rows( rows ).select();

			// `cells` is not a cell index selector, so it needs a loop
			if ( cells.any() ) {
				cells.each( function ( id ) {
					api.cells( id.row, id.column ).select();
				} );
			}
		} );
	} );

	// Update the table information element with selected item summary
	api.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {
		info( api );
	} );

	// Clean up and release
	api.on( 'destroy.dtSelect', function () {
		disableMouseSelection( api );
		api.off( '.dtSelect' );
	} );
}

/**
 * Add one or more items (rows or columns) to the selection when shift clicking
 * in OS selection style
 *
 * @param  {DataTable.Api} dt   DataTable
 * @param  {string}        type Row or column range selector
 * @param  {object}        idx  Item index to select to
 * @param  {object}        last Item index to select from
 * @private
 */
function rowColumnRange( dt, type, idx, last )
{
	// Add a range of rows from the last selected row to this one
	var indexes = dt[type+'s']( { search: 'applied' } ).indexes();
	var idx1 = $.inArray( last, indexes );
	var idx2 = $.inArray( idx, indexes );

	if ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {
		// select from top to here - slightly odd, but both Windows and Mac OS
		// do this
		indexes.splice( $.inArray( idx, indexes )+1, indexes.length );
	}
	else {
		// reverse so we can shift click 'up' as well as down
		if ( idx1 > idx2 ) {
			var tmp = idx2;
			idx2 = idx1;
			idx1 = tmp;
		}

		indexes.splice( idx2+1, indexes.length );
		indexes.splice( 0, idx1 );
	}

	if ( ! dt[type]( idx, { selected: true } ).any() ) {
		// Select range
		dt[type+'s']( indexes ).select();
	}
	else {
		// Deselect range - need to keep the clicked on row selected
		indexes.splice( $.inArray( idx, indexes ), 1 );
		dt[type+'s']( indexes ).deselect();
	}
}

/**
 * Clear all selected items
 *
 * @param  {DataTable.settings} ctx Settings object of the host DataTable
 * @param  {boolean} [force=false] Force the de-selection to happen, regardless
 *     of selection style
 * @private
 */
function clear( ctx, force )
{
	if ( force || ctx._select.style === 'single' ) {
		var api = new DataTable.Api( ctx );
		
		api.rows( { selected: true } ).deselect();
		api.columns( { selected: true } ).deselect();
		api.cells( { selected: true } ).deselect();
	}
}

/**
 * Select items based on the current configuration for style and items.
 *
 * @param  {object}             e    Mouse event object
 * @param  {DataTables.Api}     dt   DataTable
 * @param  {DataTable.settings} ctx  Settings object of the host DataTable
 * @param  {string}             type Items to select
 * @param  {int|object}         idx  Index of the item to select
 * @private
 */
function typeSelect ( e, dt, ctx, type, idx )
{
	var style = dt.select.style();
	var toggleable = dt.select.toggleable();
	var isSelected = dt[type]( idx, { selected: true } ).any();
	
	if ( isSelected && ! toggleable ) {
		return;
	}

	if ( style === 'os' ) {
		if ( e.ctrlKey || e.metaKey ) {
			// Add or remove from the selection
			dt[type]( idx ).select( ! isSelected );
		}
		else if ( e.shiftKey ) {
			if ( type === 'cell' ) {
				cellRange( dt, idx, ctx._select_lastCell || null );
			}
			else {
				rowColumnRange( dt, type, idx, ctx._select_lastCell ?
					ctx._select_lastCell[type] :
					null
				);
			}
		}
		else {
			// No cmd or shift click - deselect if selected, or select
			// this row only
			var selected = dt[type+'s']( { selected: true } );

			if ( isSelected && selected.flatten().length === 1 ) {
				dt[type]( idx ).deselect();
			}
			else {
				selected.deselect();
				dt[type]( idx ).select();
			}
		}
	} else if ( style == 'multi+shift' ) {
		if ( e.shiftKey ) {
			if ( type === 'cell' ) {
				cellRange( dt, idx, ctx._select_lastCell || null );
			}
			else {
				rowColumnRange( dt, type, idx, ctx._select_lastCell ?
					ctx._select_lastCell[type] :
					null
				);
			}
		}
		else {
			dt[ type ]( idx ).select( ! isSelected );
		}
	}
	else {
		dt[ type ]( idx ).select( ! isSelected );
	}
}

function _safeId( node ) {
	return node.id.replace(/[^a-zA-Z0-9\-\_]/g, '-');
}



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables selectors
 */

// row and column are basically identical just assigned to different properties
// and checking a different array, so we can dynamically create the functions to
// reduce the code size
$.each( [
	{ type: 'row', prop: 'aoData' },
	{ type: 'column', prop: 'aoColumns' }
], function ( i, o ) {
	DataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {
		var selected = opts.selected;
		var data;
		var out = [];

		if ( selected !== true && selected !== false ) {
			return indexes;
		}

		for ( var i=0, ien=indexes.length ; i<ien ; i++ ) {
			data = settings[ o.prop ][ indexes[i] ];

			if ( (selected === true && data._select_selected === true) ||
			     (selected === false && ! data._select_selected )
			) {
				out.push( indexes[i] );
			}
		}

		return out;
	} );
} );

DataTable.ext.selector.cell.push( function ( settings, opts, cells ) {
	var selected = opts.selected;
	var rowData;
	var out = [];

	if ( selected === undefined ) {
		return cells;
	}

	for ( var i=0, ien=cells.length ; i<ien ; i++ ) {
		rowData = settings.aoData[ cells[i].row ];

		if ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||
		     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )
		) {
			out.push( cells[i] );
		}
	}

	return out;
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables API
 *
 * For complete documentation, please refer to the docs/api directory or the
 * DataTables site
 */

// Local variables to improve compression
var apiRegister = DataTable.Api.register;
var apiRegisterPlural = DataTable.Api.registerPlural;

apiRegister( 'select()', function () {
	return this.iterator( 'table', function ( ctx ) {
		DataTable.select.init( new DataTable.Api( ctx ) );
	} );
} );

apiRegister( 'select.blurable()', function ( flag ) {
	if ( flag === undefined ) {
		return this.context[0]._select.blurable;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.blurable = flag;
	} );
} );

apiRegister( 'select.toggleable()', function ( flag ) {
	if ( flag === undefined ) {
		return this.context[0]._select.toggleable;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.toggleable = flag;
	} );
} );

apiRegister( 'select.info()', function ( flag ) {
	if ( info === undefined ) {
		return this.context[0]._select.info;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.info = flag;
	} );
} );

apiRegister( 'select.items()', function ( items ) {
	if ( items === undefined ) {
		return this.context[0]._select.items;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.items = items;

		eventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );
	} );
} );

// Takes effect from the _next_ selection. None disables future selection, but
// does not clear the current selection. Use the `deselect` methods for that
apiRegister( 'select.style()', function ( style ) {
	if ( style === undefined ) {
		return this.context[0]._select.style;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.style = style;

		if ( ! ctx._select_init ) {
			init( ctx );
		}

		// Add / remove mouse event handlers. They aren't required when only
		// API selection is available
		var dt = new DataTable.Api( ctx );
		disableMouseSelection( dt );
		
		if ( style !== 'api' ) {
			enableMouseSelection( dt );
		}

		eventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );
	} );
} );

apiRegister( 'select.selector()', function ( selector ) {
	if ( selector === undefined ) {
		return this.context[0]._select.selector;
	}

	return this.iterator( 'table', function ( ctx ) {
		disableMouseSelection( new DataTable.Api( ctx ) );

		ctx._select.selector = selector;

		if ( ctx._select.style !== 'api' ) {
			enableMouseSelection( new DataTable.Api( ctx ) );
		}
	} );
} );



apiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'row', function ( ctx, idx ) {
		clear( ctx );

		ctx.aoData[ idx ]._select_selected = true;
		$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'row', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'column', function ( ctx, idx ) {
		clear( ctx );

		ctx.aoColumns[ idx ]._select_selected = true;

		var column = new DataTable.Api( ctx ).column( idx );

		$( column.header() ).addClass( ctx._select.className );
		$( column.footer() ).addClass( ctx._select.className );

		column.nodes().to$().addClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'column', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {
		clear( ctx );

		var data = ctx.aoData[ rowIdx ];

		if ( data._selected_cells === undefined ) {
			data._selected_cells = [];
		}

		data._selected_cells[ colIdx ] = true;

		if ( data.anCells ) {
			$( data.anCells[ colIdx ] ).addClass( ctx._select.className );
		}
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'cell', api[i] ], true );
	} );

	return this;
} );


apiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {
	var api = this;

	this.iterator( 'row', function ( ctx, idx ) {
		ctx.aoData[ idx ]._select_selected = false;
		$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'row', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {
	var api = this;

	this.iterator( 'column', function ( ctx, idx ) {
		ctx.aoColumns[ idx ]._select_selected = false;

		var api = new DataTable.Api( ctx );
		var column = api.column( idx );

		$( column.header() ).removeClass( ctx._select.className );
		$( column.footer() ).removeClass( ctx._select.className );

		// Need to loop over each cell, rather than just using
		// `column().nodes()` as cells which are individually selected should
		// not have the `selected` class removed from them
		api.cells( null, idx ).indexes().each( function (cellIdx) {
			var data = ctx.aoData[ cellIdx.row ];
			var cellSelected = data._selected_cells;

			if ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {
				$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );
			}
		} );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'column', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {
	var api = this;

	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {
		var data = ctx.aoData[ rowIdx ];

		data._selected_cells[ colIdx ] = false;

		// Remove class only if the cells exist, and the cell is not column
		// selected, in which case the class should remain (since it is selected
		// in the column)
		if ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {
			$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );
		}
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'cell', api[i] ], true );
	} );

	return this;
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Buttons
 */
function i18n( label, def ) {
	return function (dt) {
		return dt.i18n( 'buttons.'+label, def );
	};
}

// Common events with suitable namespaces
function namespacedEvents ( config ) {
	var unique = config._eventNamespace;

	return 'draw.dt.DT'+unique+' select.dt.DT'+unique+' deselect.dt.DT'+unique;
}

function enabled ( dt, config ) {
	if ( $.inArray( 'rows', config.limitTo ) !== -1 && dt.rows( { selected: true } ).any() ) {
		return true;
	}

	if ( $.inArray( 'columns', config.limitTo ) !== -1 && dt.columns( { selected: true } ).any() ) {
		return true;
	}

	if ( $.inArray( 'cells', config.limitTo ) !== -1 && dt.cells( { selected: true } ).any() ) {
		return true;
	}

	return false;
}

var _buttonNamespace = 0;

$.extend( DataTable.ext.buttons, {
	selected: {
		text: i18n( 'selected', 'Selected' ),
		className: 'buttons-selected',
		limitTo: [ 'rows', 'columns', 'cells' ],
		init: function ( dt, node, config ) {
			var that = this;
			config._eventNamespace = '.select'+(_buttonNamespace++);

			// .DT namespace listeners are removed by DataTables automatically
			// on table destroy
			dt.on( namespacedEvents(config), function () {
				that.enable( enabled(dt, config) );
			} );

			this.disable();
		},
		destroy: function ( dt, node, config ) {
			dt.off( config._eventNamespace );
		}
	},
	selectedSingle: {
		text: i18n( 'selectedSingle', 'Selected single' ),
		className: 'buttons-selected-single',
		init: function ( dt, node, config ) {
			var that = this;
			config._eventNamespace = '.select'+(_buttonNamespace++);

			dt.on( namespacedEvents(config), function () {
				var count = dt.rows( { selected: true } ).flatten().length +
				            dt.columns( { selected: true } ).flatten().length +
				            dt.cells( { selected: true } ).flatten().length;

				that.enable( count === 1 );
			} );

			this.disable();
		},
		destroy: function ( dt, node, config ) {
			dt.off( config._eventNamespace );
		}
	},
	selectAll: {
		text: i18n( 'selectAll', 'Select all' ),
		className: 'buttons-select-all',
		action: function () {
			var items = this.select.items();
			this[ items+'s' ]().select();
		}
	},
	selectNone: {
		text: i18n( 'selectNone', 'Deselect all' ),
		className: 'buttons-select-none',
		action: function () {
			clear( this.settings()[0], true );
		},
		init: function ( dt, node, config ) {
			var that = this;
			config._eventNamespace = '.select'+(_buttonNamespace++);

			dt.on( namespacedEvents(config), function () {
				var count = dt.rows( { selected: true } ).flatten().length +
				            dt.columns( { selected: true } ).flatten().length +
				            dt.cells( { selected: true } ).flatten().length;

				that.enable( count > 0 );
			} );

			this.disable();
		},
		destroy: function ( dt, node, config ) {
			dt.off( config._eventNamespace );
		}
	}
} );

$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {
	var lc = item.toLowerCase();

	DataTable.ext.buttons[ 'select'+item+'s' ] = {
		text: i18n( 'select'+item+'s', 'Select '+lc+'s' ),
		className: 'buttons-select-'+lc+'s',
		action: function () {
			this.select.items( lc );
		},
		init: function ( dt ) {
			var that = this;

			dt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {
				that.active( items === lc );
			} );
		}
	};
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Initialisation
 */

// DataTables creation - check if select has been defined in the options. Note
// this required that the table be in the document! If it isn't then something
// needs to trigger this method unfortunately. The next major release of
// DataTables will rework the events and address this.
$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	DataTable.select.init( new DataTable.Api( ctx ) );
} );


return DataTable.select;
}));


/***/ }),

/***/ "./node_modules/datatables.net/js/jquery.dataTables.js":
/*!*************************************************************!*\
  !*** ./node_modules/datatables.net/js/jquery.dataTables.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! DataTables 1.10.21
 * ©2008-2020 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     DataTables
 * @description Paginate, search and order HTML tables
 * @version     1.10.21
 * @file        jquery.dataTables.js
 * @author      SpryMedia Ltd
 * @contact     www.datatables.net
 * @copyright   Copyright 2008-2020 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/

(function( factory ) {
	"use strict";

	if ( true ) {
		// AMD
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "jquery")], __WEBPACK_AMD_DEFINE_RESULT__ = (function ( $ ) {
			return factory( $, window, document );
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}
	else {}
}
(function( $, window, document, undefined ) {
	"use strict";

	/**
	 * DataTables is a plug-in for the jQuery Javascript library. It is a highly
	 * flexible tool, based upon the foundations of progressive enhancement,
	 * which will add advanced interaction controls to any HTML table. For a
	 * full list of features please refer to
	 * [DataTables.net](href="http://datatables.net).
	 *
	 * Note that the `DataTable` object is not a global variable but is aliased
	 * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may
	 * be  accessed.
	 *
	 *  @class
	 *  @param {object} [init={}] Configuration object for DataTables. Options
	 *    are defined by {@link DataTable.defaults}
	 *  @requires jQuery 1.7+
	 *
	 *  @example
	 *    // Basic initialisation
	 *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
	 *
	 *  @example
	 *    // Initialisation with configuration options - in this case, disable
	 *    // pagination and sorting.
	 *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
	 */
	var DataTable = function ( options )
	{
		/**
		 * Perform a jQuery selector action on the table's TR elements (from the tbody) and
		 * return the resulting jQuery object.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
		 *    criterion ("applied") or all TR elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {object} jQuery object, filtered by the given selector.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"search": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
		 */
		this.$ = function ( sSelector, oOpts )
		{
			return this.api(true).$( sSelector, oOpts );
		};
		
		
		/**
		 * Almost identical to $ in operation, but in this case returns the data for the matched
		 * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
		 * rather than any descendants, so the data can be obtained for the row/cell. If matching
		 * rows are found, the data returned is the original data array/object that was used to
		 * create the row (or a generated array if from a DOM source).
		 *
		 * This method is often useful in-combination with $ where both functions are given the
		 * same parameters and the array indexes will match identically.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
		 *    criterion ("applied") or all elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the data in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {array} Data for the matched elements. If any elements, as a result of the
		 *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
		 *    entry in the array.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"search": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the search" );
		 *    } );
		 */
		this._ = function ( sSelector, oOpts )
		{
			return this.api(true).rows( sSelector, oOpts ).data();
		};
		
		
		/**
		 * Create a DataTables Api instance, with the currently selected tables for
		 * the Api's context.
		 * @param {boolean} [traditional=false] Set the API instance's context to be
		 *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was
		 *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),
		 *   or if all tables captured in the jQuery object should be used.
		 * @return {DataTables.Api}
		 */
		this.api = function ( traditional )
		{
			return traditional ?
				new _Api(
					_fnSettingsFromNode( this[ _ext.iApiIndex ] )
				) :
				new _Api( this );
		};
		
		
		/**
		 * Add a single new row or multiple rows of data to the table. Please note
		 * that this is suitable for client-side processing only - if you are using
		 * server-side processing (i.e. "bServerSide": true), then to add data, you
		 * must add it to the data source, i.e. the server-side, through an Ajax call.
		 *  @param {array|object} data The data to be added to the table. This can be:
		 *    <ul>
		 *      <li>1D array of data - add a single row with the data provided</li>
		 *      <li>2D array of arrays - add multiple rows in a single call</li>
		 *      <li>object - data object when using <i>mData</i></li>
		 *      <li>array of objects - multiple data objects when using <i>mData</i></li>
		 *    </ul>
		 *  @param {bool} [redraw=true] redraw the table or not
		 *  @returns {array} An array of integers, representing the list of indexes in
		 *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
		 *    the table.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Global var for counter
		 *    var giCount = 2;
		 *
		 *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
		 *
		 *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
		 */
		this.fnAddData = function( data, redraw )
		{
			var api = this.api( true );
		
			/* Check if we want to add multiple rows or not */
			var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?
				api.rows.add( data ) :
				api.row.add( data );
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return rows.flatten().toArray();
		};
		
		
		/**
		 * This function will make DataTables recalculate the column sizes, based on the data
		 * contained in the table and the sizes applied to the columns (in the DOM, CSS or
		 * through the sWidth parameter). This can be useful when the width of the table's
		 * parent element changes (for example a window resize).
		 *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).on('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
		 */
		this.fnAdjustColumnSizing = function ( bRedraw )
		{
			var api = this.api( true ).columns.adjust();
			var settings = api.settings()[0];
			var scroll = settings.oScroll;
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw( false );
			}
			else if ( scroll.sX !== "" || scroll.sY !== "" ) {
				/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
				_fnScrollDraw( settings );
			}
		};
		
		
		/**
		 * Quickly and simply clear a table
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
		 */
		this.fnClearTable = function( bRedraw )
		{
			var api = this.api( true ).clear();
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
		};
		
		
		/**
		 * The exact opposite of 'opening' a row, this function will close any rows which
		 * are currently 'open'.
		 *  @param {node} nTr the table row to 'close'
		 *  @returns {int} 0 on success, or 1 if failed (can't find the row)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnClose = function( nTr )
		{
			this.api( true ).row( nTr ).child.hide();
		};
		
		
		/**
		 * Remove a row for the table
		 *  @param {mixed} target The index of the row from aoData to be deleted, or
		 *    the TR element you want to delete
		 *  @param {function|null} [callBack] Callback function
		 *  @param {bool} [redraw=true] Redraw the table or not
		 *  @returns {array} The row that was deleted
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
		 */
		this.fnDeleteRow = function( target, callback, redraw )
		{
			var api = this.api( true );
			var rows = api.rows( target );
			var settings = rows.settings()[0];
			var data = settings.aoData[ rows[0][0] ];
		
			rows.remove();
		
			if ( callback ) {
				callback.call( this, settings, data );
			}
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return data;
		};
		
		
		/**
		 * Restore the table to it's original state in the DOM by removing all of DataTables
		 * enhancements, alterations to the DOM structure of the table and event listeners.
		 *  @param {boolean} [remove=false] Completely remove the table from the DOM
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
		 */
		this.fnDestroy = function ( remove )
		{
			this.api( true ).destroy( remove );
		};
		
		
		/**
		 * Redraw the table
		 *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
		 */
		this.fnDraw = function( complete )
		{
			// Note that this isn't an exact match to the old call to _fnDraw - it takes
			// into account the new data, but can hold position.
			this.api( true ).draw( complete );
		};
		
		
		/**
		 * Filter the input based on data
		 *  @param {string} sInput String to filter the table on
		 *  @param {int|null} [iColumn] Column to limit filtering to
		 *  @param {bool} [bRegex=false] Treat as regular expression or not
		 *  @param {bool} [bSmart=true] Perform smart filtering or not
		 *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
		 *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
		 */
		this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )
		{
			var api = this.api( true );
		
			if ( iColumn === null || iColumn === undefined ) {
				api.search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
			else {
				api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
		
			api.draw();
		};
		
		
		/**
		 * Get the data for the whole table, an individual row or an individual cell based on the
		 * provided parameters.
		 *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as
		 *    a TR node then the data source for the whole row will be returned. If given as a
		 *    TD/TH cell node then iCol will be automatically calculated and the data for the
		 *    cell returned. If given as an integer, then this is treated as the aoData internal
		 *    data index for the row (see fnGetPosition) and the data for that row used.
		 *  @param {int} [col] Optional column index that you want the data of.
		 *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
		 *    returned. If mRow is defined, just data for that row, and is iCol is
		 *    defined, only data for the designated cell is returned.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Row data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Individual cell data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
		 */
		this.fnGetData = function( src, col )
		{
			var api = this.api( true );
		
			if ( src !== undefined ) {
				var type = src.nodeName ? src.nodeName.toLowerCase() : '';
		
				return col !== undefined || type == 'td' || type == 'th' ?
					api.cell( src, col ).data() :
					api.row( src ).data() || null;
			}
		
			return api.data().toArray();
		};
		
		
		/**
		 * Get an array of the TR nodes that are used in the table's body. Note that you will
		 * typically want to use the '$' API method in preference to this as it is more
		 * flexible.
		 *  @param {int} [iRow] Optional row index for the TR element you want
		 *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
		 *    in the table's body, or iRow is defined, just the TR element requested.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
		 */
		this.fnGetNodes = function( iRow )
		{
			var api = this.api( true );
		
			return iRow !== undefined ?
				api.row( iRow ).node() :
				api.rows().nodes().flatten().toArray();
		};
		
		
		/**
		 * Get the array indexes of a particular cell from it's DOM element
		 * and column index including hidden columns
		 *  @param {node} node this can either be a TR, TD or TH in the table's body
		 *  @returns {int} If nNode is given as a TR, then a single index is returned, or
		 *    if given as a cell, an array of [row index, column index (visible),
		 *    column index (all)] is given.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnGetPosition = function( node )
		{
			var api = this.api( true );
			var nodeName = node.nodeName.toUpperCase();
		
			if ( nodeName == 'TR' ) {
				return api.row( node ).index();
			}
			else if ( nodeName == 'TD' || nodeName == 'TH' ) {
				var cell = api.cell( node ).index();
		
				return [
					cell.row,
					cell.columnVisible,
					cell.column
				];
			}
			return null;
		};
		
		
		/**
		 * Check to see if a row is 'open' or not.
		 *  @param {node} nTr the table row to check
		 *  @returns {boolean} true if the row is currently open, false otherwise
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnIsOpen = function( nTr )
		{
			return this.api( true ).row( nTr ).child.isShown();
		};
		
		
		/**
		 * This function will place a new row directly after a row which is currently
		 * on display on the page, with the HTML contents that is passed into the
		 * function. This can be used, for example, to ask for confirmation that a
		 * particular record should be deleted.
		 *  @param {node} nTr The table row to 'open'
		 *  @param {string|node|jQuery} mHtml The HTML to put into the row
		 *  @param {string} sClass Class to give the new TD cell
		 *  @returns {node} The row opened. Note that if the table row passed in as the
		 *    first parameter, is not found in the table, this method will silently
		 *    return.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnOpen = function( nTr, mHtml, sClass )
		{
			return this.api( true )
				.row( nTr )
				.child( mHtml, sClass )
				.show()
				.child()[0];
		};
		
		
		/**
		 * Change the pagination - provides the internal logic for pagination in a simple API
		 * function. With this function you can have a DataTables table go to the next,
		 * previous, first or last pages.
		 *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
		 *    or page number to jump to (integer), note that page 0 is the first page.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
		 */
		this.fnPageChange = function ( mAction, bRedraw )
		{
			var api = this.api( true ).page( mAction );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw(false);
			}
		};
		
		
		/**
		 * Show a particular column
		 *  @param {int} iCol The column whose display should be changed
		 *  @param {bool} bShow Show (true) or hide (false) the column
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
		 */
		this.fnSetColumnVis = function ( iCol, bShow, bRedraw )
		{
			var api = this.api( true ).column( iCol ).visible( bShow );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.columns.adjust().draw();
			}
		};
		
		
		/**
		 * Get the settings for a particular table for external manipulation
		 *  @returns {object} DataTables settings object. See
		 *    {@link DataTable.models.oSettings}
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
		 */
		this.fnSettings = function()
		{
			return _fnSettingsFromNode( this[_ext.iApiIndex] );
		};
		
		
		/**
		 * Sort the table by a particular column
		 *  @param {int} iCol the data index to sort on. Note that this will not match the
		 *    'display index' if you have hidden data entries
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
		 */
		this.fnSort = function( aaSort )
		{
			this.api( true ).order( aaSort ).draw();
		};
		
		
		/**
		 * Attach a sort listener to an element for a given column
		 *  @param {node} nNode the element to attach the sort listener to
		 *  @param {int} iColumn the column that a click on this node will sort on
		 *  @param {function} [fnCallback] callback function when sort is run
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
		 */
		this.fnSortListener = function( nNode, iColumn, fnCallback )
		{
			this.api( true ).order.listener( nNode, iColumn, fnCallback );
		};
		
		
		/**
		 * Update a table cell or row - this method will accept either a single value to
		 * update the cell with, an array of values with one element for each column or
		 * an object in the same format as the original data source. The function is
		 * self-referencing in order to make the multi column updates easier.
		 *  @param {object|array|string} mData Data to update the cell/row with
		 *  @param {node|int} mRow TR element you want to update or the aoData index
		 *  @param {int} [iColumn] The column to update, give as null or undefined to
		 *    update a whole row.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @param {bool} [bAction=true] Perform pre-draw actions or not
		 *  @returns {int} 0 on success, 1 on error
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
		 */
		this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )
		{
			var api = this.api( true );
		
			if ( iColumn === undefined || iColumn === null ) {
				api.row( mRow ).data( mData );
			}
			else {
				api.cell( mRow, iColumn ).data( mData );
			}
		
			if ( bAction === undefined || bAction ) {
				api.columns.adjust();
			}
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
			return 0;
		};
		
		
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used, in order
		 * to ensure compatibility.
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
		 *    formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
		 *    version, or false if this version of DataTales is not suitable
		 *  @method
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		this.fnVersionCheck = _ext.fnVersionCheck;
		

		var _that = this;
		var emptyInit = options === undefined;
		var len = this.length;

		if ( emptyInit ) {
			options = {};
		}

		this.oApi = this.internal = _ext.internal;

		// Extend with old style plug-in API methods
		for ( var fn in DataTable.ext.internal ) {
			if ( fn ) {
				this[fn] = _fnExternApiFunc(fn);
			}
		}

		this.each(function() {
			// For each initialisation we want to give it a clean initialisation
			// object that can be bashed around
			var o = {};
			var oInit = len > 1 ? // optimisation for single table case
				_fnExtend( o, options, true ) :
				options;

			/*global oInit,_that,emptyInit*/
			var i=0, iLen, j, jLen, k, kLen;
			var sId = this.getAttribute( 'id' );
			var bInitHandedOff = false;
			var defaults = DataTable.defaults;
			var $this = $(this);
			
			
			/* Sanity check */
			if ( this.nodeName.toLowerCase() != 'table' )
			{
				_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );
				return;
			}
			
			/* Backwards compatibility for the defaults */
			_fnCompatOpts( defaults );
			_fnCompatCols( defaults.column );
			
			/* Convert the camel-case defaults to Hungarian */
			_fnCamelToHungarian( defaults, defaults, true );
			_fnCamelToHungarian( defaults.column, defaults.column, true );
			
			/* Setting up the initialisation object */
			_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );
			
			
			
			/* Check to see if we are re-initialising a table */
			var allSettings = DataTable.settings;
			for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )
			{
				var s = allSettings[i];
			
				/* Base check on table node */
				if (
					s.nTable == this ||
					(s.nTHead && s.nTHead.parentNode == this) ||
					(s.nTFoot && s.nTFoot.parentNode == this)
				) {
					var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
					var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
			
					if ( emptyInit || bRetrieve )
					{
						return s.oInstance;
					}
					else if ( bDestroy )
					{
						s.oInstance.fnDestroy();
						break;
					}
					else
					{
						_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );
						return;
					}
				}
			
				/* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
				if ( s.sTableId == this.id )
				{
					allSettings.splice( i, 1 );
					break;
				}
			}
			
			/* Ensure the table has an ID - required for accessibility */
			if ( sId === null || sId === "" )
			{
				sId = "DataTables_Table_"+(DataTable.ext._unique++);
				this.id = sId;
			}
			
			/* Create the settings object for this table and set some of the default parameters */
			var oSettings = $.extend( true, {}, DataTable.models.oSettings, {
				"sDestroyWidth": $this[0].style.width,
				"sInstance":     sId,
				"sTableId":      sId
			} );
			oSettings.nTable = this;
			oSettings.oApi   = _that.internal;
			oSettings.oInit  = oInit;
			
			allSettings.push( oSettings );
			
			// Need to add the instance after the instance after the settings object has been added
			// to the settings array, so we can self reference the table instance if more than one
			oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();
			
			// Backwards compatibility, before we apply all the defaults
			_fnCompatOpts( oInit );
			_fnLanguageCompat( oInit.oLanguage );
			
			// If the length menu is given, but the init display length is not, use the length menu
			if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
			{
				oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?
					oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
			}
			
			// Apply the defaults and init options to make a single init object will all
			// options defined from defaults and instance options.
			oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );
			
			
			// Map the initialisation options onto the settings object
			_fnMap( oSettings.oFeatures, oInit, [
				"bPaginate",
				"bLengthChange",
				"bFilter",
				"bSort",
				"bSortMulti",
				"bInfo",
				"bProcessing",
				"bAutoWidth",
				"bSortClasses",
				"bServerSide",
				"bDeferRender"
			] );
			_fnMap( oSettings, oInit, [
				"asStripeClasses",
				"ajax",
				"fnServerData",
				"fnFormatNumber",
				"sServerMethod",
				"aaSorting",
				"aaSortingFixed",
				"aLengthMenu",
				"sPaginationType",
				"sAjaxSource",
				"sAjaxDataProp",
				"iStateDuration",
				"sDom",
				"bSortCellsTop",
				"iTabIndex",
				"fnStateLoadCallback",
				"fnStateSaveCallback",
				"renderer",
				"searchDelay",
				"rowId",
				[ "iCookieDuration", "iStateDuration" ], // backwards compat
				[ "oSearch", "oPreviousSearch" ],
				[ "aoSearchCols", "aoPreSearchCols" ],
				[ "iDisplayLength", "_iDisplayLength" ]
			] );
			_fnMap( oSettings.oScroll, oInit, [
				[ "sScrollX", "sX" ],
				[ "sScrollXInner", "sXInner" ],
				[ "sScrollY", "sY" ],
				[ "bScrollCollapse", "bCollapse" ]
			] );
			_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
			
			/* Callback functions which are array driven */
			_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );
			_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );
			_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );
			_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );
			_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );
			
			oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );
			
			/* Browser support detection */
			_fnBrowserDetect( oSettings );
			
			var oClasses = oSettings.oClasses;
			
			$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );
			$this.addClass( oClasses.sTable );
			
			
			if ( oSettings.iInitDisplayStart === undefined )
			{
				/* Display start point, taking into account the save saving */
				oSettings.iInitDisplayStart = oInit.iDisplayStart;
				oSettings._iDisplayStart = oInit.iDisplayStart;
			}
			
			if ( oInit.iDeferLoading !== null )
			{
				oSettings.bDeferLoading = true;
				var tmp = $.isArray( oInit.iDeferLoading );
				oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
				oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
			}
			
			/* Language definitions */
			var oLanguage = oSettings.oLanguage;
			$.extend( true, oLanguage, oInit.oLanguage );
			
			if ( oLanguage.sUrl )
			{
				/* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
				$.ajax( {
					dataType: 'json',
					url: oLanguage.sUrl,
					success: function ( json ) {
						_fnLanguageCompat( json );
						_fnCamelToHungarian( defaults.oLanguage, json );
						$.extend( true, oLanguage, json );
						_fnInitialise( oSettings );
					},
					error: function () {
						// Error occurred loading language file, continue on as best we can
						_fnInitialise( oSettings );
					}
				} );
				bInitHandedOff = true;
			}
			
			/*
			 * Stripes
			 */
			if ( oInit.asStripeClasses === null )
			{
				oSettings.asStripeClasses =[
					oClasses.sStripeOdd,
					oClasses.sStripeEven
				];
			}
			
			/* Remove row stripe classes if they are already on the table row */
			var stripeClasses = oSettings.asStripeClasses;
			var rowOne = $this.children('tbody').find('tr').eq(0);
			if ( $.inArray( true, $.map( stripeClasses, function(el, i) {
				return rowOne.hasClass(el);
			} ) ) !== -1 ) {
				$('tbody tr', this).removeClass( stripeClasses.join(' ') );
				oSettings.asDestroyStripes = stripeClasses.slice();
			}
			
			/*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName('thead');
			if ( nThead.length !== 0 )
			{
				_fnDetectHeader( oSettings.aoHeader, nThead[0] );
				anThs = _fnGetUniqueThs( oSettings );
			}
			
			/* If not given a column array, generate one with nulls */
			if ( oInit.aoColumns === null )
			{
				aoColumnsInit = [];
				for ( i=0, iLen=anThs.length ; i<iLen ; i++ )
				{
					aoColumnsInit.push( null );
				}
			}
			else
			{
				aoColumnsInit = oInit.aoColumns;
			}
			
			/* Add the columns */
			for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )
			{
				_fnAddColumn( oSettings, anThs ? anThs[i] : null );
			}
			
			/* Apply the column definitions */
			_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
				_fnColumnOptions( oSettings, iCol, oDef );
			} );
			
			/* HTML5 attribute detection - build an mData object automatically if the
			 * attributes are found
			 */
			if ( rowOne.length ) {
				var a = function ( cell, name ) {
					return cell.getAttribute( 'data-'+name ) !== null ? name : null;
				};
			
				$( rowOne[0] ).children('th, td').each( function (i, cell) {
					var col = oSettings.aoColumns[i];
			
					if ( col.mData === i ) {
						var sort = a( cell, 'sort' ) || a( cell, 'order' );
						var filter = a( cell, 'filter' ) || a( cell, 'search' );
			
						if ( sort !== null || filter !== null ) {
							col.mData = {
								_:      i+'.display',
								sort:   sort !== null   ? i+'.@data-'+sort   : undefined,
								type:   sort !== null   ? i+'.@data-'+sort   : undefined,
								filter: filter !== null ? i+'.@data-'+filter : undefined
							};
			
							_fnColumnOptions( oSettings, i );
						}
					}
				} );
			}
			
			var features = oSettings.oFeatures;
			var loadedInit = function () {
				/*
				 * Sorting
				 * @todo For modularisation (1.11) this needs to do into a sort start up handler
				 */
			
				// If aaSorting is not defined, then we use the first indicator in asSorting
				// in case that has been altered, so the default sort reflects that option
				if ( oInit.aaSorting === undefined ) {
					var sorting = oSettings.aaSorting;
					for ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {
						sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];
					}
				}
			
				/* Do a first pass on the sorting classes (allows any size changes to be taken into
				 * account, and also will apply sorting disabled classes if disabled
				 */
				_fnSortingClasses( oSettings );
			
				if ( features.bSort ) {
					_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
						if ( oSettings.bSorted ) {
							var aSort = _fnSortFlatten( oSettings );
							var sortedColumns = {};
			
							$.each( aSort, function (i, val) {
								sortedColumns[ val.src ] = val.dir;
							} );
			
							_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );
							_fnSortAria( oSettings );
						}
					} );
				}
			
				_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
					if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {
						_fnSortingClasses( oSettings );
					}
				}, 'sc' );
			
			
				/*
				 * Final init
				 * Cache the header, body and footer as required, creating them if needed
				 */
			
				// Work around for Webkit bug 83867 - store the caption-side before removing from doc
				var captions = $this.children('caption').each( function () {
					this._captionSide = $(this).css('caption-side');
				} );
			
				var thead = $this.children('thead');
				if ( thead.length === 0 ) {
					thead = $('<thead/>').appendTo($this);
				}
				oSettings.nTHead = thead[0];
			
				var tbody = $this.children('tbody');
				if ( tbody.length === 0 ) {
					tbody = $('<tbody/>').appendTo($this);
				}
				oSettings.nTBody = tbody[0];
			
				var tfoot = $this.children('tfoot');
				if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") ) {
					// If we are a scrolling table, and no footer has been given, then we need to create
					// a tfoot element for the caption element to be appended to
					tfoot = $('<tfoot/>').appendTo($this);
				}
			
				if ( tfoot.length === 0 || tfoot.children().length === 0 ) {
					$this.addClass( oClasses.sNoFooter );
				}
				else if ( tfoot.length > 0 ) {
					oSettings.nTFoot = tfoot[0];
					_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );
				}
			
				/* Check if there is data passing into the constructor */
				if ( oInit.aaData ) {
					for ( i=0 ; i<oInit.aaData.length ; i++ ) {
						_fnAddData( oSettings, oInit.aaData[ i ] );
					}
				}
				else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {
					/* Grab the data from the page - only do this when deferred loading or no Ajax
					 * source since there is no point in reading the DOM data if we are then going
					 * to replace it with Ajax data
					 */
					_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );
				}
			
				/* Copy the data index array */
				oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
				/* Initialisation complete - table can be drawn */
				oSettings.bInitialised = true;
			
				/* Check if we need to initialise the table (it might not have been handed off to the
				 * language processor)
				 */
				if ( bInitHandedOff === false ) {
					_fnInitialise( oSettings );
				}
			};
			
			/* Must be done after everything which can be overridden by the state saving! */
			if ( oInit.bStateSave )
			{
				features.bStateSave = true;
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );
				_fnLoadState( oSettings, oInit, loadedInit );
			}
			else {
				loadedInit();
			}
			
		} );
		_that = null;
		return this;
	};

	
	/*
	 * It is useful to have variables which are scoped locally so only the
	 * DataTables functions can access them and they don't leak into global space.
	 * At the same time these functions are often useful over multiple files in the
	 * core and API, so we list, or at least document, all variables which are used
	 * by DataTables as private variables here. This also ensures that there is no
	 * clashing of variable names and that they can easily referenced for reuse.
	 */
	
	
	// Defined else where
	//  _selector_run
	//  _selector_opts
	//  _selector_first
	//  _selector_row_indexes
	
	var _ext; // DataTable.ext
	var _Api; // DataTable.Api
	var _api_register; // DataTable.Api.register
	var _api_registerPlural; // DataTable.Api.registerPlural
	
	var _re_dic = {};
	var _re_new_lines = /[\r\n\u2028]/g;
	var _re_html = /<.*?>/g;
	
	// This is not strict ISO8601 - Date.parse() is quite lax, although
	// implementations differ between browsers.
	var _re_date = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/;
	
	// Escape regular expression special characters
	var _re_escape_regex = new RegExp( '(\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ].join('|\\') + ')', 'g' );
	
	// http://en.wikipedia.org/wiki/Foreign_exchange_market
	// - \u20BD - Russian ruble.
	// - \u20a9 - South Korean Won
	// - \u20BA - Turkish Lira
	// - \u20B9 - Indian Rupee
	// - R - Brazil (R$) and South Africa
	// - fr - Swiss Franc
	// - kr - Swedish krona, Norwegian krone and Danish krone
	// - \u2009 is thin space and \u202F is narrow no-break space, both used in many
	// - Ƀ - Bitcoin
	// - Ξ - Ethereum
	//   standards as thousands separators.
	var _re_formatted_numeric = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi;
	
	
	var _empty = function ( d ) {
		return !d || d === true || d === '-' ? true : false;
	};
	
	
	var _intVal = function ( s ) {
		var integer = parseInt( s, 10 );
		return !isNaN(integer) && isFinite(s) ? integer : null;
	};
	
	// Convert from a formatted number with characters other than `.` as the
	// decimal place, to a Javascript number
	var _numToDecimal = function ( num, decimalPoint ) {
		// Cache created regular expressions for speed as this function is called often
		if ( ! _re_dic[ decimalPoint ] ) {
			_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );
		}
		return typeof num === 'string' && decimalPoint !== '.' ?
			num.replace( /\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :
			num;
	};
	
	
	var _isNumber = function ( d, decimalPoint, formatted ) {
		var strType = typeof d === 'string';
	
		// If empty return immediately so there must be a number if it is a
		// formatted string (this stops the string "k", or "kr", etc being detected
		// as a formatted number for currency
		if ( _empty( d ) ) {
			return true;
		}
	
		if ( decimalPoint && strType ) {
			d = _numToDecimal( d, decimalPoint );
		}
	
		if ( formatted && strType ) {
			d = d.replace( _re_formatted_numeric, '' );
		}
	
		return !isNaN( parseFloat(d) ) && isFinite( d );
	};
	
	
	// A string without HTML in it can be considered to be HTML still
	var _isHtml = function ( d ) {
		return _empty( d ) || typeof d === 'string';
	};
	
	
	var _htmlNumeric = function ( d, decimalPoint, formatted ) {
		if ( _empty( d ) ) {
			return true;
		}
	
		var html = _isHtml( d );
		return ! html ?
			null :
			_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?
				true :
				null;
	};
	
	
	var _pluck = function ( a, prop, prop2 ) {
		var out = [];
		var i=0, ien=a.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[i] && a[i][ prop ] ) {
					out.push( a[i][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				if ( a[i] ) {
					out.push( a[i][ prop ] );
				}
			}
		}
	
		return out;
	};
	
	
	// Basically the same as _pluck, but rather than looping over `a` we use `order`
	// as the indexes to pick from `a`
	var _pluck_order = function ( a, order, prop, prop2 )
	{
		var out = [];
		var i=0, ien=order.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[ order[i] ][ prop ] ) {
					out.push( a[ order[i] ][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				out.push( a[ order[i] ][ prop ] );
			}
		}
	
		return out;
	};
	
	
	var _range = function ( len, start )
	{
		var out = [];
		var end;
	
		if ( start === undefined ) {
			start = 0;
			end = len;
		}
		else {
			end = start;
			start = len;
		}
	
		for ( var i=start ; i<end ; i++ ) {
			out.push( i );
		}
	
		return out;
	};
	
	
	var _removeEmpty = function ( a )
	{
		var out = [];
	
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( a[i] ) { // careful - will remove all falsy values!
				out.push( a[i] );
			}
		}
	
		return out;
	};
	
	
	var _stripHtml = function ( d ) {
		return d.replace( _re_html, '' );
	};
	
	
	/**
	 * Determine if all values in the array are unique. This means we can short
	 * cut the _unique method at the cost of a single loop. A sorted array is used
	 * to easily check the values.
	 *
	 * @param  {array} src Source array
	 * @return {boolean} true if all unique, false otherwise
	 * @ignore
	 */
	var _areAllUnique = function ( src ) {
		if ( src.length < 2 ) {
			return true;
		}
	
		var sorted = src.slice().sort();
		var last = sorted[0];
	
		for ( var i=1, ien=sorted.length ; i<ien ; i++ ) {
			if ( sorted[i] === last ) {
				return false;
			}
	
			last = sorted[i];
		}
	
		return true;
	};
	
	
	/**
	 * Find the unique elements in a source array.
	 *
	 * @param  {array} src Source array
	 * @return {array} Array of unique items
	 * @ignore
	 */
	var _unique = function ( src )
	{
		if ( _areAllUnique( src ) ) {
			return src.slice();
		}
	
		// A faster unique method is to use object keys to identify used values,
		// but this doesn't work with arrays or objects, which we must also
		// consider. See jsperf.com/compare-array-unique-versions/4 for more
		// information.
		var
			out = [],
			val,
			i, ien=src.length,
			j, k=0;
	
		again: for ( i=0 ; i<ien ; i++ ) {
			val = src[i];
	
			for ( j=0 ; j<k ; j++ ) {
				if ( out[j] === val ) {
					continue again;
				}
			}
	
			out.push( val );
			k++;
		}
	
		return out;
	};
	
	
	/**
	 * DataTables utility methods
	 * 
	 * This namespace provides helper methods that DataTables uses internally to
	 * create a DataTable, but which are not exclusively used only for DataTables.
	 * These methods can be used by extension authors to save the duplication of
	 * code.
	 *
	 *  @namespace
	 */
	DataTable.util = {
		/**
		 * Throttle the calls to a function. Arguments and context are maintained
		 * for the throttled function.
		 *
		 * @param {function} fn Function to be called
		 * @param {integer} freq Call frequency in mS
		 * @return {function} Wrapped function
		 */
		throttle: function ( fn, freq ) {
			var
				frequency = freq !== undefined ? freq : 200,
				last,
				timer;
	
			return function () {
				var
					that = this,
					now  = +new Date(),
					args = arguments;
	
				if ( last && now < last + frequency ) {
					clearTimeout( timer );
	
					timer = setTimeout( function () {
						last = undefined;
						fn.apply( that, args );
					}, frequency );
				}
				else {
					last = now;
					fn.apply( that, args );
				}
			};
		},
	
	
		/**
		 * Escape a string such that it can be used in a regular expression
		 *
		 *  @param {string} val string to escape
		 *  @returns {string} escaped string
		 */
		escapeRegex: function ( val ) {
			return val.replace( _re_escape_regex, '\\$1' );
		}
	};
	
	
	
	/**
	 * Create a mapping object that allows camel case parameters to be looked up
	 * for their Hungarian counterparts. The mapping is stored in a private
	 * parameter called `_hungarianMap` which can be accessed on the source object.
	 *  @param {object} o
	 *  @memberof DataTable#oApi
	 */
	function _fnHungarianMap ( o )
	{
		var
			hungarian = 'a aa ai ao as b fn i m o s ',
			match,
			newKey,
			map = {};
	
		$.each( o, function (key, val) {
			match = key.match(/^([^A-Z]+?)([A-Z])/);
	
			if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
			{
				newKey = key.replace( match[0], match[2].toLowerCase() );
				map[ newKey ] = key;
	
				if ( match[1] === 'o' )
				{
					_fnHungarianMap( o[key] );
				}
			}
		} );
	
		o._hungarianMap = map;
	}
	
	
	/**
	 * Convert from camel case parameters to Hungarian, based on a Hungarian map
	 * created by _fnHungarianMap.
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 *  @memberof DataTable#oApi
	 */
	function _fnCamelToHungarian ( src, user, force )
	{
		if ( ! src._hungarianMap ) {
			_fnHungarianMap( src );
		}
	
		var hungarianKey;
	
		$.each( user, function (key, val) {
			hungarianKey = src._hungarianMap[ key ];
	
			if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
			{
				// For objects, we need to buzz down into the object to copy parameters
				if ( hungarianKey.charAt(0) === 'o' )
				{
					// Copy the camelCase options over to the hungarian
					if ( ! user[ hungarianKey ] ) {
						user[ hungarianKey ] = {};
					}
					$.extend( true, user[hungarianKey], user[key] );
	
					_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );
				}
				else {
					user[hungarianKey] = user[ key ];
				}
			}
		} );
	}
	
	
	/**
	 * Language compatibility - when certain options are given, and others aren't, we
	 * need to duplicate the values over, in order to provide backwards compatibility
	 * with older language files.
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnLanguageCompat( lang )
	{
		// Note the use of the Hungarian notation for the parameters in this method as
		// this is called after the mapping of camelCase to Hungarian
		var defaults = DataTable.defaults.oLanguage;
	
		// Default mapping
		var defaultDecimal = defaults.sDecimal;
		if ( defaultDecimal ) {
			_addNumericSort( defaultDecimal );
		}
	
		if ( lang ) {
			var zeroRecords = lang.sZeroRecords;
	
			// Backwards compatibility - if there is no sEmptyTable given, then use the same as
			// sZeroRecords - assuming that is given.
			if ( ! lang.sEmptyTable && zeroRecords &&
				defaults.sEmptyTable === "No data available in table" )
			{
				_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );
			}
	
			// Likewise with loading records
			if ( ! lang.sLoadingRecords && zeroRecords &&
				defaults.sLoadingRecords === "Loading..." )
			{
				_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );
			}
	
			// Old parameter name of the thousands separator mapped onto the new
			if ( lang.sInfoThousands ) {
				lang.sThousands = lang.sInfoThousands;
			}
	
			var decimal = lang.sDecimal;
			if ( decimal && defaultDecimal !== decimal ) {
				_addNumericSort( decimal );
			}
		}
	}
	
	
	/**
	 * Map one parameter onto another
	 *  @param {object} o Object to map
	 *  @param {*} knew The new parameter name
	 *  @param {*} old The old parameter name
	 */
	var _fnCompatMap = function ( o, knew, old ) {
		if ( o[ knew ] !== undefined ) {
			o[ old ] = o[ knew ];
		}
	};
	
	
	/**
	 * Provide backwards compatibility for the main DT options. Note that the new
	 * options are mapped onto the old parameters, so this is an external interface
	 * change only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatOpts ( init )
	{
		_fnCompatMap( init, 'ordering',      'bSort' );
		_fnCompatMap( init, 'orderMulti',    'bSortMulti' );
		_fnCompatMap( init, 'orderClasses',  'bSortClasses' );
		_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );
		_fnCompatMap( init, 'order',         'aaSorting' );
		_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );
		_fnCompatMap( init, 'paging',        'bPaginate' );
		_fnCompatMap( init, 'pagingType',    'sPaginationType' );
		_fnCompatMap( init, 'pageLength',    'iDisplayLength' );
		_fnCompatMap( init, 'searching',     'bFilter' );
	
		// Boolean initialisation of x-scrolling
		if ( typeof init.sScrollX === 'boolean' ) {
			init.sScrollX = init.sScrollX ? '100%' : '';
		}
		if ( typeof init.scrollX === 'boolean' ) {
			init.scrollX = init.scrollX ? '100%' : '';
		}
	
		// Column search objects are in an array, so it needs to be converted
		// element by element
		var searchCols = init.aoSearchCols;
	
		if ( searchCols ) {
			for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {
				if ( searchCols[i] ) {
					_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );
				}
			}
		}
	}
	
	
	/**
	 * Provide backwards compatibility for column options. Note that the new options
	 * are mapped onto the old parameters, so this is an external interface change
	 * only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatCols ( init )
	{
		_fnCompatMap( init, 'orderable',     'bSortable' );
		_fnCompatMap( init, 'orderData',     'aDataSort' );
		_fnCompatMap( init, 'orderSequence', 'asSorting' );
		_fnCompatMap( init, 'orderDataType', 'sortDataType' );
	
		// orderData can be given as an integer
		var dataSort = init.aDataSort;
		if ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {
			init.aDataSort = [ dataSort ];
		}
	}
	
	
	/**
	 * Browser feature detection for capabilities, quirks
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBrowserDetect( settings )
	{
		// We don't need to do this every time DataTables is constructed, the values
		// calculated are specific to the browser and OS configuration which we
		// don't expect to change between initialisations
		if ( ! DataTable.__browser ) {
			var browser = {};
			DataTable.__browser = browser;
	
			// Scrolling feature / quirks detection
			var n = $('<div/>')
				.css( {
					position: 'fixed',
					top: 0,
					left: $(window).scrollLeft()*-1, // allow for scrolling
					height: 1,
					width: 1,
					overflow: 'hidden'
				} )
				.append(
					$('<div/>')
						.css( {
							position: 'absolute',
							top: 1,
							left: 1,
							width: 100,
							overflow: 'scroll'
						} )
						.append(
							$('<div/>')
								.css( {
									width: '100%',
									height: 10
								} )
						)
				)
				.appendTo( 'body' );
	
			var outer = n.children();
			var inner = outer.children();
	
			// Numbers below, in order, are:
			// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth
			//
			// IE6 XP:                           100 100 100  83
			// IE7 Vista:                        100 100 100  83
			// IE 8+ Windows:                     83  83 100  83
			// Evergreen Windows:                 83  83 100  83
			// Evergreen Mac with scrollbars:     85  85 100  85
			// Evergreen Mac without scrollbars: 100 100 100 100
	
			// Get scrollbar width
			browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
	
			// IE6/7 will oversize a width 100% element inside a scrolling element, to
			// include the width of the scrollbar, while other browsers ensure the inner
			// element is contained without forcing scrolling
			browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
	
			// In rtl text layout, some browsers (most, but not all) will place the
			// scrollbar on the left, rather than the right.
			browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;
	
			// IE8- don't provide height and width for getBoundingClientRect
			browser.bBounding = n[0].getBoundingClientRect().width ? true : false;
	
			n.remove();
		}
	
		$.extend( settings.oBrowser, DataTable.__browser );
		settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
	}
	
	
	/**
	 * Array.prototype reduce[Right] method, used for browsers which don't support
	 * JS 1.6. Done this way to reduce code size, since we iterate either way
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnReduce ( that, fn, init, start, end, inc )
	{
		var
			i = start,
			value,
			isSet = false;
	
		if ( init !== undefined ) {
			value = init;
			isSet = true;
		}
	
		while ( i !== end ) {
			if ( ! that.hasOwnProperty(i) ) {
				continue;
			}
	
			value = isSet ?
				fn( value, that[i], i, that ) :
				that[i];
	
			isSet = true;
			i += inc;
		}
	
		return value;
	}
	
	/**
	 * Add a column to the list used for the table with default values
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nTh The th element for this column
	 *  @memberof DataTable#oApi
	 */
	function _fnAddColumn( oSettings, nTh )
	{
		// Add column to aoColumns array
		var oDefaults = DataTable.defaults.column;
		var iCol = oSettings.aoColumns.length;
		var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {
			"nTh": nTh ? nTh : document.createElement('th'),
			"sTitle":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',
			"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
			"mData": oDefaults.mData ? oDefaults.mData : iCol,
			idx: iCol
		} );
		oSettings.aoColumns.push( oCol );
	
		// Add search object for column specific search. Note that the `searchCols[ iCol ]`
		// passed into extend can be undefined. This allows the user to give a default
		// with only some of the parameters defined, and also not give a default
		var searchCols = oSettings.aoPreSearchCols;
		searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );
	
		// Use the default column options function to initialise classes etc
		_fnColumnOptions( oSettings, iCol, $(nTh).data() );
	}
	
	
	/**
	 * Apply options for a column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column index to consider
	 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOptions( oSettings, iCol, oOptions )
	{
		var oCol = oSettings.aoColumns[ iCol ];
		var oClasses = oSettings.oClasses;
		var th = $(oCol.nTh);
	
		// Try to get width information from the DOM. We can't get it from CSS
		// as we'd need to parse the CSS stylesheet. `width` option can override
		if ( ! oCol.sWidthOrig ) {
			// Width attribute
			oCol.sWidthOrig = th.attr('width') || null;
	
			// Style attribute
			var t = (th.attr('style') || '').match(/width:\s*(\d+[pxem%]+)/);
			if ( t ) {
				oCol.sWidthOrig = t[1];
			}
		}
	
		/* User specified column options */
		if ( oOptions !== undefined && oOptions !== null )
		{
			// Backwards compatibility
			_fnCompatCols( oOptions );
	
			// Map camel case parameters to their Hungarian counterparts
			_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );
	
			/* Backwards compatibility for mDataProp */
			if ( oOptions.mDataProp !== undefined && !oOptions.mData )
			{
				oOptions.mData = oOptions.mDataProp;
			}
	
			if ( oOptions.sType )
			{
				oCol._sManualType = oOptions.sType;
			}
	
			// `class` is a reserved word in Javascript, so we need to provide
			// the ability to use a valid name for the camel case input
			if ( oOptions.className && ! oOptions.sClass )
			{
				oOptions.sClass = oOptions.className;
			}
			if ( oOptions.sClass ) {
				th.addClass( oOptions.sClass );
			}
	
			$.extend( oCol, oOptions );
			_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );
	
			/* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
			if ( oOptions.iDataSort !== undefined )
			{
				oCol.aDataSort = [ oOptions.iDataSort ];
			}
			_fnMap( oCol, oOptions, "aDataSort" );
		}
	
		/* Cache the data get and set functions for speed */
		var mDataSrc = oCol.mData;
		var mData = _fnGetObjectDataFn( mDataSrc );
		var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;
	
		var attrTest = function( src ) {
			return typeof src === 'string' && src.indexOf('@') !== -1;
		};
		oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (
			attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
		);
		oCol._setter = null;
	
		oCol.fnGetData = function (rowData, type, meta) {
			var innerData = mData( rowData, type, undefined, meta );
	
			return mRender && type ?
				mRender( innerData, type, rowData, meta ) :
				innerData;
		};
		oCol.fnSetData = function ( rowData, val, meta ) {
			return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );
		};
	
		// Indicate if DataTables should read DOM data as an object or array
		// Used in _fnGetRowElements
		if ( typeof mDataSrc !== 'number' ) {
			oSettings._rowReadObject = true;
		}
	
		/* Feature sorting overrides column specific when off */
		if ( !oSettings.oFeatures.bSort )
		{
			oCol.bSortable = false;
			th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called
		}
	
		/* Check that the class assignment is correct for sorting */
		var bAsc = $.inArray('asc', oCol.asSorting) !== -1;
		var bDesc = $.inArray('desc', oCol.asSorting) !== -1;
		if ( !oCol.bSortable || (!bAsc && !bDesc) )
		{
			oCol.sSortingClass = oClasses.sSortableNone;
			oCol.sSortingClassJUI = "";
		}
		else if ( bAsc && !bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableAsc;
			oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
		}
		else if ( !bAsc && bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableDesc;
			oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
		}
		else
		{
			oCol.sSortingClass = oClasses.sSortable;
			oCol.sSortingClassJUI = oClasses.sSortJUI;
		}
	}
	
	
	/**
	 * Adjust the table column widths for new data. Note: you would probably want to
	 * do a redraw after calling this function!
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAdjustColumnSizing ( settings )
	{
		/* Not interested in doing column width calculation if auto-width is disabled */
		if ( settings.oFeatures.bAutoWidth !== false )
		{
			var columns = settings.aoColumns;
	
			_fnCalculateColumnWidths( settings );
			for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )
			{
				columns[i].nTh.style.width = columns[i].sWidth;
			}
		}
	
		var scroll = settings.oScroll;
		if ( scroll.sY !== '' || scroll.sX !== '')
		{
			_fnScrollDraw( settings );
		}
	
		_fnCallbackFire( settings, null, 'column-sizing', [settings] );
	}
	
	
	/**
	 * Covert the index of a visible column to the index in the data array (take account
	 * of hidden columns)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMatch Visible column index to lookup
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnVisibleToColumnIndex( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	
		return typeof aiVis[iMatch] === 'number' ?
			aiVis[iMatch] :
			null;
	}
	
	
	/**
	 * Covert the index of an index in the data array and convert it to the visible
	 *   column index (take account of hidden columns)
	 *  @param {int} iMatch Column index to lookup
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnIndexToVisible( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
		var iPos = $.inArray( iMatch, aiVis );
	
		return iPos !== -1 ? iPos : null;
	}
	
	
	/**
	 * Get the number of visible columns
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the number of visible columns
	 *  @memberof DataTable#oApi
	 */
	function _fnVisbleColumns( oSettings )
	{
		var vis = 0;
	
		// No reduce in IE8, use a loop for now
		$.each( oSettings.aoColumns, function ( i, col ) {
			if ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {
				vis++;
			}
		} );
	
		return vis;
	}
	
	
	/**
	 * Get an array of column indexes that match a given property
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sParam Parameter in aoColumns to look for - typically
	 *    bVisible or bSearchable
	 *  @returns {array} Array of indexes with matched properties
	 *  @memberof DataTable#oApi
	 */
	function _fnGetColumns( oSettings, sParam )
	{
		var a = [];
	
		$.map( oSettings.aoColumns, function(val, i) {
			if ( val[sParam] ) {
				a.push( i );
			}
		} );
	
		return a;
	}
	
	
	/**
	 * Calculate the 'type' of a column
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnTypes ( settings )
	{
		var columns = settings.aoColumns;
		var data = settings.aoData;
		var types = DataTable.ext.type.detect;
		var i, ien, j, jen, k, ken;
		var col, cell, detectedType, cache;
	
		// For each column, spin over the 
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			col = columns[i];
			cache = [];
	
			if ( ! col.sType && col._sManualType ) {
				col.sType = col._sManualType;
			}
			else if ( ! col.sType ) {
				for ( j=0, jen=types.length ; j<jen ; j++ ) {
					for ( k=0, ken=data.length ; k<ken ; k++ ) {
						// Use a cache array so we only need to get the type data
						// from the formatter once (when using multiple detectors)
						if ( cache[k] === undefined ) {
							cache[k] = _fnGetCellData( settings, k, i, 'type' );
						}
	
						detectedType = types[j]( cache[k], settings );
	
						// If null, then this type can't apply to this column, so
						// rather than testing all cells, break out. There is an
						// exception for the last type which is `html`. We need to
						// scan all rows since it is possible to mix string and HTML
						// types
						if ( ! detectedType && j !== types.length-1 ) {
							break;
						}
	
						// Only a single match is needed for html type since it is
						// bottom of the pile and very similar to string
						if ( detectedType === 'html' ) {
							break;
						}
					}
	
					// Type is valid for all data points in the column - use this
					// type
					if ( detectedType ) {
						col.sType = detectedType;
						break;
					}
				}
	
				// Fall back - if no type was detected, always use string
				if ( ! col.sType ) {
					col.sType = 'string';
				}
			}
		}
	}
	
	
	/**
	 * Take the column definitions and static columns arrays and calculate how
	 * they relate to column indexes. The callback function will then apply the
	 * definition found for a column to a suitable configuration object.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
	 *  @param {array} aoCols The aoColumns array that defines columns individually
	 *  @param {function} fn Callback function - takes two parameters, the calculated
	 *    column index and the definition for that column.
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )
	{
		var i, iLen, j, jLen, k, kLen, def;
		var columns = oSettings.aoColumns;
	
		// Column definitions with aTargets
		if ( aoColDefs )
		{
			/* Loop over the definitions array - loop in reverse so first instance has priority */
			for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
			{
				def = aoColDefs[i];
	
				/* Each definition can target multiple columns, as it is an array */
				var aTargets = def.targets !== undefined ?
					def.targets :
					def.aTargets;
	
				if ( ! $.isArray( aTargets ) )
				{
					aTargets = [ aTargets ];
				}
	
				for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
				{
					if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )
					{
						/* Add columns that we don't yet know about */
						while( columns.length <= aTargets[j] )
						{
							_fnAddColumn( oSettings );
						}
	
						/* Integer, basic index */
						fn( aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )
					{
						/* Negative integer, right to left column counting */
						fn( columns.length+aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'string' )
					{
						/* Class name matching on TH element */
						for ( k=0, kLen=columns.length ; k<kLen ; k++ )
						{
							if ( aTargets[j] == "_all" ||
							     $(columns[k].nTh).hasClass( aTargets[j] ) )
							{
								fn( k, def );
							}
						}
					}
				}
			}
		}
	
		// Statically defined columns array
		if ( aoCols )
		{
			for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )
			{
				fn( i, aoCols[i] );
			}
		}
	}
	
	/**
	 * Add a data array to the table, creating DOM node etc. This is the parallel to
	 * _fnGatherData, but for adding rows from a Javascript source, rather than a
	 * DOM source.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData data array to be added
	 *  @param {node} [nTr] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
	 *  @memberof DataTable#oApi
	 */
	function _fnAddData ( oSettings, aDataIn, nTr, anTds )
	{
		/* Create the object for storing information about this new row */
		var iRow = oSettings.aoData.length;
		var oData = $.extend( true, {}, DataTable.models.oRow, {
			src: nTr ? 'dom' : 'data',
			idx: iRow
		} );
	
		oData._aData = aDataIn;
		oSettings.aoData.push( oData );
	
		/* Create the cells */
		var nTd, sThisType;
		var columns = oSettings.aoColumns;
	
		// Invalidate the column types as the new data needs to be revalidated
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			columns[i].sType = null;
		}
	
		/* Add to the display array */
		oSettings.aiDisplayMaster.push( iRow );
	
		var id = oSettings.rowIdFn( aDataIn );
		if ( id !== undefined ) {
			oSettings.aIds[ id ] = oData;
		}
	
		/* Create the DOM information, or register it if already present */
		if ( nTr || ! oSettings.oFeatures.bDeferRender )
		{
			_fnCreateTr( oSettings, iRow, nTr, anTds );
		}
	
		return iRow;
	}
	
	
	/**
	 * Add one or more TR elements to the table. Generally we'd expect to
	 * use this for reading data from a DOM sourced table, but it could be
	 * used for an TR element. Note that if a TR is given, it is used (i.e.
	 * it is not cloned).
	 *  @param {object} settings dataTables settings object
	 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
	 *  @returns {array} Array of indexes for the added rows
	 *  @memberof DataTable#oApi
	 */
	function _fnAddTr( settings, trs )
	{
		var row;
	
		// Allow an individual node to be passed in
		if ( ! (trs instanceof $) ) {
			trs = $(trs);
		}
	
		return trs.map( function (i, el) {
			row = _fnGetRowElements( settings, el );
			return _fnAddData( settings, row.data, el, row.cells );
		} );
	}
	
	
	/**
	 * Take a TR element and convert it to an index in aoData
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n the TR element to find
	 *  @returns {int} index if the node is found, null if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToDataIndex( oSettings, n )
	{
		return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;
	}
	
	
	/**
	 * Take a TD element and convert it into a column data index (not the visible index)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow The row number the TD/TH can be found in
	 *  @param {node} n The TD/TH element to find
	 *  @returns {int} index if the node is found, -1 if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToColumnIndex( oSettings, iRow, n )
	{
		return $.inArray( n, oSettings.aoData[ iRow ].anCells );
	}
	
	
	/**
	 * Get the data for a given cell from the internal cache, taking into account data mapping
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {string} type data get type ('display', 'type' 'filter' 'sort')
	 *  @returns {*} Cell data
	 *  @memberof DataTable#oApi
	 */
	function _fnGetCellData( settings, rowIdx, colIdx, type )
	{
		var draw           = settings.iDraw;
		var col            = settings.aoColumns[colIdx];
		var rowData        = settings.aoData[rowIdx]._aData;
		var defaultContent = col.sDefaultContent;
		var cellData       = col.fnGetData( rowData, type, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		} );
	
		if ( cellData === undefined ) {
			if ( settings.iDrawError != draw && defaultContent === null ) {
				_fnLog( settings, 0, "Requested unknown parameter "+
					(typeof col.mData=='function' ? '{function}' : "'"+col.mData+"'")+
					" for row "+rowIdx+", column "+colIdx, 4 );
				settings.iDrawError = draw;
			}
			return defaultContent;
		}
	
		// When the data source is null and a specific data type is requested (i.e.
		// not the original data), we can use default column data
		if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {
			cellData = defaultContent;
		}
		else if ( typeof cellData === 'function' ) {
			// If the data source is a function, then we run it and use the return,
			// executing in the scope of the data object (for instances)
			return cellData.call( rowData );
		}
	
		if ( cellData === null && type == 'display' ) {
			return '';
		}
		return cellData;
	}
	
	
	/**
	 * Set the value for a specific cell, into the internal data cache
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {*} val Value to set
	 *  @memberof DataTable#oApi
	 */
	function _fnSetCellData( settings, rowIdx, colIdx, val )
	{
		var col     = settings.aoColumns[colIdx];
		var rowData = settings.aoData[rowIdx]._aData;
	
		col.fnSetData( rowData, val, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		}  );
	}
	
	
	// Private variable that is used to match action syntax in the data property object
	var __reArray = /\[.*?\]$/;
	var __reFn = /\(\)$/;
	
	/**
	 * Split string on periods, taking into account escaped periods
	 * @param  {string} str String to split
	 * @return {array} Split string
	 */
	function _fnSplitObjNotation( str )
	{
		return $.map( str.match(/(\\.|[^\.])+/g) || [''], function ( s ) {
			return s.replace(/\\\./g, '.');
		} );
	}
	
	
	/**
	 * Return a function that can be used to get data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data get function
	 *  @memberof DataTable#oApi
	 */
	function _fnGetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Build an object of get functions, and wrap them in a single call */
			var o = {};
			$.each( mSource, function (key, val) {
				if ( val ) {
					o[key] = _fnGetObjectDataFn( val );
				}
			} );
	
			return function (data, type, row, meta) {
				var t = o[type] || o._;
				return t !== undefined ?
					t(data, type, row, meta) :
					data;
			};
		}
		else if ( mSource === null )
		{
			/* Give an empty string for rendering / sorting etc */
			return function (data) { // type, row and meta also passed, but not used
				return data;
			};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, type, row, meta) {
				return mSource( data, type, row, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
			var fetchData = function (data, type, src) {
				var arrayNotation, funcNotation, out, innerSrc;
	
				if ( src !== "" )
				{
					var a = _fnSplitObjNotation( src );
	
					for ( var i=0, iLen=a.length ; i<iLen ; i++ )
					{
						// Check if we are dealing with special notation
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
	
						if ( arrayNotation )
						{
							// Array notation
							a[i] = a[i].replace(__reArray, '');
	
							// Condition allows simply [] to be passed in
							if ( a[i] !== "" ) {
								data = data[ a[i] ];
							}
							out = [];
	
							// Get the remainder of the nested object to get
							a.splice( 0, i+1 );
							innerSrc = a.join('.');
	
							// Traverse each entry in the array getting the properties requested
							if ( $.isArray( data ) ) {
								for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
									out.push( fetchData( data[j], type, innerSrc ) );
								}
							}
	
							// If a string is given in between the array notation indicators, that
							// is used to join the strings together, otherwise an array is returned
							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
							data = (join==="") ? out : out.join(join);
	
							// The inner call to fetchData has already traversed through the remainder
							// of the source requested, so we exit from the loop
							break;
						}
						else if ( funcNotation )
						{
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]();
							continue;
						}
	
						if ( data === null || data[ a[i] ] === undefined )
						{
							return undefined;
						}
						data = data[ a[i] ];
					}
				}
	
				return data;
			};
	
			return function (data, type) { // row and meta also passed, but not used
				return fetchData( data, type, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, type) { // row and meta also passed, but not used
				return data[mSource];
			};
		}
	}
	
	
	/**
	 * Return a function that can be used to set data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data set function
	 *  @memberof DataTable#oApi
	 */
	function _fnSetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
			return _fnSetObjectDataFn( mSource._ );
		}
		else if ( mSource === null )
		{
			/* Nothing to do when the data source is null */
			return function () {};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, val, meta) {
				mSource( data, 'set', val, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* Like the get, we need to get data from a nested object */
			var setData = function (data, val, src) {
				var a = _fnSplitObjNotation( src ), b;
				var aLast = a[a.length-1];
				var arrayNotation, funcNotation, o, innerSrc;
	
				for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )
				{
					// Check if we are dealing with an array notation request
					arrayNotation = a[i].match(__reArray);
					funcNotation = a[i].match(__reFn);
	
					if ( arrayNotation )
					{
						a[i] = a[i].replace(__reArray, '');
						data[ a[i] ] = [];
	
						// Get the remainder of the nested object to set so we can recurse
						b = a.slice();
						b.splice( 0, i+1 );
						innerSrc = b.join('.');
	
						// Traverse each entry in the array setting the properties requested
						if ( $.isArray( val ) )
						{
							for ( var j=0, jLen=val.length ; j<jLen ; j++ )
							{
								o = {};
								setData( o, val[j], innerSrc );
								data[ a[i] ].push( o );
							}
						}
						else
						{
							// We've been asked to save data to an array, but it
							// isn't array data to be saved. Best that can be done
							// is to just save the value.
							data[ a[i] ] = val;
						}
	
						// The inner call to setData has already traversed through the remainder
						// of the source and has set the data, thus we can exit here
						return;
					}
					else if ( funcNotation )
					{
						// Function call
						a[i] = a[i].replace(__reFn, '');
						data = data[ a[i] ]( val );
					}
	
					// If the nested object doesn't currently exist - since we are
					// trying to set the value - create it
					if ( data[ a[i] ] === null || data[ a[i] ] === undefined )
					{
						data[ a[i] ] = {};
					}
					data = data[ a[i] ];
				}
	
				// Last item in the input - i.e, the actual set
				if ( aLast.match(__reFn ) )
				{
					// Function call
					data = data[ aLast.replace(__reFn, '') ]( val );
				}
				else
				{
					// If array notation is used, we just want to strip it and use the property name
					// and assign the value. If it isn't used, then we get the result we want anyway
					data[ aLast.replace(__reArray, '') ] = val;
				}
			};
	
			return function (data, val) { // meta is also passed in, but not used
				return setData( data, val, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, val) { // meta is also passed in, but not used
				data[mSource] = val;
			};
		}
	}
	
	
	/**
	 * Return an array with the full table data
	 *  @param {object} oSettings dataTables settings object
	 *  @returns array {array} aData Master data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetDataMaster ( settings )
	{
		return _pluck( settings.aoData, '_aData' );
	}
	
	
	/**
	 * Nuke the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnClearTable( settings )
	{
		settings.aoData.length = 0;
		settings.aiDisplayMaster.length = 0;
		settings.aiDisplay.length = 0;
		settings.aIds = {};
	}
	
	
	 /**
	 * Take an array of integers (index array) and remove a target integer (value - not
	 * the key!)
	 *  @param {array} a Index array to target
	 *  @param {int} iTarget value to find
	 *  @memberof DataTable#oApi
	 */
	function _fnDeleteIndex( a, iTarget, splice )
	{
		var iTargetIndex = -1;
	
		for ( var i=0, iLen=a.length ; i<iLen ; i++ )
		{
			if ( a[i] == iTarget )
			{
				iTargetIndex = i;
			}
			else if ( a[i] > iTarget )
			{
				a[i]--;
			}
		}
	
		if ( iTargetIndex != -1 && splice === undefined )
		{
			a.splice( iTargetIndex, 1 );
		}
	}
	
	
	/**
	 * Mark cached data as invalid such that a re-read of the data will occur when
	 * the cached data is next requested. Also update from the data source object.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {int}    rowIdx   Row index to invalidate
	 * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
	 *     or 'data'
	 * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
	 *     row will be invalidated
	 * @memberof DataTable#oApi
	 *
	 * @todo For the modularisation of v1.11 this will need to become a callback, so
	 *   the sort and filter methods can subscribe to it. That will required
	 *   initialisation options for sorting, which is why it is not already baked in
	 */
	function _fnInvalidate( settings, rowIdx, src, colIdx )
	{
		var row = settings.aoData[ rowIdx ];
		var i, ien;
		var cellWrite = function ( cell, col ) {
			// This is very frustrating, but in IE if you just write directly
			// to innerHTML, and elements that are overwritten are GC'ed,
			// even if there is a reference to them elsewhere
			while ( cell.childNodes.length ) {
				cell.removeChild( cell.firstChild );
			}
	
			cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );
		};
	
		// Are we reading last data from DOM or the data object?
		if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {
			// Read the data from the DOM
			row._aData = _fnGetRowElements(
					settings, row, colIdx, colIdx === undefined ? undefined : row._aData
				)
				.data;
		}
		else {
			// Reading from data object, update the DOM
			var cells = row.anCells;
	
			if ( cells ) {
				if ( colIdx !== undefined ) {
					cellWrite( cells[colIdx], colIdx );
				}
				else {
					for ( i=0, ien=cells.length ; i<ien ; i++ ) {
						cellWrite( cells[i], i );
					}
				}
			}
		}
	
		// For both row and cell invalidation, the cached data for sorting and
		// filtering is nulled out
		row._aSortData = null;
		row._aFilterData = null;
	
		// Invalidate the type for a specific column (if given) or all columns since
		// the data might have changed
		var cols = settings.aoColumns;
		if ( colIdx !== undefined ) {
			cols[ colIdx ].sType = null;
		}
		else {
			for ( i=0, ien=cols.length ; i<ien ; i++ ) {
				cols[i].sType = null;
			}
	
			// Update DataTables special `DT_*` attributes for the row
			_fnRowAttributes( settings, row );
		}
	}
	
	
	/**
	 * Build a data source object from an HTML row, reading the contents of the
	 * cells that are in the row.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {node|object} TR element from which to read data or existing row
	 *   object from which to re-read the data from the cells
	 * @param {int} [colIdx] Optional column index
	 * @param {array|object} [d] Data source object. If `colIdx` is given then this
	 *   parameter should also be given and will be used to write the data into.
	 *   Only the column in question will be written
	 * @returns {object} Object with two parameters: `data` the data read, in
	 *   document order, and `cells` and array of nodes (they can be useful to the
	 *   caller, so rather than needing a second traversal to get them, just return
	 *   them from here).
	 * @memberof DataTable#oApi
	 */
	function _fnGetRowElements( settings, row, colIdx, d )
	{
		var
			tds = [],
			td = row.firstChild,
			name, col, o, i=0, contents,
			columns = settings.aoColumns,
			objectRead = settings._rowReadObject;
	
		// Allow the data object to be passed in, or construct
		d = d !== undefined ?
			d :
			objectRead ?
				{} :
				[];
	
		var attr = function ( str, td  ) {
			if ( typeof str === 'string' ) {
				var idx = str.indexOf('@');
	
				if ( idx !== -1 ) {
					var attr = str.substring( idx+1 );
					var setter = _fnSetObjectDataFn( str );
					setter( d, td.getAttribute( attr ) );
				}
			}
		};
	
		// Read data from a cell and store into the data object
		var cellProcess = function ( cell ) {
			if ( colIdx === undefined || colIdx === i ) {
				col = columns[i];
				contents = $.trim(cell.innerHTML);
	
				if ( col && col._bAttrSrc ) {
					var setter = _fnSetObjectDataFn( col.mData._ );
					setter( d, contents );
	
					attr( col.mData.sort, cell );
					attr( col.mData.type, cell );
					attr( col.mData.filter, cell );
				}
				else {
					// Depending on the `data` option for the columns the data can
					// be read to either an object or an array.
					if ( objectRead ) {
						if ( ! col._setter ) {
							// Cache the setter function
							col._setter = _fnSetObjectDataFn( col.mData );
						}
						col._setter( d, contents );
					}
					else {
						d[i] = contents;
					}
				}
			}
	
			i++;
		};
	
		if ( td ) {
			// `tr` element was passed in
			while ( td ) {
				name = td.nodeName.toUpperCase();
	
				if ( name == "TD" || name == "TH" ) {
					cellProcess( td );
					tds.push( td );
				}
	
				td = td.nextSibling;
			}
		}
		else {
			// Existing row object passed in
			tds = row.anCells;
	
			for ( var j=0, jen=tds.length ; j<jen ; j++ ) {
				cellProcess( tds[j] );
			}
		}
	
		// Read the ID from the DOM if present
		var rowNode = row.firstChild ? row : row.nTr;
	
		if ( rowNode ) {
			var id = rowNode.getAttribute( 'id' );
	
			if ( id ) {
				_fnSetObjectDataFn( settings.rowId )( d, id );
			}
		}
	
		return {
			data: d,
			cells: tds
		};
	}
	/**
	 * Create a new TR element (and it's TD children) for a row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow Row to consider
	 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @memberof DataTable#oApi
	 */
	function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
	{
		var
			row = oSettings.aoData[iRow],
			rowData = row._aData,
			cells = [],
			nTr, nTd, oCol,
			i, iLen, create;
	
		if ( row.nTr === null )
		{
			nTr = nTrIn || document.createElement('tr');
	
			row.nTr = nTr;
			row.anCells = cells;
	
			/* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
			nTr._DT_RowIndex = iRow;
	
			/* Special parameters can be given by the data source to be used on the row */
			_fnRowAttributes( oSettings, row );
	
			/* Process each column */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				oCol = oSettings.aoColumns[i];
				create = nTrIn ? false : true;
	
				nTd = create ? document.createElement( oCol.sCellType ) : anTds[i];
				nTd._DT_CellIndex = {
					row: iRow,
					column: i
				};
				
				cells.push( nTd );
	
				// Need to create the HTML if new, or if a rendering function is defined
				if ( create || ((!nTrIn || oCol.mRender || oCol.mData !== i) &&
					 (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')
				)) {
					nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );
				}
	
				/* Add user defined class */
				if ( oCol.sClass )
				{
					nTd.className += ' '+oCol.sClass;
				}
	
				// Visibility - add or remove as required
				if ( oCol.bVisible && ! nTrIn )
				{
					nTr.appendChild( nTd );
				}
				else if ( ! oCol.bVisible && nTrIn )
				{
					nTd.parentNode.removeChild( nTd );
				}
	
				if ( oCol.fnCreatedCell )
				{
					oCol.fnCreatedCell.call( oSettings.oInstance,
						nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i
					);
				}
			}
	
			_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );
		}
	
		// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved
		// and deployed
		row.nTr.setAttribute( 'role', 'row' );
	}
	
	
	/**
	 * Add attributes to a row based on the special `DT_*` parameters in a data
	 * source object.
	 *  @param {object} settings DataTables settings object
	 *  @param {object} DataTables row object for the row to be modified
	 *  @memberof DataTable#oApi
	 */
	function _fnRowAttributes( settings, row )
	{
		var tr = row.nTr;
		var data = row._aData;
	
		if ( tr ) {
			var id = settings.rowIdFn( data );
	
			if ( id ) {
				tr.id = id;
			}
	
			if ( data.DT_RowClass ) {
				// Remove any classes added by DT_RowClass before
				var a = data.DT_RowClass.split(' ');
				row.__rowc = row.__rowc ?
					_unique( row.__rowc.concat( a ) ) :
					a;
	
				$(tr)
					.removeClass( row.__rowc.join(' ') )
					.addClass( data.DT_RowClass );
			}
	
			if ( data.DT_RowAttr ) {
				$(tr).attr( data.DT_RowAttr );
			}
	
			if ( data.DT_RowData ) {
				$(tr).data( data.DT_RowData );
			}
		}
	}
	
	
	/**
	 * Create the HTML header for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildHead( oSettings )
	{
		var i, ien, cell, row, column;
		var thead = oSettings.nTHead;
		var tfoot = oSettings.nTFoot;
		var createHeader = $('th, td', thead).length === 0;
		var classes = oSettings.oClasses;
		var columns = oSettings.aoColumns;
	
		if ( createHeader ) {
			row = $('<tr/>').appendTo( thead );
		}
	
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			column = columns[i];
			cell = $( column.nTh ).addClass( column.sClass );
	
			if ( createHeader ) {
				cell.appendTo( row );
			}
	
			// 1.11 move into sorting
			if ( oSettings.oFeatures.bSort ) {
				cell.addClass( column.sSortingClass );
	
				if ( column.bSortable !== false ) {
					cell
						.attr( 'tabindex', oSettings.iTabIndex )
						.attr( 'aria-controls', oSettings.sTableId );
	
					_fnSortAttachListener( oSettings, column.nTh, i );
				}
			}
	
			if ( column.sTitle != cell[0].innerHTML ) {
				cell.html( column.sTitle );
			}
	
			_fnRenderer( oSettings, 'header' )(
				oSettings, cell, column, classes
			);
		}
	
		if ( createHeader ) {
			_fnDetectHeader( oSettings.aoHeader, thead );
		}
		
		/* ARIA role for the rows */
	 	$(thead).find('>tr').attr('role', 'row');
	
		/* Deal with the footer - add classes if required */
		$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );
		$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );
	
		// Cache the footer cells. Note that we only take the cells from the first
		// row in the footer. If there is more than one row the user wants to
		// interact with, they need to use the table().foot() method. Note also this
		// allows cells to be used for multiple columns using colspan
		if ( tfoot !== null ) {
			var cells = oSettings.aoFooter[0];
	
			for ( i=0, ien=cells.length ; i<ien ; i++ ) {
				column = columns[i];
				column.nTf = cells[i].cell;
	
				if ( column.sClass ) {
					$(column.nTf).addClass( column.sClass );
				}
			}
		}
	}
	
	
	/**
	 * Draw the header (or footer) element based on the column visibility states. The
	 * methodology here is to use the layout array from _fnDetectHeader, modified for
	 * the instantaneous column visibility, to construct the new layout. The grid is
	 * traversed over cell at a time in a rows x columns grid fashion, although each
	 * cell insert can cover multiple elements in the grid - which is tracks using the
	 * aApplied array. Cell inserts in the grid will only occur where there isn't
	 * already a cell in that position.
	 *  @param {object} oSettings dataTables settings object
	 *  @param array {objects} aoSource Layout array from _fnDetectHeader
	 *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
	 *  @memberof DataTable#oApi
	 */
	function _fnDrawHead( oSettings, aoSource, bIncludeHidden )
	{
		var i, iLen, j, jLen, k, kLen, n, nLocalTr;
		var aoLocal = [];
		var aApplied = [];
		var iColumns = oSettings.aoColumns.length;
		var iRowspan, iColspan;
	
		if ( ! aoSource )
		{
			return;
		}
	
		if (  bIncludeHidden === undefined )
		{
			bIncludeHidden = false;
		}
	
		/* Make a copy of the master layout array, but without the visible columns in it */
		for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )
		{
			aoLocal[i] = aoSource[i].slice();
			aoLocal[i].nTr = aoSource[i].nTr;
	
			/* Remove any columns which are currently hidden */
			for ( j=iColumns-1 ; j>=0 ; j-- )
			{
				if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )
				{
					aoLocal[i].splice( j, 1 );
				}
			}
	
			/* Prep the applied array - it needs an element for each row */
			aApplied.push( [] );
		}
	
		for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )
		{
			nLocalTr = aoLocal[i].nTr;
	
			/* All cells are going to be replaced, so empty out the row */
			if ( nLocalTr )
			{
				while( (n = nLocalTr.firstChild) )
				{
					nLocalTr.removeChild( n );
				}
			}
	
			for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )
			{
				iRowspan = 1;
				iColspan = 1;
	
				/* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
				if ( aApplied[i][j] === undefined )
				{
					nLocalTr.appendChild( aoLocal[i][j].cell );
					aApplied[i][j] = 1;
	
					/* Expand the cell to cover as many rows as needed */
					while ( aoLocal[i+iRowspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )
					{
						aApplied[i+iRowspan][j] = 1;
						iRowspan++;
					}
	
					/* Expand the cell to cover as many columns as needed */
					while ( aoLocal[i][j+iColspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )
					{
						/* Must update the applied array over the rows for the columns */
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aApplied[i+k][j+iColspan] = 1;
						}
						iColspan++;
					}
	
					/* Do the actual expansion in the DOM */
					$(aoLocal[i][j].cell)
						.attr('rowspan', iRowspan)
						.attr('colspan', iColspan);
				}
			}
		}
	}
	
	
	/**
	 * Insert the required TR nodes into the table for display
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnDraw( oSettings )
	{
		/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
		var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
		if ( $.inArray( false, aPreDraw ) !== -1 )
		{
			_fnProcessingDisplay( oSettings, false );
			return;
		}
	
		var i, iLen, n;
		var anRows = [];
		var iRowCount = 0;
		var asStripeClasses = oSettings.asStripeClasses;
		var iStripes = asStripeClasses.length;
		var iOpenRows = oSettings.aoOpenRows.length;
		var oLang = oSettings.oLanguage;
		var iInitDisplayStart = oSettings.iInitDisplayStart;
		var bServerSide = _fnDataSource( oSettings ) == 'ssp';
		var aiDisplay = oSettings.aiDisplay;
	
		oSettings.bDrawing = true;
	
		/* Check and see if we have an initial draw position from state saving */
		if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )
		{
			oSettings._iDisplayStart = bServerSide ?
				iInitDisplayStart :
				iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
					0 :
					iInitDisplayStart;
	
			oSettings.iInitDisplayStart = -1;
		}
	
		var iDisplayStart = oSettings._iDisplayStart;
		var iDisplayEnd = oSettings.fnDisplayEnd();
	
		/* Server-side processing draw intercept */
		if ( oSettings.bDeferLoading )
		{
			oSettings.bDeferLoading = false;
			oSettings.iDraw++;
			_fnProcessingDisplay( oSettings, false );
		}
		else if ( !bServerSide )
		{
			oSettings.iDraw++;
		}
		else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )
		{
			return;
		}
	
		if ( aiDisplay.length !== 0 )
		{
			var iStart = bServerSide ? 0 : iDisplayStart;
			var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
	
			for ( var j=iStart ; j<iEnd ; j++ )
			{
				var iDataIndex = aiDisplay[j];
				var aoData = oSettings.aoData[ iDataIndex ];
				if ( aoData.nTr === null )
				{
					_fnCreateTr( oSettings, iDataIndex );
				}
	
				var nRow = aoData.nTr;
	
				/* Remove the old striping classes and then add the new one */
				if ( iStripes !== 0 )
				{
					var sStripe = asStripeClasses[ iRowCount % iStripes ];
					if ( aoData._sRowStripe != sStripe )
					{
						$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );
						aoData._sRowStripe = sStripe;
					}
				}
	
				// Row callback functions - might want to manipulate the row
				// iRowCount and j are not currently documented. Are they at all
				// useful?
				_fnCallbackFire( oSettings, 'aoRowCallback', null,
					[nRow, aoData._aData, iRowCount, j, iDataIndex] );
	
				anRows.push( nRow );
				iRowCount++;
			}
		}
		else
		{
			/* Table is empty - create a row with an empty message in it */
			var sZero = oLang.sZeroRecords;
			if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )
			{
				sZero = oLang.sLoadingRecords;
			}
			else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )
			{
				sZero = oLang.sEmptyTable;
			}
	
			anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )
				.append( $('<td />', {
					'valign':  'top',
					'colSpan': _fnVisbleColumns( oSettings ),
					'class':   oSettings.oClasses.sRowEmpty
				} ).html( sZero ) )[0];
		}
	
		/* Header and footer callbacks */
		_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		var body = $(oSettings.nTBody);
	
		body.children().detach();
		body.append( $(anRows) );
	
		/* Call all required callback functions for the end of a draw */
		_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );
	
		/* Draw is complete, sorting and filtering must be as well */
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		oSettings.bDrawing = false;
	}
	
	
	/**
	 * Redraw the table - taking account of the various features which are enabled
	 *  @param {object} oSettings dataTables settings object
	 *  @param {boolean} [holdPosition] Keep the current paging position. By default
	 *    the paging is reset to the first page
	 *  @memberof DataTable#oApi
	 */
	function _fnReDraw( settings, holdPosition )
	{
		var
			features = settings.oFeatures,
			sort     = features.bSort,
			filter   = features.bFilter;
	
		if ( sort ) {
			_fnSort( settings );
		}
	
		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	
		if ( holdPosition !== true ) {
			settings._iDisplayStart = 0;
		}
	
		// Let any modules know about the draw hold position state (used by
		// scrolling internally)
		settings._drawHold = holdPosition;
	
		_fnDraw( settings );
	
		settings._drawHold = false;
	}
	
	
	/**
	 * Add the options to the page HTML for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAddOptionsHtml ( oSettings )
	{
		var classes = oSettings.oClasses;
		var table = $(oSettings.nTable);
		var holding = $('<div/>').insertBefore( table ); // Holding element for speed
		var features = oSettings.oFeatures;
	
		// All DataTables are wrapped in a div
		var insert = $('<div/>', {
			id:      oSettings.sTableId+'_wrapper',
			'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)
		} );
	
		oSettings.nHolding = holding[0];
		oSettings.nTableWrapper = insert[0];
		oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
	
		/* Loop over the user set positioning and place the elements as needed */
		var aDom = oSettings.sDom.split('');
		var featureNode, cOption, nNewNode, cNext, sAttr, j;
		for ( var i=0 ; i<aDom.length ; i++ )
		{
			featureNode = null;
			cOption = aDom[i];
	
			if ( cOption == '<' )
			{
				/* New container div */
				nNewNode = $('<div/>')[0];
	
				/* Check to see if we should append an id and/or a class name to the container */
				cNext = aDom[i+1];
				if ( cNext == "'" || cNext == '"' )
				{
					sAttr = "";
					j = 2;
					while ( aDom[i+j] != cNext )
					{
						sAttr += aDom[i+j];
						j++;
					}
	
					/* Replace jQuery UI constants @todo depreciated */
					if ( sAttr == "H" )
					{
						sAttr = classes.sJUIHeader;
					}
					else if ( sAttr == "F" )
					{
						sAttr = classes.sJUIFooter;
					}
	
					/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
					if ( sAttr.indexOf('.') != -1 )
					{
						var aSplit = sAttr.split('.');
						nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);
						nNewNode.className = aSplit[1];
					}
					else if ( sAttr.charAt(0) == "#" )
					{
						nNewNode.id = sAttr.substr(1, sAttr.length-1);
					}
					else
					{
						nNewNode.className = sAttr;
					}
	
					i += j; /* Move along the position array */
				}
	
				insert.append( nNewNode );
				insert = $(nNewNode);
			}
			else if ( cOption == '>' )
			{
				/* End container div */
				insert = insert.parent();
			}
			// @todo Move options into their own plugins?
			else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )
			{
				/* Length */
				featureNode = _fnFeatureHtmlLength( oSettings );
			}
			else if ( cOption == 'f' && features.bFilter )
			{
				/* Filter */
				featureNode = _fnFeatureHtmlFilter( oSettings );
			}
			else if ( cOption == 'r' && features.bProcessing )
			{
				/* pRocessing */
				featureNode = _fnFeatureHtmlProcessing( oSettings );
			}
			else if ( cOption == 't' )
			{
				/* Table */
				featureNode = _fnFeatureHtmlTable( oSettings );
			}
			else if ( cOption ==  'i' && features.bInfo )
			{
				/* Info */
				featureNode = _fnFeatureHtmlInfo( oSettings );
			}
			else if ( cOption == 'p' && features.bPaginate )
			{
				/* Pagination */
				featureNode = _fnFeatureHtmlPaginate( oSettings );
			}
			else if ( DataTable.ext.feature.length !== 0 )
			{
				/* Plug-in features */
				var aoFeatures = DataTable.ext.feature;
				for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )
				{
					if ( cOption == aoFeatures[k].cFeature )
					{
						featureNode = aoFeatures[k].fnInit( oSettings );
						break;
					}
				}
			}
	
			/* Add to the 2D features array */
			if ( featureNode )
			{
				var aanFeatures = oSettings.aanFeatures;
	
				if ( ! aanFeatures[cOption] )
				{
					aanFeatures[cOption] = [];
				}
	
				aanFeatures[cOption].push( featureNode );
				insert.append( featureNode );
			}
		}
	
		/* Built our DOM structure - replace the holding div with what we want */
		holding.replaceWith( insert );
		oSettings.nHolding = null;
	}
	
	
	/**
	 * Use the DOM source to create up an array of header cells. The idea here is to
	 * create a layout grid (array) of rows x columns, which contains a reference
	 * to the cell that that point in the grid (regardless of col/rowspan), such that
	 * any column / row could be removed and the new grid constructed
	 *  @param array {object} aLayout Array to store the calculated layout in
	 *  @param {node} nThead The header/footer element for the table
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectHeader ( aLayout, nThead )
	{
		var nTrs = $(nThead).children('tr');
		var nTr, nCell;
		var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
		var bUnique;
		var fnShiftCol = function ( a, i, j ) {
			var k = a[i];
	                while ( k[j] ) {
				j++;
			}
			return j;
		};
	
		aLayout.splice( 0, aLayout.length );
	
		/* We know how many rows there are in the layout - so prep it */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			aLayout.push( [] );
		}
	
		/* Calculate a layout array */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			nTr = nTrs[i];
			iColumn = 0;
	
			/* For every cell in the row... */
			nCell = nTr.firstChild;
			while ( nCell ) {
				if ( nCell.nodeName.toUpperCase() == "TD" ||
				     nCell.nodeName.toUpperCase() == "TH" )
				{
					/* Get the col and rowspan attributes from the DOM and sanitise them */
					iColspan = nCell.getAttribute('colspan') * 1;
					iRowspan = nCell.getAttribute('rowspan') * 1;
					iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;
					iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;
	
					/* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
					iColShifted = fnShiftCol( aLayout, i, iColumn );
	
					/* Cache calculation for unique columns */
					bUnique = iColspan === 1 ? true : false;
	
					/* If there is col / rowspan, copy the information into the layout grid */
					for ( l=0 ; l<iColspan ; l++ )
					{
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aLayout[i+k][iColShifted+l] = {
								"cell": nCell,
								"unique": bUnique
							};
							aLayout[i+k].nTr = nTr;
						}
					}
				}
				nCell = nCell.nextSibling;
			}
		}
	}
	
	
	/**
	 * Get an array of unique th elements, one for each column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nHeader automatically detect the layout from this node - optional
	 *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
	 *  @returns array {node} aReturn list of unique th's
	 *  @memberof DataTable#oApi
	 */
	function _fnGetUniqueThs ( oSettings, nHeader, aLayout )
	{
		var aReturn = [];
		if ( !aLayout )
		{
			aLayout = oSettings.aoHeader;
			if ( nHeader )
			{
				aLayout = [];
				_fnDetectHeader( aLayout, nHeader );
			}
		}
	
		for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )
		{
			for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )
			{
				if ( aLayout[i][j].unique &&
					 (!aReturn[j] || !oSettings.bSortCellsTop) )
				{
					aReturn[j] = aLayout[i][j].cell;
				}
			}
		}
	
		return aReturn;
	}
	
	/**
	 * Create an Ajax call based on the table's settings, taking into account that
	 * parameters can have multiple forms, and backwards compatibility.
	 *
	 * @param {object} oSettings dataTables settings object
	 * @param {array} data Data to send to the server, required by
	 *     DataTables - may be augmented by developer callbacks
	 * @param {function} fn Callback function to run when data is obtained
	 */
	function _fnBuildAjax( oSettings, data, fn )
	{
		// Compatibility with 1.9-, allow fnServerData and event to manipulate
		_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );
	
		// Convert to object based for 1.10+ if using the old array scheme which can
		// come from server-side processing or serverParams
		if ( data && $.isArray(data) ) {
			var tmp = {};
			var rbracket = /(.*?)\[\]$/;
	
			$.each( data, function (key, val) {
				var match = val.name.match(rbracket);
	
				if ( match ) {
					// Support for arrays
					var name = match[0];
	
					if ( ! tmp[ name ] ) {
						tmp[ name ] = [];
					}
					tmp[ name ].push( val.value );
				}
				else {
					tmp[val.name] = val.value;
				}
			} );
			data = tmp;
		}
	
		var ajaxData;
		var ajax = oSettings.ajax;
		var instance = oSettings.oInstance;
		var callback = function ( json ) {
			_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );
			fn( json );
		};
	
		if ( $.isPlainObject( ajax ) && ajax.data )
		{
			ajaxData = ajax.data;
	
			var newData = typeof ajaxData === 'function' ?
				ajaxData( data, oSettings ) :  // fn can manipulate data or return
				ajaxData;                      // an object object or array to merge
	
			// If the function returned something, use that alone
			data = typeof ajaxData === 'function' && newData ?
				newData :
				$.extend( true, data, newData );
	
			// Remove the data property as we've resolved it already and don't want
			// jQuery to do it again (it is restored at the end of the function)
			delete ajax.data;
		}
	
		var baseAjax = {
			"data": data,
			"success": function (json) {
				var error = json.error || json.sError;
				if ( error ) {
					_fnLog( oSettings, 0, error );
				}
	
				oSettings.json = json;
				callback( json );
			},
			"dataType": "json",
			"cache": false,
			"type": oSettings.sServerMethod,
			"error": function (xhr, error, thrown) {
				var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );
	
				if ( $.inArray( true, ret ) === -1 ) {
					if ( error == "parsererror" ) {
						_fnLog( oSettings, 0, 'Invalid JSON response', 1 );
					}
					else if ( xhr.readyState === 4 ) {
						_fnLog( oSettings, 0, 'Ajax error', 7 );
					}
				}
	
				_fnProcessingDisplay( oSettings, false );
			}
		};
	
		// Store the data submitted for the API
		oSettings.oAjaxData = data;
	
		// Allow plug-ins and external processes to modify the data
		_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );
	
		if ( oSettings.fnServerData )
		{
			// DataTables 1.9- compatibility
			oSettings.fnServerData.call( instance,
				oSettings.sAjaxSource,
				$.map( data, function (val, key) { // Need to convert back to 1.9 trad format
					return { name: key, value: val };
				} ),
				callback,
				oSettings
			);
		}
		else if ( oSettings.sAjaxSource || typeof ajax === 'string' )
		{
			// DataTables 1.9- compatibility
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, {
				url: ajax || oSettings.sAjaxSource
			} ) );
		}
		else if ( typeof ajax === 'function' )
		{
			// Is a function - let the caller define what needs to be done
			oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );
		}
		else
		{
			// Object to extend the base settings
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );
	
			// Restore for next time around
			ajax.data = ajaxData;
		}
	}
	
	
	/**
	 * Update the table using an Ajax call
	 *  @param {object} settings dataTables settings object
	 *  @returns {boolean} Block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdate( settings )
	{
		if ( settings.bAjaxDataGet ) {
			settings.iDraw++;
			_fnProcessingDisplay( settings, true );
	
			_fnBuildAjax(
				settings,
				_fnAjaxParameters( settings ),
				function(json) {
					_fnAjaxUpdateDraw( settings, json );
				}
			);
	
			return false;
		}
		return true;
	}
	
	
	/**
	 * Build up the parameters in an object needed for a server-side processing
	 * request. Note that this is basically done twice, is different ways - a modern
	 * method which is used by default in DataTables 1.10 which uses objects and
	 * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if
	 * the sAjaxSource option is used in the initialisation, or the legacyAjax
	 * option is set.
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {bool} block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxParameters( settings )
	{
		var
			columns = settings.aoColumns,
			columnCount = columns.length,
			features = settings.oFeatures,
			preSearch = settings.oPreviousSearch,
			preColSearch = settings.aoPreSearchCols,
			i, data = [], dataProp, column, columnSearch,
			sort = _fnSortFlatten( settings ),
			displayStart = settings._iDisplayStart,
			displayLength = features.bPaginate !== false ?
				settings._iDisplayLength :
				-1;
	
		var param = function ( name, value ) {
			data.push( { 'name': name, 'value': value } );
		};
	
		// DataTables 1.9- compatible method
		param( 'sEcho',          settings.iDraw );
		param( 'iColumns',       columnCount );
		param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );
		param( 'iDisplayStart',  displayStart );
		param( 'iDisplayLength', displayLength );
	
		// DataTables 1.10+ method
		var d = {
			draw:    settings.iDraw,
			columns: [],
			order:   [],
			start:   displayStart,
			length:  displayLength,
			search:  {
				value: preSearch.sSearch,
				regex: preSearch.bRegex
			}
		};
	
		for ( i=0 ; i<columnCount ; i++ ) {
			column = columns[i];
			columnSearch = preColSearch[i];
			dataProp = typeof column.mData=="function" ? 'function' : column.mData ;
	
			d.columns.push( {
				data:       dataProp,
				name:       column.sName,
				searchable: column.bSearchable,
				orderable:  column.bSortable,
				search:     {
					value: columnSearch.sSearch,
					regex: columnSearch.bRegex
				}
			} );
	
			param( "mDataProp_"+i, dataProp );
	
			if ( features.bFilter ) {
				param( 'sSearch_'+i,     columnSearch.sSearch );
				param( 'bRegex_'+i,      columnSearch.bRegex );
				param( 'bSearchable_'+i, column.bSearchable );
			}
	
			if ( features.bSort ) {
				param( 'bSortable_'+i, column.bSortable );
			}
		}
	
		if ( features.bFilter ) {
			param( 'sSearch', preSearch.sSearch );
			param( 'bRegex', preSearch.bRegex );
		}
	
		if ( features.bSort ) {
			$.each( sort, function ( i, val ) {
				d.order.push( { column: val.col, dir: val.dir } );
	
				param( 'iSortCol_'+i, val.col );
				param( 'sSortDir_'+i, val.dir );
			} );
	
			param( 'iSortingCols', sort.length );
		}
	
		// If the legacy.ajax parameter is null, then we automatically decide which
		// form to use, based on sAjaxSource
		var legacy = DataTable.ext.legacy.ajax;
		if ( legacy === null ) {
			return settings.sAjaxSource ? data : d;
		}
	
		// Otherwise, if legacy has been specified then we use that to decide on the
		// form
		return legacy ? data : d;
	}
	
	
	/**
	 * Data the data from the server (nuking the old) and redraw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} json json data return from the server.
	 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
	 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
	 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
	 *  @param {array} json.aaData The data to display on this page
	 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdateDraw ( settings, json )
	{
		// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.
		// Support both
		var compat = function ( old, modern ) {
			return json[old] !== undefined ? json[old] : json[modern];
		};
	
		var data = _fnAjaxDataSrc( settings, json );
		var draw            = compat( 'sEcho',                'draw' );
		var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );
		var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );
	
		if ( draw !== undefined ) {
			// Protect against out of sequence returns
			if ( draw*1 < settings.iDraw ) {
				return;
			}
			settings.iDraw = draw * 1;
		}
	
		_fnClearTable( settings );
		settings._iRecordsTotal   = parseInt(recordsTotal, 10);
		settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
	
		for ( var i=0, ien=data.length ; i<ien ; i++ ) {
			_fnAddData( settings, data[i] );
		}
		settings.aiDisplay = settings.aiDisplayMaster.slice();
	
		settings.bAjaxDataGet = false;
		_fnDraw( settings );
	
		if ( ! settings._bInitComplete ) {
			_fnInitComplete( settings, json );
		}
	
		settings.bAjaxDataGet = true;
		_fnProcessingDisplay( settings, false );
	}
	
	
	/**
	 * Get the data from the JSON data source to use for drawing a table. Using
	 * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
	 * source object, or from a processing function.
	 *  @param {object} oSettings dataTables settings object
	 *  @param  {object} json Data source object / array from the server
	 *  @return {array} Array of data to use
	 */
	function _fnAjaxDataSrc ( oSettings, json )
	{
		var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?
			oSettings.ajax.dataSrc :
			oSettings.sAjaxDataProp; // Compatibility with 1.9-.
	
		// Compatibility with 1.9-. In order to read from aaData, check if the
		// default has been changed, if not, check for aaData
		if ( dataSrc === 'data' ) {
			return json.aaData || json[dataSrc];
		}
	
		return dataSrc !== "" ?
			_fnGetObjectDataFn( dataSrc )( json ) :
			json;
	}
	
	/**
	 * Generate the node required for filtering text
	 *  @returns {node} Filter control element
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlFilter ( settings )
	{
		var classes = settings.oClasses;
		var tableId = settings.sTableId;
		var language = settings.oLanguage;
		var previousSearch = settings.oPreviousSearch;
		var features = settings.aanFeatures;
		var input = '<input type="search" class="'+classes.sFilterInput+'"/>';
	
		var str = language.sSearch;
		str = str.match(/_INPUT_/) ?
			str.replace('_INPUT_', input) :
			str+input;
	
		var filter = $('<div/>', {
				'id': ! features.f ? tableId+'_filter' : null,
				'class': classes.sFilter
			} )
			.append( $('<label/>' ).append( str ) );
	
		var searchFn = function() {
			/* Update all other filter input elements for the new display */
			var n = features.f;
			var val = !this.value ? "" : this.value; // mental IE8 fix :-(
	
			/* Now do the filter */
			if ( val != previousSearch.sSearch ) {
				_fnFilterComplete( settings, {
					"sSearch": val,
					"bRegex": previousSearch.bRegex,
					"bSmart": previousSearch.bSmart ,
					"bCaseInsensitive": previousSearch.bCaseInsensitive
				} );
	
				// Need to redraw, without resorting
				settings._iDisplayStart = 0;
				_fnDraw( settings );
			}
		};
	
		var searchDelay = settings.searchDelay !== null ?
			settings.searchDelay :
			_fnDataSource( settings ) === 'ssp' ?
				400 :
				0;
	
		var jqFilter = $('input', filter)
			.val( previousSearch.sSearch )
			.attr( 'placeholder', language.sSearchPlaceholder )
			.on(
				'keyup.DT search.DT input.DT paste.DT cut.DT',
				searchDelay ?
					_fnThrottle( searchFn, searchDelay ) :
					searchFn
			)
			.on( 'mouseup', function(e) {
				// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking
				// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`
				// checks the value to see if it has changed. In other browsers it won't have.
				setTimeout( function () {
					searchFn.call(jqFilter[0]);
				}, 10);
			} )
			.on( 'keypress.DT', function(e) {
				/* Prevent form submission */
				if ( e.keyCode == 13 ) {
					return false;
				}
			} )
			.attr('aria-controls', tableId);
	
		// Update the input elements whenever the table is filtered
		$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {
			if ( settings === s ) {
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame...
				try {
					if ( jqFilter[0] !== document.activeElement ) {
						jqFilter.val( previousSearch.sSearch );
					}
				}
				catch ( e ) {}
			}
		} );
	
		return filter[0];
	}
	
	
	/**
	 * Filter the table using both the global filter and column based filtering
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oSearch search information
	 *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterComplete ( oSettings, oInput, iForce )
	{
		var oPrevSearch = oSettings.oPreviousSearch;
		var aoPrevSearch = oSettings.aoPreSearchCols;
		var fnSaveFilter = function ( oFilter ) {
			/* Save the filtering values */
			oPrevSearch.sSearch = oFilter.sSearch;
			oPrevSearch.bRegex = oFilter.bRegex;
			oPrevSearch.bSmart = oFilter.bSmart;
			oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
		};
		var fnRegex = function ( o ) {
			// Backwards compatibility with the bEscapeRegex option
			return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;
		};
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo As per sort - can this be moved into an event handler?
		_fnColumnTypes( oSettings );
	
		/* In server-side processing all filtering is done by the server, so no point hanging around here */
		if ( _fnDataSource( oSettings ) != 'ssp' )
		{
			/* Global filter */
			_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );
			fnSaveFilter( oInput );
	
			/* Now do the individual column filter */
			for ( var i=0 ; i<aoPrevSearch.length ; i++ )
			{
				_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),
					aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );
			}
	
			/* Custom filtering */
			_fnFilterCustom( oSettings );
		}
		else
		{
			fnSaveFilter( oInput );
		}
	
		/* Tell the draw function we have been filtering */
		oSettings.bFiltered = true;
		_fnCallbackFire( oSettings, null, 'search', [oSettings] );
	}
	
	
	/**
	 * Apply custom filtering functions
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCustom( settings )
	{
		var filters = DataTable.ext.search;
		var displayRows = settings.aiDisplay;
		var row, rowIdx;
	
		for ( var i=0, ien=filters.length ; i<ien ; i++ ) {
			var rows = [];
	
			// Loop over each row and see if it should be included
			for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {
				rowIdx = displayRows[ j ];
				row = settings.aoData[ rowIdx ];
	
				if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {
					rows.push( rowIdx );
				}
			}
	
			// So the array reference doesn't break set the results into the
			// existing array
			displayRows.length = 0;
			$.merge( displayRows, rows );
		}
	}
	
	
	/**
	 * Filter the table on a per-column basis
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iColumn column to filter
	 *  @param {bool} bRegex treat search string as a regular expression or not
	 *  @param {bool} bSmart use smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )
	{
		if ( searchStr === '' ) {
			return;
		}
	
		var data;
		var out = [];
		var display = settings.aiDisplay;
		var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );
	
		for ( var i=0 ; i<display.length ; i++ ) {
			data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];
	
			if ( rpSearch.test( data ) ) {
				out.push( display[i] );
			}
		}
	
		settings.aiDisplay = out;
	}
	
	
	/**
	 * Filter the data table based on user input and draw the table
	 *  @param {object} settings dataTables settings object
	 *  @param {string} input string to filter on
	 *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)
	 *  @param {bool} regex treat as a regular expression or not
	 *  @param {bool} smart perform smart filtering or not
	 *  @param {bool} caseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilter( settings, input, force, regex, smart, caseInsensitive )
	{
		var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );
		var prevSearch = settings.oPreviousSearch.sSearch;
		var displayMaster = settings.aiDisplayMaster;
		var display, invalidated, i;
		var filtered = [];
	
		// Need to take account of custom filtering functions - always filter
		if ( DataTable.ext.search.length !== 0 ) {
			force = true;
		}
	
		// Check if any of the rows were invalidated
		invalidated = _fnFilterData( settings );
	
		// If the input is blank - we just want the full data set
		if ( input.length <= 0 ) {
			settings.aiDisplay = displayMaster.slice();
		}
		else {
			// New search - start from the master array
			if ( invalidated ||
				 force ||
				 regex ||
				 prevSearch.length > input.length ||
				 input.indexOf(prevSearch) !== 0 ||
				 settings.bSorted // On resort, the display master needs to be
				                  // re-filtered since indexes will have changed
			) {
				settings.aiDisplay = displayMaster.slice();
			}
	
			// Search the display array
			display = settings.aiDisplay;
	
			for ( i=0 ; i<display.length ; i++ ) {
				if ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {
					filtered.push( display[i] );
				}
			}
	
			settings.aiDisplay = filtered;
		}
	}
	
	
	/**
	 * Build a regular expression object suitable for searching a table
	 *  @param {string} sSearch string to search for
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @returns {RegExp} constructed object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )
	{
		search = regex ?
			search :
			_fnEscapeRegex( search );
		
		if ( smart ) {
			/* For smart filtering we want to allow the search to work regardless of
			 * word order. We also want double quoted text to be preserved, so word
			 * order is important - a la google. So this is what we want to
			 * generate:
			 * 
			 * ^(?=.*?\bone\b)(?=.*?\btwo three\b)(?=.*?\bfour\b).*$
			 */
			var a = $.map( search.match( /"[^"]+"|[^ ]+/g ) || [''], function ( word ) {
				if ( word.charAt(0) === '"' ) {
					var m = word.match( /^"(.*)"$/ );
					word = m ? m[1] : word;
				}
	
				return word.replace('"', '');
			} );
	
			search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';
		}
	
		return new RegExp( search, caseInsensitive ? 'i' : '' );
	}
	
	
	/**
	 * Escape a string such that it can be used in a regular expression
	 *  @param {string} sVal string to escape
	 *  @returns {string} escaped string
	 *  @memberof DataTable#oApi
	 */
	var _fnEscapeRegex = DataTable.util.escapeRegex;
	
	var __filter_div = $('<div>')[0];
	var __filter_div_textContent = __filter_div.textContent !== undefined;
	
	// Update the filtering data for each row if needed (by invalidation or first run)
	function _fnFilterData ( settings )
	{
		var columns = settings.aoColumns;
		var column;
		var i, j, ien, jen, filterData, cellData, row;
		var fomatters = DataTable.ext.type.search;
		var wasInvalidated = false;
	
		for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aFilterData ) {
				filterData = [];
	
				for ( j=0, jen=columns.length ; j<jen ; j++ ) {
					column = columns[j];
	
					if ( column.bSearchable ) {
						cellData = _fnGetCellData( settings, i, j, 'filter' );
	
						if ( fomatters[ column.sType ] ) {
							cellData = fomatters[ column.sType ]( cellData );
						}
	
						// Search in DataTables 1.10 is string based. In 1.11 this
						// should be altered to also allow strict type checking.
						if ( cellData === null ) {
							cellData = '';
						}
	
						if ( typeof cellData !== 'string' && cellData.toString ) {
							cellData = cellData.toString();
						}
					}
					else {
						cellData = '';
					}
	
					// If it looks like there is an HTML entity in the string,
					// attempt to decode it so sorting works as expected. Note that
					// we could use a single line of jQuery to do this, but the DOM
					// method used here is much faster http://jsperf.com/html-decode
					if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {
						__filter_div.innerHTML = cellData;
						cellData = __filter_div_textContent ?
							__filter_div.textContent :
							__filter_div.innerText;
					}
	
					if ( cellData.replace ) {
						cellData = cellData.replace(/[\r\n\u2028]/g, '');
					}
	
					filterData.push( cellData );
				}
	
				row._aFilterData = filterData;
				row._sFilterRow = filterData.join('  ');
				wasInvalidated = true;
			}
		}
	
		return wasInvalidated;
	}
	
	
	/**
	 * Convert from the internal Hungarian notation to camelCase for external
	 * interaction
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToCamel ( obj )
	{
		return {
			search:          obj.sSearch,
			smart:           obj.bSmart,
			regex:           obj.bRegex,
			caseInsensitive: obj.bCaseInsensitive
		};
	}
	
	
	
	/**
	 * Convert from camelCase notation to the internal Hungarian. We could use the
	 * Hungarian convert function here, but this is cleaner
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToHung ( obj )
	{
		return {
			sSearch:          obj.search,
			bSmart:           obj.smart,
			bRegex:           obj.regex,
			bCaseInsensitive: obj.caseInsensitive
		};
	}
	
	/**
	 * Generate the node required for the info display
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Information element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlInfo ( settings )
	{
		var
			tid = settings.sTableId,
			nodes = settings.aanFeatures.i,
			n = $('<div/>', {
				'class': settings.oClasses.sInfo,
				'id': ! nodes ? tid+'_info' : null
			} );
	
		if ( ! nodes ) {
			// Update display on each draw
			settings.aoDrawCallback.push( {
				"fn": _fnUpdateInfo,
				"sName": "information"
			} );
	
			n
				.attr( 'role', 'status' )
				.attr( 'aria-live', 'polite' );
	
			// Table is described by our info div
			$(settings.nTable).attr( 'aria-describedby', tid+'_info' );
		}
	
		return n[0];
	}
	
	
	/**
	 * Update the information elements in the display
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnUpdateInfo ( settings )
	{
		/* Show information about the table */
		var nodes = settings.aanFeatures.i;
		if ( nodes.length === 0 ) {
			return;
		}
	
		var
			lang  = settings.oLanguage,
			start = settings._iDisplayStart+1,
			end   = settings.fnDisplayEnd(),
			max   = settings.fnRecordsTotal(),
			total = settings.fnRecordsDisplay(),
			out   = total ?
				lang.sInfo :
				lang.sInfoEmpty;
	
		if ( total !== max ) {
			/* Record set after filtering */
			out += ' ' + lang.sInfoFiltered;
		}
	
		// Convert the macros
		out += lang.sInfoPostFix;
		out = _fnInfoMacros( settings, out );
	
		var callback = lang.fnInfoCallback;
		if ( callback !== null ) {
			out = callback.call( settings.oInstance,
				settings, start, end, max, total, out
			);
		}
	
		$(nodes).html( out );
	}
	
	
	function _fnInfoMacros ( settings, str )
	{
		// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
		// internally
		var
			formatter  = settings.fnFormatNumber,
			start      = settings._iDisplayStart+1,
			len        = settings._iDisplayLength,
			vis        = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return str.
			replace(/_START_/g, formatter.call( settings, start ) ).
			replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).
			replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).
			replace(/_TOTAL_/g, formatter.call( settings, vis ) ).
			replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).
			replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );
	}
	
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnInitialise ( settings )
	{
		var i, iLen, iAjaxStart=settings.iInitDisplayStart;
		var columns = settings.aoColumns, column;
		var features = settings.oFeatures;
		var deferLoading = settings.bDeferLoading; // value modified by the draw
	
		/* Ensure that the table data is fully initialised */
		if ( ! settings.bInitialised ) {
			setTimeout( function(){ _fnInitialise( settings ); }, 200 );
			return;
		}
	
		/* Show the display HTML options */
		_fnAddOptionsHtml( settings );
	
		/* Build and draw the header / footer for the table */
		_fnBuildHead( settings );
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		/* Okay to show that something is going on now */
		_fnProcessingDisplay( settings, true );
	
		/* Calculate sizes for columns */
		if ( features.bAutoWidth ) {
			_fnCalculateColumnWidths( settings );
		}
	
		for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {
			column = columns[i];
	
			if ( column.sWidth ) {
				column.nTh.style.width = _fnStringToCss( column.sWidth );
			}
		}
	
		_fnCallbackFire( settings, null, 'preInit', [settings] );
	
		// If there is default sorting required - let's do it. The sort function
		// will do the drawing for us. Otherwise we draw the table regardless of the
		// Ajax source - this allows the table to look initialised for Ajax sourcing
		// data (show 'loading' message possibly)
		_fnReDraw( settings );
	
		// Server-side processing init complete is done by _fnAjaxUpdateDraw
		var dataSrc = _fnDataSource( settings );
		if ( dataSrc != 'ssp' || deferLoading ) {
			// if there is an ajax source load the data
			if ( dataSrc == 'ajax' ) {
				_fnBuildAjax( settings, [], function(json) {
					var aData = _fnAjaxDataSrc( settings, json );
	
					// Got the data - add it to the table
					for ( i=0 ; i<aData.length ; i++ ) {
						_fnAddData( settings, aData[i] );
					}
	
					// Reset the init display for cookie saving. We've already done
					// a filter, and therefore cleared it before. So we need to make
					// it appear 'fresh'
					settings.iInitDisplayStart = iAjaxStart;
	
					_fnReDraw( settings );
	
					_fnProcessingDisplay( settings, false );
					_fnInitComplete( settings, json );
				}, settings );
			}
			else {
				_fnProcessingDisplay( settings, false );
				_fnInitComplete( settings );
			}
		}
	}
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
	 *    with client-side processing (optional)
	 *  @memberof DataTable#oApi
	 */
	function _fnInitComplete ( settings, json )
	{
		settings._bInitComplete = true;
	
		// When data was added after the initialisation (data or Ajax) we need to
		// calculate the column sizing
		if ( json || settings.oInit.aaData ) {
			_fnAdjustColumnSizing( settings );
		}
	
		_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );
		_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );
	}
	
	
	function _fnLengthChange ( settings, val )
	{
		var len = parseInt( val, 10 );
		settings._iDisplayLength = len;
	
		_fnLengthOverflow( settings );
	
		// Fire length change event
		_fnCallbackFire( settings, null, 'length', [settings, len] );
	}
	
	
	/**
	 * Generate the node required for user display length changing
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Display length feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlLength ( settings )
	{
		var
			classes  = settings.oClasses,
			tableId  = settings.sTableId,
			menu     = settings.aLengthMenu,
			d2       = $.isArray( menu[0] ),
			lengths  = d2 ? menu[0] : menu,
			language = d2 ? menu[1] : menu;
	
		var select = $('<select/>', {
			'name':          tableId+'_length',
			'aria-controls': tableId,
			'class':         classes.sLengthSelect
		} );
	
		for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {
			select[0][ i ] = new Option(
				typeof language[i] === 'number' ?
					settings.fnFormatNumber( language[i] ) :
					language[i],
				lengths[i]
			);
		}
	
		var div = $('<div><label/></div>').addClass( classes.sLength );
		if ( ! settings.aanFeatures.l ) {
			div[0].id = tableId+'_length';
		}
	
		div.children().append(
			settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )
		);
	
		// Can't use `select` variable as user might provide their own and the
		// reference is broken by the use of outerHTML
		$('select', div)
			.val( settings._iDisplayLength )
			.on( 'change.DT', function(e) {
				_fnLengthChange( settings, $(this).val() );
				_fnDraw( settings );
			} );
	
		// Update node value whenever anything changes the table's length
		$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {
			if ( settings === s ) {
				$('select', div).val( len );
			}
		} );
	
		return div[0];
	}
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.pager
	 */
	
	/**
	 * Generate the node required for default pagination
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Pagination feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlPaginate ( settings )
	{
		var
			type   = settings.sPaginationType,
			plugin = DataTable.ext.pager[ type ],
			modern = typeof plugin === 'function',
			redraw = function( settings ) {
				_fnDraw( settings );
			},
			node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],
			features = settings.aanFeatures;
	
		if ( ! modern ) {
			plugin.fnInit( settings, node, redraw );
		}
	
		/* Add a draw callback for the pagination on first instance, to update the paging display */
		if ( ! features.p )
		{
			node.id = settings.sTableId+'_paginate';
	
			settings.aoDrawCallback.push( {
				"fn": function( settings ) {
					if ( modern ) {
						var
							start      = settings._iDisplayStart,
							len        = settings._iDisplayLength,
							visRecords = settings.fnRecordsDisplay(),
							all        = len === -1,
							page = all ? 0 : Math.ceil( start / len ),
							pages = all ? 1 : Math.ceil( visRecords / len ),
							buttons = plugin(page, pages),
							i, ien;
	
						for ( i=0, ien=features.p.length ; i<ien ; i++ ) {
							_fnRenderer( settings, 'pageButton' )(
								settings, features.p[i], i, buttons, page, pages
							);
						}
					}
					else {
						plugin.fnUpdate( settings, redraw );
					}
				},
				"sName": "pagination"
			} );
		}
	
		return node;
	}
	
	
	/**
	 * Alter the display settings to change the page
	 *  @param {object} settings DataTables settings object
	 *  @param {string|int} action Paging action to take: "first", "previous",
	 *    "next" or "last" or page number to jump to (integer)
	 *  @param [bool] redraw Automatically draw the update or not
	 *  @returns {bool} true page has changed, false - no change
	 *  @memberof DataTable#oApi
	 */
	function _fnPageChange ( settings, action, redraw )
	{
		var
			start     = settings._iDisplayStart,
			len       = settings._iDisplayLength,
			records   = settings.fnRecordsDisplay();
	
		if ( records === 0 || len === -1 )
		{
			start = 0;
		}
		else if ( typeof action === "number" )
		{
			start = action * len;
	
			if ( start > records )
			{
				start = 0;
			}
		}
		else if ( action == "first" )
		{
			start = 0;
		}
		else if ( action == "previous" )
		{
			start = len >= 0 ?
				start - len :
				0;
	
			if ( start < 0 )
			{
			  start = 0;
			}
		}
		else if ( action == "next" )
		{
			if ( start + len < records )
			{
				start += len;
			}
		}
		else if ( action == "last" )
		{
			start = Math.floor( (records-1) / len) * len;
		}
		else
		{
			_fnLog( settings, 0, "Unknown paging action: "+action, 5 );
		}
	
		var changed = settings._iDisplayStart !== start;
		settings._iDisplayStart = start;
	
		if ( changed ) {
			_fnCallbackFire( settings, null, 'page', [settings] );
	
			if ( redraw ) {
				_fnDraw( settings );
			}
		}
	
		return changed;
	}
	
	
	
	/**
	 * Generate the node required for the processing node
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Processing element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlProcessing ( settings )
	{
		return $('<div/>', {
				'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,
				'class': settings.oClasses.sProcessing
			} )
			.html( settings.oLanguage.sProcessing )
			.insertBefore( settings.nTable )[0];
	}
	
	
	/**
	 * Display or hide the processing indicator
	 *  @param {object} settings dataTables settings object
	 *  @param {bool} show Show the processing indicator (true) or not (false)
	 *  @memberof DataTable#oApi
	 */
	function _fnProcessingDisplay ( settings, show )
	{
		if ( settings.oFeatures.bProcessing ) {
			$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );
		}
	
		_fnCallbackFire( settings, null, 'processing', [settings, show] );
	}
	
	/**
	 * Add any control elements for the table - specifically scrolling
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlTable ( settings )
	{
		var table = $(settings.nTable);
	
		// Add the ARIA grid role to the table
		table.attr( 'role', 'grid' );
	
		// Scrolling from here on in
		var scroll = settings.oScroll;
	
		if ( scroll.sX === '' && scroll.sY === '' ) {
			return settings.nTable;
		}
	
		var scrollX = scroll.sX;
		var scrollY = scroll.sY;
		var classes = settings.oClasses;
		var caption = table.children('caption');
		var captionSide = caption.length ? caption[0]._captionSide : null;
		var headerClone = $( table[0].cloneNode(false) );
		var footerClone = $( table[0].cloneNode(false) );
		var footer = table.children('tfoot');
		var _div = '<div/>';
		var size = function ( s ) {
			return !s ? null : _fnStringToCss( s );
		};
	
		if ( ! footer.length ) {
			footer = null;
		}
	
		/*
		 * The HTML structure that we want to generate in this function is:
		 *  div - scroller
		 *    div - scroll head
		 *      div - scroll head inner
		 *        table - scroll head table
		 *          thead - thead
		 *    div - scroll body
		 *      table - table (master table)
		 *        thead - thead clone for sizing
		 *        tbody - tbody
		 *    div - scroll foot
		 *      div - scroll foot inner
		 *        table - scroll foot table
		 *          tfoot - tfoot
		 */
		var scroller = $( _div, { 'class': classes.sScrollWrapper } )
			.append(
				$(_div, { 'class': classes.sScrollHead } )
					.css( {
						overflow: 'hidden',
						position: 'relative',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollHeadInner } )
							.css( {
								'box-sizing': 'content-box',
								width: scroll.sXInner || '100%'
							} )
							.append(
								headerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'top' ? caption : null )
									.append(
										table.children('thead')
									)
							)
					)
			)
			.append(
				$(_div, { 'class': classes.sScrollBody } )
					.css( {
						position: 'relative',
						overflow: 'auto',
						width: size( scrollX )
					} )
					.append( table )
			);
	
		if ( footer ) {
			scroller.append(
				$(_div, { 'class': classes.sScrollFoot } )
					.css( {
						overflow: 'hidden',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollFootInner } )
							.append(
								footerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'bottom' ? caption : null )
									.append(
										table.children('tfoot')
									)
							)
					)
			);
		}
	
		var children = scroller.children();
		var scrollHead = children[0];
		var scrollBody = children[1];
		var scrollFoot = footer ? children[2] : null;
	
		// When the body is scrolled, then we also want to scroll the headers
		if ( scrollX ) {
			$(scrollBody).on( 'scroll.DT', function (e) {
				var scrollLeft = this.scrollLeft;
	
				scrollHead.scrollLeft = scrollLeft;
	
				if ( footer ) {
					scrollFoot.scrollLeft = scrollLeft;
				}
			} );
		}
	
		$(scrollBody).css('max-height', scrollY);
		if (! scroll.bCollapse) {
			$(scrollBody).css('height', scrollY);
		}
	
		settings.nScrollHead = scrollHead;
		settings.nScrollBody = scrollBody;
		settings.nScrollFoot = scrollFoot;
	
		// On redraw - align columns
		settings.aoDrawCallback.push( {
			"fn": _fnScrollDraw,
			"sName": "scrolling"
		} );
	
		return scroller[0];
	}
	
	
	
	/**
	 * Update the header, footer and body tables for resizing - i.e. column
	 * alignment.
	 *
	 * Welcome to the most horrible function DataTables. The process that this
	 * function follows is basically:
	 *   1. Re-create the table inside the scrolling div
	 *   2. Take live measurements from the DOM
	 *   3. Apply the measurements to align the columns
	 *   4. Clean up
	 *
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollDraw ( settings )
	{
		// Given that this is such a monster function, a lot of variables are use
		// to try and keep the minimised size as small as possible
		var
			scroll         = settings.oScroll,
			scrollX        = scroll.sX,
			scrollXInner   = scroll.sXInner,
			scrollY        = scroll.sY,
			barWidth       = scroll.iBarWidth,
			divHeader      = $(settings.nScrollHead),
			divHeaderStyle = divHeader[0].style,
			divHeaderInner = divHeader.children('div'),
			divHeaderInnerStyle = divHeaderInner[0].style,
			divHeaderTable = divHeaderInner.children('table'),
			divBodyEl      = settings.nScrollBody,
			divBody        = $(divBodyEl),
			divBodyStyle   = divBodyEl.style,
			divFooter      = $(settings.nScrollFoot),
			divFooterInner = divFooter.children('div'),
			divFooterTable = divFooterInner.children('table'),
			header         = $(settings.nTHead),
			table          = $(settings.nTable),
			tableEl        = table[0],
			tableStyle     = tableEl.style,
			footer         = settings.nTFoot ? $(settings.nTFoot) : null,
			browser        = settings.oBrowser,
			ie67           = browser.bScrollOversize,
			dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),
			headerTrgEls, footerTrgEls,
			headerSrcEls, footerSrcEls,
			headerCopy, footerCopy,
			headerWidths=[], footerWidths=[],
			headerContent=[], footerContent=[],
			idx, correction, sanityWidth,
			zeroOut = function(nSizer) {
				var style = nSizer.style;
				style.paddingTop = "0";
				style.paddingBottom = "0";
				style.borderTopWidth = "0";
				style.borderBottomWidth = "0";
				style.height = 0;
			};
	
		// If the scrollbar visibility has changed from the last draw, we need to
		// adjust the column sizes as the table width will have changed to account
		// for the scrollbar
		var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
		
		if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {
			settings.scrollBarVis = scrollBarVis;
			_fnAdjustColumnSizing( settings );
			return; // adjust column sizing will call this function again
		}
		else {
			settings.scrollBarVis = scrollBarVis;
		}
	
		/*
		 * 1. Re-create the table inside the scrolling div
		 */
	
		// Remove the old minimised thead and tfoot elements in the inner table
		table.children('thead, tfoot').remove();
	
		if ( footer ) {
			footerCopy = footer.clone().prependTo( table );
			footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized
			footerSrcEls = footerCopy.find('tr');
		}
	
		// Clone the current header and footer elements and then place it into the inner table
		headerCopy = header.clone().prependTo( table );
		headerTrgEls = header.find('tr'); // original header is in its own table
		headerSrcEls = headerCopy.find('tr');
		headerCopy.find('th, td').removeAttr('tabindex');
	
	
		/*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */
	
		// Remove old sizing and apply the calculated column widths
		// Get the unique column headers in the newly created (cloned) header. We want to apply the
		// calculated sizes to this header
		if ( ! scrollX )
		{
			divBodyStyle.width = '100%';
			divHeader[0].style.width = '100%';
		}
	
		$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {
			idx = _fnVisibleToColumnIndex( settings, i );
			el.style.width = settings.aoColumns[idx].sWidth;
		} );
	
		if ( footer ) {
			_fnApplyToChildren( function(n) {
				n.style.width = "";
			}, footerSrcEls );
		}
	
		// Size the table as a whole
		sanityWidth = table.outerWidth();
		if ( scrollX === "" ) {
			// No x scrolling
			tableStyle.width = "100%";
	
			// IE7 will make the width of the table when 100% include the scrollbar
			// - which is shouldn't. When there is a scrollbar we need to take this
			// into account.
			if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);
			}
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
		else if ( scrollXInner !== "" ) {
			// legacy x scroll inner has been given - use it
			tableStyle.width = _fnStringToCss(scrollXInner);
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
	
		// Hidden header should have zero height, so remove padding and borders. Then
		// set the width based on the real headers
	
		// Apply all styles in one pass
		_fnApplyToChildren( zeroOut, headerSrcEls );
	
		// Read all widths in next pass
		_fnApplyToChildren( function(nSizer) {
			headerContent.push( nSizer.innerHTML );
			headerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
		}, headerSrcEls );
	
		// Apply all widths in final pass
		_fnApplyToChildren( function(nToSize, i) {
			// Only apply widths to the DataTables detected header cells - this
			// prevents complex headers from having contradictory sizes applied
			if ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {
				nToSize.style.width = headerWidths[i];
			}
		}, headerTrgEls );
	
		$(headerSrcEls).height(0);
	
		/* Same again with the footer if we have one */
		if ( footer )
		{
			_fnApplyToChildren( zeroOut, footerSrcEls );
	
			_fnApplyToChildren( function(nSizer) {
				footerContent.push( nSizer.innerHTML );
				footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
			}, footerSrcEls );
	
			_fnApplyToChildren( function(nToSize, i) {
				nToSize.style.width = footerWidths[i];
			}, footerTrgEls );
	
			$(footerSrcEls).height(0);
		}
	
	
		/*
		 * 3. Apply the measurements
		 */
	
		// "Hide" the header and footer that we used for the sizing. We need to keep
		// the content of the cell so that the width applied to the header and body
		// both match, but we want to hide it completely. We want to also fix their
		// width to what they currently are
		_fnApplyToChildren( function(nSizer, i) {
			nSizer.innerHTML = '<div class="dataTables_sizing">'+headerContent[i]+'</div>';
			nSizer.childNodes[0].style.height = "0";
			nSizer.childNodes[0].style.overflow = "hidden";
			nSizer.style.width = headerWidths[i];
		}, headerSrcEls );
	
		if ( footer )
		{
			_fnApplyToChildren( function(nSizer, i) {
				nSizer.innerHTML = '<div class="dataTables_sizing">'+footerContent[i]+'</div>';
				nSizer.childNodes[0].style.height = "0";
				nSizer.childNodes[0].style.overflow = "hidden";
				nSizer.style.width = footerWidths[i];
			}, footerSrcEls );
		}
	
		// Sanity check that the table is of a sensible width. If not then we are going to get
		// misalignment - try to prevent this by not allowing the table to shrink below its min width
		if ( table.outerWidth() < sanityWidth )
		{
			// The min width depends upon if we have a vertical scrollbar visible or not */
			correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")) ?
					sanityWidth+barWidth :
					sanityWidth;
	
			// IE6/7 are a law unto themselves...
			if ( ie67 && (divBodyEl.scrollHeight >
				divBodyEl.offsetHeight || divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( correction-barWidth );
			}
	
			// And give the user a warning that we've stopped the table getting too small
			if ( scrollX === "" || scrollXInner !== "" ) {
				_fnLog( settings, 1, 'Possible column misalignment', 6 );
			}
		}
		else
		{
			correction = '100%';
		}
	
		// Apply to the container elements
		divBodyStyle.width = _fnStringToCss( correction );
		divHeaderStyle.width = _fnStringToCss( correction );
	
		if ( footer ) {
			settings.nScrollFoot.style.width = _fnStringToCss( correction );
		}
	
	
		/*
		 * 4. Clean up
		 */
		if ( ! scrollY ) {
			/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
			if ( ie67 ) {
				divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );
			}
		}
	
		/* Finally set the width's of the header and footer tables */
		var iOuterWidth = table.outerWidth();
		divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );
		divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );
	
		// Figure out if there are scrollbar present - if so then we need a the header and footer to
		// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
		var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
		var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );
		divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+"px" : "0px";
	
		if ( footer ) {
			divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style[padding] = bScrolling ? barWidth+"px" : "0px";
		}
	
		// Correct DOM ordering for colgroup - comes before the thead
		table.children('colgroup').insertBefore( table.children('thead') );
	
		/* Adjust the position of the header in case we loose the y-scrollbar */
		divBody.trigger('scroll');
	
		// If sorting or filtering has occurred, jump the scrolling back to the top
		// only if we aren't holding the position
		if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {
			divBodyEl.scrollTop = 0;
		}
	}
	
	
	
	/**
	 * Apply a given function to the display child nodes of an element array (typically
	 * TD children of TR rows
	 *  @param {function} fn Method to apply to the objects
	 *  @param array {nodes} an1 List of elements to look through for display children
	 *  @param array {nodes} an2 Another list (identical structure to the first) - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyToChildren( fn, an1, an2 )
	{
		var index=0, i=0, iLen=an1.length;
		var nNode1, nNode2;
	
		while ( i < iLen ) {
			nNode1 = an1[i].firstChild;
			nNode2 = an2 ? an2[i].firstChild : null;
	
			while ( nNode1 ) {
				if ( nNode1.nodeType === 1 ) {
					if ( an2 ) {
						fn( nNode1, nNode2, index );
					}
					else {
						fn( nNode1, index );
					}
	
					index++;
				}
	
				nNode1 = nNode1.nextSibling;
				nNode2 = an2 ? nNode2.nextSibling : null;
			}
	
			i++;
		}
	}
	
	
	
	var __re_html_remove = /<.*?>/g;
	
	
	/**
	 * Calculate the width of columns for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateColumnWidths ( oSettings )
	{
		var
			table = oSettings.nTable,
			columns = oSettings.aoColumns,
			scroll = oSettings.oScroll,
			scrollY = scroll.sY,
			scrollX = scroll.sX,
			scrollXInner = scroll.sXInner,
			columnCount = columns.length,
			visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),
			headerCells = $('th', oSettings.nTHead),
			tableWidthAttr = table.getAttribute('width'), // from DOM element
			tableContainer = table.parentNode,
			userInputs = false,
			i, column, columnIdx, width, outerWidth,
			browser = oSettings.oBrowser,
			ie67 = browser.bScrollOversize;
	
		var styleWidth = table.style.width;
		if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {
			tableWidthAttr = styleWidth;
		}
	
		/* Convert any user input sizes into pixel sizes */
		for ( i=0 ; i<visibleColumns.length ; i++ ) {
			column = columns[ visibleColumns[i] ];
	
			if ( column.sWidth !== null ) {
				column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );
	
				userInputs = true;
			}
		}
	
		/* If the number of columns in the DOM equals the number that we have to
		 * process in DataTables, then we can use the offsets that are created by
		 * the web- browser. No custom sizes can be set in order for this to happen,
		 * nor scrolling used
		 */
		if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&
		     columnCount == _fnVisbleColumns( oSettings ) &&
		     columnCount == headerCells.length
		) {
			for ( i=0 ; i<columnCount ; i++ ) {
				var colIdx = _fnVisibleToColumnIndex( oSettings, i );
	
				if ( colIdx !== null ) {
					columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );
				}
			}
		}
		else
		{
			// Otherwise construct a single row, worst case, table with the widest
			// node in the data, assign any user defined widths, then insert it into
			// the DOM and allow the browser to do all the hard work of calculating
			// table widths
			var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table
				.css( 'visibility', 'hidden' )
				.removeAttr( 'id' );
	
			// Clean up the table body
			tmpTable.find('tbody tr').remove();
			var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );
	
			// Clone the table header and footer - we can't use the header / footer
			// from the cloned table, since if scrolling is active, the table's
			// real header and footer are contained in different table tags
			tmpTable.find('thead, tfoot').remove();
			tmpTable
				.append( $(oSettings.nTHead).clone() )
				.append( $(oSettings.nTFoot).clone() );
	
			// Remove any assigned widths from the footer (from scrolling)
			tmpTable.find('tfoot th, tfoot td').css('width', '');
	
			// Apply custom sizing to the cloned header
			headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );
	
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				column = columns[ visibleColumns[i] ];
	
				headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?
					_fnStringToCss( column.sWidthOrig ) :
					'';
	
				// For scrollX we need to force the column width otherwise the
				// browser will collapse it. If this width is smaller than the
				// width the column requires, then it will have no effect
				if ( column.sWidthOrig && scrollX ) {
					$( headerCells[i] ).append( $('<div/>').css( {
						width: column.sWidthOrig,
						margin: 0,
						padding: 0,
						border: 0,
						height: 1
					} ) );
				}
			}
	
			// Find the widest cell for each column and put it into the table
			if ( oSettings.aoData.length ) {
				for ( i=0 ; i<visibleColumns.length ; i++ ) {
					columnIdx = visibleColumns[i];
					column = columns[ columnIdx ];
	
					$( _fnGetWidestNode( oSettings, columnIdx ) )
						.clone( false )
						.append( column.sContentPadding )
						.appendTo( tr );
				}
			}
	
			// Tidy the temporary table - remove name attributes so there aren't
			// duplicated in the dom (radio elements for example)
			$('[name]', tmpTable).removeAttr('name');
	
			// Table has been built, attach to the document so we can work with it.
			// A holding element is used, positioned at the top of the container
			// with minimal height, so it has no effect on if the container scrolls
			// or not. Otherwise it might trigger scrolling when it actually isn't
			// needed
			var holder = $('<div/>').css( scrollX || scrollY ?
					{
						position: 'absolute',
						top: 0,
						left: 0,
						height: 1,
						right: 0,
						overflow: 'hidden'
					} :
					{}
				)
				.append( tmpTable )
				.appendTo( tableContainer );
	
			// When scrolling (X or Y) we want to set the width of the table as 
			// appropriate. However, when not scrolling leave the table width as it
			// is. This results in slightly different, but I think correct behaviour
			if ( scrollX && scrollXInner ) {
				tmpTable.width( scrollXInner );
			}
			else if ( scrollX ) {
				tmpTable.css( 'width', 'auto' );
				tmpTable.removeAttr('width');
	
				// If there is no width attribute or style, then allow the table to
				// collapse
				if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {
					tmpTable.width( tableContainer.clientWidth );
				}
			}
			else if ( scrollY ) {
				tmpTable.width( tableContainer.clientWidth );
			}
			else if ( tableWidthAttr ) {
				tmpTable.width( tableWidthAttr );
			}
	
			// Get the width of each column in the constructed table - we need to
			// know the inner width (so it can be assigned to the other table's
			// cells) and the outer width so we can calculate the full width of the
			// table. This is safe since DataTables requires a unique cell for each
			// column, but if ever a header can span multiple columns, this will
			// need to be modified.
			var total = 0;
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				var cell = $(headerCells[i]);
				var border = cell.outerWidth() - cell.width();
	
				// Use getBounding... where possible (not IE8-) because it can give
				// sub-pixel accuracy, which we then want to round up!
				var bounding = browser.bBounding ?
					Math.ceil( headerCells[i].getBoundingClientRect().width ) :
					cell.outerWidth();
	
				// Total is tracked to remove any sub-pixel errors as the outerWidth
				// of the table might not equal the total given here (IE!).
				total += bounding;
	
				// Width for each column to use
				columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );
			}
	
			table.style.width = _fnStringToCss( total );
	
			// Finished with the table - ditch it
			holder.remove();
		}
	
		// If there is a width attr, we want to attach an event listener which
		// allows the table sizing to automatically adjust when the window is
		// resized. Use the width attr rather than CSS, since we can't know if the
		// CSS is a relative value or absolute - DOM read is always px.
		if ( tableWidthAttr ) {
			table.style.width = _fnStringToCss( tableWidthAttr );
		}
	
		if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {
			var bindResize = function () {
				$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {
					_fnAdjustColumnSizing( oSettings );
				} ) );
			};
	
			// IE6/7 will crash if we bind a resize event handler on page load.
			// To be removed in 1.11 which drops IE6/7 support
			if ( ie67 ) {
				setTimeout( bindResize, 1000 );
			}
			else {
				bindResize();
			}
	
			oSettings._reszEvt = true;
		}
	}
	
	
	/**
	 * Throttle the calls to a function. Arguments and context are maintained for
	 * the throttled function
	 *  @param {function} fn Function to be called
	 *  @param {int} [freq=200] call frequency in mS
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#oApi
	 */
	var _fnThrottle = DataTable.util.throttle;
	
	
	/**
	 * Convert a CSS unit width to pixels (e.g. 2em)
	 *  @param {string} width width to be converted
	 *  @param {node} parent parent to get the with for (required for relative widths) - optional
	 *  @returns {int} width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnConvertToWidth ( width, parent )
	{
		if ( ! width ) {
			return 0;
		}
	
		var n = $('<div/>')
			.css( 'width', _fnStringToCss( width ) )
			.appendTo( parent || document.body );
	
		var val = n[0].offsetWidth;
		n.remove();
	
		return val;
	}
	
	
	/**
	 * Get the widest node
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {node} widest table node
	 *  @memberof DataTable#oApi
	 */
	function _fnGetWidestNode( settings, colIdx )
	{
		var idx = _fnGetMaxLenString( settings, colIdx );
		if ( idx < 0 ) {
			return null;
		}
	
		var data = settings.aoData[ idx ];
		return ! data.nTr ? // Might not have been created when deferred rendering
			$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :
			data.anCells[ colIdx ];
	}
	
	
	/**
	 * Get the maximum strlen for each data column
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {string} max string length for each column
	 *  @memberof DataTable#oApi
	 */
	function _fnGetMaxLenString( settings, colIdx )
	{
		var s, max=-1, maxIdx = -1;
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			s = _fnGetCellData( settings, i, colIdx, 'display' )+'';
			s = s.replace( __re_html_remove, '' );
			s = s.replace( /&nbsp;/g, ' ' );
	
			if ( s.length > max ) {
				max = s.length;
				maxIdx = i;
			}
		}
	
		return maxIdx;
	}
	
	
	/**
	 * Append a CSS unit (only if required) to a string
	 *  @param {string} value to css-ify
	 *  @returns {string} value with css unit
	 *  @memberof DataTable#oApi
	 */
	function _fnStringToCss( s )
	{
		if ( s === null ) {
			return '0px';
		}
	
		if ( typeof s == 'number' ) {
			return s < 0 ?
				'0px' :
				s+'px';
		}
	
		// Check it has a unit character already
		return s.match(/\d$/) ?
			s+'px' :
			s;
	}
	
	
	
	function _fnSortFlatten ( settings )
	{
		var
			i, iLen, k, kLen,
			aSort = [],
			aiOrig = [],
			aoColumns = settings.aoColumns,
			aDataSort, iCol, sType, srcCol,
			fixed = settings.aaSortingFixed,
			fixedObj = $.isPlainObject( fixed ),
			nestedSort = [],
			add = function ( a ) {
				if ( a.length && ! $.isArray( a[0] ) ) {
					// 1D array
					nestedSort.push( a );
				}
				else {
					// 2D array
					$.merge( nestedSort, a );
				}
			};
	
		// Build the sort array, with pre-fix and post-fix options if they have been
		// specified
		if ( $.isArray( fixed ) ) {
			add( fixed );
		}
	
		if ( fixedObj && fixed.pre ) {
			add( fixed.pre );
		}
	
		add( settings.aaSorting );
	
		if (fixedObj && fixed.post ) {
			add( fixed.post );
		}
	
		for ( i=0 ; i<nestedSort.length ; i++ )
		{
			srcCol = nestedSort[i][0];
			aDataSort = aoColumns[ srcCol ].aDataSort;
	
			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';
	
				if ( nestedSort[i]._idx === undefined ) {
					nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );
				}
	
				aSort.push( {
					src:       srcCol,
					col:       iCol,
					dir:       nestedSort[i][1],
					index:     nestedSort[i]._idx,
					type:      sType,
					formatter: DataTable.ext.type.order[ sType+"-pre" ]
				} );
			}
		}
	
		return aSort;
	}
	
	/**
	 * Change the order of the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 *  @todo This really needs split up!
	 */
	function _fnSort ( oSettings )
	{
		var
			i, ien, iLen, j, jLen, k, kLen,
			sDataType, nTh,
			aiOrig = [],
			oExtSort = DataTable.ext.type.order,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns,
			aDataSort, data, iCol, sType, oSort,
			formatters = 0,
			sortCol,
			displayMaster = oSettings.aiDisplayMaster,
			aSort;
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo Can this be moved into a 'data-ready' handler which is called when
		//   data is going to be used in the table?
		_fnColumnTypes( oSettings );
	
		aSort = _fnSortFlatten( oSettings );
	
		for ( i=0, ien=aSort.length ; i<ien ; i++ ) {
			sortCol = aSort[i];
	
			// Track if we can use the fast sort algorithm
			if ( sortCol.formatter ) {
				formatters++;
			}
	
			// Load the data needed for the sort, for each cell
			_fnSortData( oSettings, sortCol.col );
		}
	
		/* No sorting required if server-side or no sorting array */
		if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )
		{
			// Create a value - key array of the current row positions such that we can use their
			// current position during the sort, if values match, in order to perform stable sorting
			for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {
				aiOrig[ displayMaster[i] ] = i;
			}
	
			/* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
			if ( formatters === aSort.length ) {
				// All sort types have formatting functions
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = x<y ? -1 : x>y ? 1 : 0;
						if ( test !== 0 ) {
							return sort.dir === 'asc' ? test : -test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
			else {
				// Depreciated - remove in 1.11 (providing a plug-in option)
				// Not all sort types have formatting methods, so we have to call their sorting
				// methods.
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, l, test, sort, fn,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						fn = oExtSort[ sort.type+"-"+sort.dir ] || oExtSort[ "string-"+sort.dir ];
						test = fn( x, y );
						if ( test !== 0 ) {
							return test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
		}
	
		/* Tell the draw function that we have sorted the data */
		oSettings.bSorted = true;
	}
	
	
	function _fnSortAria ( settings )
	{
		var label;
		var nextSort;
		var columns = settings.aoColumns;
		var aSort = _fnSortFlatten( settings );
		var oAria = settings.oLanguage.oAria;
	
		// ARIA attributes - need to loop all columns, to update all (removing old
		// attributes as needed)
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			var col = columns[i];
			var asSorting = col.asSorting;
			var sTitle = col.sTitle.replace( /<.*?>/g, "" );
			var th = col.nTh;
	
			// IE7 is throwing an error when setting these properties with jQuery's
			// attr() and removeAttr() methods...
			th.removeAttribute('aria-sort');
	
			/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
			if ( col.bSortable ) {
				if ( aSort.length > 0 && aSort[0].col == i ) {
					th.setAttribute('aria-sort', aSort[0].dir=="asc" ? "ascending" : "descending" );
					nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];
				}
				else {
					nextSort = asSorting[0];
				}
	
				label = sTitle + ( nextSort === "asc" ?
					oAria.sSortAscending :
					oAria.sSortDescending
				);
			}
			else {
				label = sTitle;
			}
	
			th.setAttribute('aria-label', label);
		}
	}
	
	
	/**
	 * Function to run on user sort request
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {boolean} [append=false] Append the requested sort to the existing
	 *    sort if true (i.e. multi-column sort)
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortListener ( settings, colIdx, append, callback )
	{
		var col = settings.aoColumns[ colIdx ];
		var sorting = settings.aaSorting;
		var asSorting = col.asSorting;
		var nextSortIdx;
		var next = function ( a, overflow ) {
			var idx = a._idx;
			if ( idx === undefined ) {
				idx = $.inArray( a[1], asSorting );
			}
	
			return idx+1 < asSorting.length ?
				idx+1 :
				overflow ?
					null :
					0;
		};
	
		// Convert to 2D array if needed
		if ( typeof sorting[0] === 'number' ) {
			sorting = settings.aaSorting = [ sorting ];
		}
	
		// If appending the sort then we are multi-column sorting
		if ( append && settings.oFeatures.bSortMulti ) {
			// Are we already doing some kind of sort on this column?
			var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );
	
			if ( sortIdx !== -1 ) {
				// Yes, modify the sort
				nextSortIdx = next( sorting[sortIdx], true );
	
				if ( nextSortIdx === null && sorting.length === 1 ) {
					nextSortIdx = 0; // can't remove sorting completely
				}
	
				if ( nextSortIdx === null ) {
					sorting.splice( sortIdx, 1 );
				}
				else {
					sorting[sortIdx][1] = asSorting[ nextSortIdx ];
					sorting[sortIdx]._idx = nextSortIdx;
				}
			}
			else {
				// No sort on this column yet
				sorting.push( [ colIdx, asSorting[0], 0 ] );
				sorting[sorting.length-1]._idx = 0;
			}
		}
		else if ( sorting.length && sorting[0][0] == colIdx ) {
			// Single column - already sorting on this column, modify the sort
			nextSortIdx = next( sorting[0] );
	
			sorting.length = 1;
			sorting[0][1] = asSorting[ nextSortIdx ];
			sorting[0]._idx = nextSortIdx;
		}
		else {
			// Single column - sort only on this column
			sorting.length = 0;
			sorting.push( [ colIdx, asSorting[0] ] );
			sorting[0]._idx = 0;
		}
	
		// Run the sort by calling a full redraw
		_fnReDraw( settings );
	
		// callback used for async user interaction
		if ( typeof callback == 'function' ) {
			callback( settings );
		}
	}
	
	
	/**
	 * Attach a sort handler (click) to a node
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortAttachListener ( settings, attachTo, colIdx, callback )
	{
		var col = settings.aoColumns[ colIdx ];
	
		_fnBindAction( attachTo, {}, function (e) {
			/* If the column is not sortable - don't to anything */
			if ( col.bSortable === false ) {
				return;
			}
	
			// If processing is enabled use a timeout to allow the processing
			// display to be shown - otherwise to it synchronously
			if ( settings.oFeatures.bProcessing ) {
				_fnProcessingDisplay( settings, true );
	
				setTimeout( function() {
					_fnSortListener( settings, colIdx, e.shiftKey, callback );
	
					// In server-side processing, the draw callback will remove the
					// processing display
					if ( _fnDataSource( settings ) !== 'ssp' ) {
						_fnProcessingDisplay( settings, false );
					}
				}, 0 );
			}
			else {
				_fnSortListener( settings, colIdx, e.shiftKey, callback );
			}
		} );
	}
	
	
	/**
	 * Set the sorting classes on table's body, Note: it is safe to call this function
	 * when bSort and bSortClasses are false
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSortingClasses( settings )
	{
		var oldSort = settings.aLastSort;
		var sortClass = settings.oClasses.sSortColumn;
		var sort = _fnSortFlatten( settings );
		var features = settings.oFeatures;
		var i, ien, colIdx;
	
		if ( features.bSort && features.bSortClasses ) {
			// Remove old sorting classes
			for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {
				colIdx = oldSort[i].src;
	
				// Remove column sorting
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.removeClass( sortClass + (i<2 ? i+1 : 3) );
			}
	
			// Add new column sorting
			for ( i=0, ien=sort.length ; i<ien ; i++ ) {
				colIdx = sort[i].src;
	
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.addClass( sortClass + (i<2 ? i+1 : 3) );
			}
		}
	
		settings.aLastSort = sort;
	}
	
	
	// Get the data to sort a column, be it from cache, fresh (populating the
	// cache), or from a sort formatter
	function _fnSortData( settings, idx )
	{
		// Custom sorting function - provided by the sort data type
		var column = settings.aoColumns[ idx ];
		var customSort = DataTable.ext.order[ column.sSortDataType ];
		var customData;
	
		if ( customSort ) {
			customData = customSort.call( settings.oInstance, settings, idx,
				_fnColumnIndexToVisible( settings, idx )
			);
		}
	
		// Use / populate cache
		var row, cellData;
		var formatter = DataTable.ext.type.order[ column.sType+"-pre" ];
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aSortData ) {
				row._aSortData = [];
			}
	
			if ( ! row._aSortData[idx] || customSort ) {
				cellData = customSort ?
					customData[i] : // If there was a custom sort function, use data from there
					_fnGetCellData( settings, i, idx, 'sort' );
	
				row._aSortData[ idx ] = formatter ?
					formatter( cellData ) :
					cellData;
			}
		}
	}
	
	
	
	/**
	 * Save the state of a table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSaveState ( settings )
	{
		if ( !settings.oFeatures.bStateSave || settings.bDestroying )
		{
			return;
		}
	
		/* Store the interesting variables */
		var state = {
			time:    +new Date(),
			start:   settings._iDisplayStart,
			length:  settings._iDisplayLength,
			order:   $.extend( true, [], settings.aaSorting ),
			search:  _fnSearchToCamel( settings.oPreviousSearch ),
			columns: $.map( settings.aoColumns, function ( col, i ) {
				return {
					visible: col.bVisible,
					search: _fnSearchToCamel( settings.aoPreSearchCols[i] )
				};
			} )
		};
	
		_fnCallbackFire( settings, "aoStateSaveParams", 'stateSaveParams', [settings, state] );
	
		settings.oSavedState = state;
		settings.fnStateSaveCallback.call( settings.oInstance, settings, state );
	}
	
	
	/**
	 * Attempt to load a saved table state
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oInit DataTables init object so we can override settings
	 *  @param {function} callback Callback to execute when the state has been loaded
	 *  @memberof DataTable#oApi
	 */
	function _fnLoadState ( settings, oInit, callback )
	{
		var i, ien;
		var columns = settings.aoColumns;
		var loaded = function ( s ) {
			if ( ! s || ! s.time ) {
				callback();
				return;
			}
	
			// Allow custom and plug-in manipulation functions to alter the saved data set and
			// cancelling of loading by returning false
			var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );
			if ( $.inArray( false, abStateLoad ) !== -1 ) {
				callback();
				return;
			}
	
			// Reject old data
			var duration = settings.iStateDuration;
			if ( duration > 0 && s.time < +new Date() - (duration*1000) ) {
				callback();
				return;
			}
	
			// Number of columns have changed - all bets are off, no restore of settings
			if ( s.columns && columns.length !== s.columns.length ) {
				callback();
				return;
			}
	
			// Store the saved state so it might be accessed at any time
			settings.oLoadedState = $.extend( true, {}, s );
	
			// Restore key features - todo - for 1.11 this needs to be done by
			// subscribed events
			if ( s.start !== undefined ) {
				settings._iDisplayStart    = s.start;
				settings.iInitDisplayStart = s.start;
			}
			if ( s.length !== undefined ) {
				settings._iDisplayLength   = s.length;
			}
	
			// Order
			if ( s.order !== undefined ) {
				settings.aaSorting = [];
				$.each( s.order, function ( i, col ) {
					settings.aaSorting.push( col[0] >= columns.length ?
						[ 0, col[1] ] :
						col
					);
				} );
			}
	
			// Search
			if ( s.search !== undefined ) {
				$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );
			}
	
			// Columns
			//
			if ( s.columns ) {
				for ( i=0, ien=s.columns.length ; i<ien ; i++ ) {
					var col = s.columns[i];
	
					// Visibility
					if ( col.visible !== undefined ) {
						columns[i].bVisible = col.visible;
					}
	
					// Search
					if ( col.search !== undefined ) {
						$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );
					}
				}
			}
	
			_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );
			callback();
		};
	
		if ( ! settings.oFeatures.bStateSave ) {
			callback();
			return;
		}
	
		var state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );
	
		if ( state !== undefined ) {
			loaded( state );
		}
		// otherwise, wait for the loaded callback to be executed
	}
	
	
	/**
	 * Return the settings object for a particular table
	 *  @param {node} table table we are using as a dataTable
	 *  @returns {object} Settings object - or null if not found
	 *  @memberof DataTable#oApi
	 */
	function _fnSettingsFromNode ( table )
	{
		var settings = DataTable.settings;
		var idx = $.inArray( table, _pluck( settings, 'nTable' ) );
	
		return idx !== -1 ?
			settings[ idx ] :
			null;
	}
	
	
	/**
	 * Log an error message
	 *  @param {object} settings dataTables settings object
	 *  @param {int} level log error messages, or display them to the user
	 *  @param {string} msg error message
	 *  @param {int} tn Technical note id to get more information about the error.
	 *  @memberof DataTable#oApi
	 */
	function _fnLog( settings, level, msg, tn )
	{
		msg = 'DataTables warning: '+
			(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;
	
		if ( tn ) {
			msg += '. For more information about this error, please see '+
			'http://datatables.net/tn/'+tn;
		}
	
		if ( ! level  ) {
			// Backwards compatibility pre 1.10
			var ext = DataTable.ext;
			var type = ext.sErrMode || ext.errMode;
	
			if ( settings ) {
				_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );
			}
	
			if ( type == 'alert' ) {
				alert( msg );
			}
			else if ( type == 'throw' ) {
				throw new Error(msg);
			}
			else if ( typeof type == 'function' ) {
				type( settings, tn, msg );
			}
		}
		else if ( window.console && console.log ) {
			console.log( msg );
		}
	}
	
	
	/**
	 * See if a property is defined on one object, if so assign it to the other object
	 *  @param {object} ret target object
	 *  @param {object} src source object
	 *  @param {string} name property
	 *  @param {string} [mappedName] name to map too - optional, name used if not given
	 *  @memberof DataTable#oApi
	 */
	function _fnMap( ret, src, name, mappedName )
	{
		if ( $.isArray( name ) ) {
			$.each( name, function (i, val) {
				if ( $.isArray( val ) ) {
					_fnMap( ret, src, val[0], val[1] );
				}
				else {
					_fnMap( ret, src, val );
				}
			} );
	
			return;
		}
	
		if ( mappedName === undefined ) {
			mappedName = name;
		}
	
		if ( src[name] !== undefined ) {
			ret[mappedName] = src[name];
		}
	}
	
	
	/**
	 * Extend objects - very similar to jQuery.extend, but deep copy objects, and
	 * shallow copy arrays. The reason we need to do this, is that we don't want to
	 * deep copy array init values (such as aaSorting) since the dev wouldn't be
	 * able to override them, but we do want to deep copy arrays.
	 *  @param {object} out Object to extend
	 *  @param {object} extender Object from which the properties will be applied to
	 *      out
	 *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
	 *      independent copy with the exception of the `data` or `aaData` parameters
	 *      if they are present. This is so you can pass in a collection to
	 *      DataTables and have that used as your data source without breaking the
	 *      references
	 *  @returns {object} out Reference, just for convenience - out === the return.
	 *  @memberof DataTable#oApi
	 *  @todo This doesn't take account of arrays inside the deep copied objects.
	 */
	function _fnExtend( out, extender, breakRefs )
	{
		var val;
	
		for ( var prop in extender ) {
			if ( extender.hasOwnProperty(prop) ) {
				val = extender[prop];
	
				if ( $.isPlainObject( val ) ) {
					if ( ! $.isPlainObject( out[prop] ) ) {
						out[prop] = {};
					}
					$.extend( true, out[prop], val );
				}
				else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {
					out[prop] = val.slice();
				}
				else {
					out[prop] = val;
				}
			}
		}
	
		return out;
	}
	
	
	/**
	 * Bind an event handers to allow a click or return key to activate the callback.
	 * This is good for accessibility since a return on the keyboard will have the
	 * same effect as a click, if the element has focus.
	 *  @param {element} n Element to bind the action to
	 *  @param {object} oData Data object to pass to the triggered function
	 *  @param {function} fn Callback function for when the event is triggered
	 *  @memberof DataTable#oApi
	 */
	function _fnBindAction( n, oData, fn )
	{
		$(n)
			.on( 'click.DT', oData, function (e) {
					$(n).trigger('blur'); // Remove focus outline for mouse users
					fn(e);
				} )
			.on( 'keypress.DT', oData, function (e){
					if ( e.which === 13 ) {
						e.preventDefault();
						fn(e);
					}
				} )
			.on( 'selectstart.DT', function () {
					/* Take the brutal approach to cancelling text selection */
					return false;
				} );
	}
	
	
	/**
	 * Register a callback function. Easily allows a callback function to be added to
	 * an array store of callback functions that can then all be called together.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {function} fn Function to be called back
	 *  @param {string} sName Identifying name for the callback (i.e. a label)
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackReg( oSettings, sStore, fn, sName )
	{
		if ( fn )
		{
			oSettings[sStore].push( {
				"fn": fn,
				"sName": sName
			} );
		}
	}
	
	
	/**
	 * Fire callback functions and trigger events. Note that the loop over the
	 * callback array store is done backwards! Further note that you do not want to
	 * fire off triggers in time sensitive applications (for example cell creation)
	 * as its slow.
	 *  @param {object} settings dataTables settings object
	 *  @param {string} callbackArr Name of the array storage for the callbacks in
	 *      oSettings
	 *  @param {string} eventName Name of the jQuery custom event to trigger. If
	 *      null no trigger is fired
	 *  @param {array} args Array of arguments to pass to the callback function /
	 *      trigger
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackFire( settings, callbackArr, eventName, args )
	{
		var ret = [];
	
		if ( callbackArr ) {
			ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {
				return val.fn.apply( settings.oInstance, args );
			} );
		}
	
		if ( eventName !== null ) {
			var e = $.Event( eventName+'.dt' );
	
			$(settings.nTable).trigger( e, args );
	
			ret.push( e.result );
		}
	
		return ret;
	}
	
	
	function _fnLengthOverflow ( settings )
	{
		var
			start = settings._iDisplayStart,
			end = settings.fnDisplayEnd(),
			len = settings._iDisplayLength;
	
		/* If we have space to show extra rows (backing up from the end point - then do so */
		if ( start >= end )
		{
			start = end - len;
		}
	
		// Keep the start record on the current page
		start -= (start % len);
	
		if ( len === -1 || start < 0 )
		{
			start = 0;
		}
	
		settings._iDisplayStart = start;
	}
	
	
	function _fnRenderer( settings, type )
	{
		var renderer = settings.renderer;
		var host = DataTable.ext.renderer[type];
	
		if ( $.isPlainObject( renderer ) && renderer[type] ) {
			// Specific renderer for this type. If available use it, otherwise use
			// the default.
			return host[renderer[type]] || host._;
		}
		else if ( typeof renderer === 'string' ) {
			// Common renderer - if there is one available for this type use it,
			// otherwise use the default
			return host[renderer] || host._;
		}
	
		// Use the default
		return host._;
	}
	
	
	/**
	 * Detect the data source being used for the table. Used to simplify the code
	 * a little (ajax) and to make it compress a little smaller.
	 *
	 *  @param {object} settings dataTables settings object
	 *  @returns {string} Data source
	 *  @memberof DataTable#oApi
	 */
	function _fnDataSource ( settings )
	{
		if ( settings.oFeatures.bServerSide ) {
			return 'ssp';
		}
		else if ( settings.ajax || settings.sAjaxSource ) {
			return 'ajax';
		}
		return 'dom';
	}
	

	
	
	/**
	 * Computed structure of the DataTables API, defined by the options passed to
	 * `DataTable.Api.register()` when building the API.
	 *
	 * The structure is built in order to speed creation and extension of the Api
	 * objects since the extensions are effectively pre-parsed.
	 *
	 * The array is an array of objects with the following structure, where this
	 * base array represents the Api prototype base:
	 *
	 *     [
	 *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
	 *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
	 *     ]
	 *
	 * @type {Array}
	 * @ignore
	 */
	var __apiStruct = [];
	
	
	/**
	 * `Array.prototype` reference.
	 *
	 * @type object
	 * @ignore
	 */
	var __arrayProto = Array.prototype;
	
	
	/**
	 * Abstraction for `context` parameter of the `Api` constructor to allow it to
	 * take several different forms for ease of use.
	 *
	 * Each of the input parameter types will be converted to a DataTables settings
	 * object where possible.
	 *
	 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
	 *   of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 *   * `DataTables.Api` - API instance
	 * @return {array|null} Matching DataTables settings objects. `null` or
	 *   `undefined` is returned if no matching DataTable is found.
	 * @ignore
	 */
	var _toSettings = function ( mixed )
	{
		var idx, jq;
		var settings = DataTable.settings;
		var tables = $.map( settings, function (el, i) {
			return el.nTable;
		} );
	
		if ( ! mixed ) {
			return [];
		}
		else if ( mixed.nTable && mixed.oApi ) {
			// DataTables settings object
			return [ mixed ];
		}
		else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
			// Table node
			idx = $.inArray( mixed, tables );
			return idx !== -1 ? [ settings[idx] ] : null;
		}
		else if ( mixed && typeof mixed.settings === 'function' ) {
			return mixed.settings().toArray();
		}
		else if ( typeof mixed === 'string' ) {
			// jQuery selector
			jq = $(mixed);
		}
		else if ( mixed instanceof $ ) {
			// jQuery object (also DataTables instance)
			jq = mixed;
		}
	
		if ( jq ) {
			return jq.map( function(i) {
				idx = $.inArray( this, tables );
				return idx !== -1 ? settings[idx] : null;
			} ).toArray();
		}
	};
	
	
	/**
	 * DataTables API class - used to control and interface with  one or more
	 * DataTables enhanced tables.
	 *
	 * The API class is heavily based on jQuery, presenting a chainable interface
	 * that you can use to interact with tables. Each instance of the API class has
	 * a "context" - i.e. the tables that it will operate on. This could be a single
	 * table, all tables on a page or a sub-set thereof.
	 *
	 * Additionally the API is designed to allow you to easily work with the data in
	 * the tables, retrieving and manipulating it as required. This is done by
	 * presenting the API class as an array like interface. The contents of the
	 * array depend upon the actions requested by each method (for example
	 * `rows().nodes()` will return an array of nodes, while `rows().data()` will
	 * return an array of objects or arrays depending upon your table's
	 * configuration). The API object has a number of array like methods (`push`,
	 * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
	 * `unique` etc) to assist your working with the data held in a table.
	 *
	 * Most methods (those which return an Api instance) are chainable, which means
	 * the return from a method call also has all of the methods available that the
	 * top level object had. For example, these two calls are equivalent:
	 *
	 *     // Not chained
	 *     api.row.add( {...} );
	 *     api.draw();
	 *
	 *     // Chained
	 *     api.row.add( {...} ).draw();
	 *
	 * @class DataTable.Api
	 * @param {array|object|string|jQuery} context DataTable identifier. This is
	 *   used to define which DataTables enhanced tables this API will operate on.
	 *   Can be one of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 * @param {array} [data] Data to initialise the Api instance with.
	 *
	 * @example
	 *   // Direct initialisation during DataTables construction
	 *   var api = $('#example').DataTable();
	 *
	 * @example
	 *   // Initialisation using a DataTables jQuery object
	 *   var api = $('#example').dataTable().api();
	 *
	 * @example
	 *   // Initialisation as a constructor
	 *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
	 */
	_Api = function ( context, data )
	{
		if ( ! (this instanceof _Api) ) {
			return new _Api( context, data );
		}
	
		var settings = [];
		var ctxSettings = function ( o ) {
			var a = _toSettings( o );
			if ( a ) {
				settings.push.apply( settings, a );
			}
		};
	
		if ( $.isArray( context ) ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				ctxSettings( context[i] );
			}
		}
		else {
			ctxSettings( context );
		}
	
		// Remove duplicates
		this.context = _unique( settings );
	
		// Initial data
		if ( data ) {
			$.merge( this, data );
		}
	
		// selector
		this.selector = {
			rows: null,
			cols: null,
			opts: null
		};
	
		_Api.extend( this, this, __apiStruct );
	};
	
	DataTable.Api = _Api;
	
	// Don't destroy the existing prototype, just extend it. Required for jQuery 2's
	// isPlainObject.
	$.extend( _Api.prototype, {
		any: function ()
		{
			return this.count() !== 0;
		},
	
	
		concat:  __arrayProto.concat,
	
	
		context: [], // array of table settings objects
	
	
		count: function ()
		{
			return this.flatten().length;
		},
	
	
		each: function ( fn )
		{
			for ( var i=0, ien=this.length ; i<ien; i++ ) {
				fn.call( this, this[i], i, this );
			}
	
			return this;
		},
	
	
		eq: function ( idx )
		{
			var ctx = this.context;
	
			return ctx.length > idx ?
				new _Api( ctx[idx], this[idx] ) :
				null;
		},
	
	
		filter: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.filter ) {
				a = __arrayProto.filter.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					if ( fn.call( this, this[i], i, this ) ) {
						a.push( this[i] );
					}
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		flatten: function ()
		{
			var a = [];
			return new _Api( this.context, a.concat.apply( a, this.toArray() ) );
		},
	
	
		join:    __arrayProto.join,
	
	
		indexOf: __arrayProto.indexOf || function (obj, start)
		{
			for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {
				if ( this[i] === obj ) {
					return i;
				}
			}
			return -1;
		},
	
		iterator: function ( flatten, type, fn, alwaysNew ) {
			var
				a = [], ret,
				i, ien, j, jen,
				context = this.context,
				rows, items, item,
				selector = this.selector;
	
			// Argument shifting
			if ( typeof flatten === 'string' ) {
				alwaysNew = fn;
				fn = type;
				type = flatten;
				flatten = false;
			}
	
			for ( i=0, ien=context.length ; i<ien ; i++ ) {
				var apiInst = new _Api( context[i] );
	
				if ( type === 'table' ) {
					ret = fn.call( apiInst, context[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'columns' || type === 'rows' ) {
					// this has same length as context - one entry for each table
					ret = fn.call( apiInst, context[i], this[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {
					// columns and rows share the same structure.
					// 'this' is an array of column indexes for each context
					items = this[i];
	
					if ( type === 'column-rows' ) {
						rows = _selector_row_indexes( context[i], selector.opts );
					}
	
					for ( j=0, jen=items.length ; j<jen ; j++ ) {
						item = items[j];
	
						if ( type === 'cell' ) {
							ret = fn.call( apiInst, context[i], item.row, item.column, i, j );
						}
						else {
							ret = fn.call( apiInst, context[i], item, i, j, rows );
						}
	
						if ( ret !== undefined ) {
							a.push( ret );
						}
					}
				}
			}
	
			if ( a.length || alwaysNew ) {
				var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );
				var apiSelector = api.selector;
				apiSelector.rows = selector.rows;
				apiSelector.cols = selector.cols;
				apiSelector.opts = selector.opts;
				return api;
			}
			return this;
		},
	
	
		lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)
		{
			// Bit cheeky...
			return this.indexOf.apply( this.toArray.reverse(), arguments );
		},
	
	
		length:  0,
	
	
		map: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.map ) {
				a = __arrayProto.map.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					a.push( fn.call( this, this[i], i ) );
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		pluck: function ( prop )
		{
			return this.map( function ( el ) {
				return el[ prop ];
			} );
		},
	
		pop:     __arrayProto.pop,
	
	
		push:    __arrayProto.push,
	
	
		// Does not return an API instance
		reduce: __arrayProto.reduce || function ( fn, init )
		{
			return _fnReduce( this, fn, init, 0, this.length, 1 );
		},
	
	
		reduceRight: __arrayProto.reduceRight || function ( fn, init )
		{
			return _fnReduce( this, fn, init, this.length-1, -1, -1 );
		},
	
	
		reverse: __arrayProto.reverse,
	
	
		// Object with rows, columns and opts
		selector: null,
	
	
		shift:   __arrayProto.shift,
	
	
		slice: function () {
			return new _Api( this.context, this );
		},
	
	
		sort:    __arrayProto.sort, // ? name - order?
	
	
		splice:  __arrayProto.splice,
	
	
		toArray: function ()
		{
			return __arrayProto.slice.call( this );
		},
	
	
		to$: function ()
		{
			return $( this );
		},
	
	
		toJQuery: function ()
		{
			return $( this );
		},
	
	
		unique: function ()
		{
			return new _Api( this.context, _unique(this) );
		},
	
	
		unshift: __arrayProto.unshift
	} );
	
	
	_Api.extend = function ( scope, obj, ext )
	{
		// Only extend API instances and static properties of the API
		if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {
			return;
		}
	
		var
			i, ien,
			struct,
			methodScoping = function ( scope, fn, struc ) {
				return function () {
					var ret = fn.apply( scope, arguments );
	
					// Method extension
					_Api.extend( ret, ret, struc.methodExt );
					return ret;
				};
			};
	
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			struct = ext[i];
	
			// Value
			obj[ struct.name ] = struct.type === 'function' ?
				methodScoping( scope, struct.val, struct ) :
				struct.type === 'object' ?
					{} :
					struct.val;
	
			obj[ struct.name ].__dt_wrapper = true;
	
			// Property extension
			_Api.extend( scope, obj[ struct.name ], struct.propExt );
		}
	};
	
	
	// @todo - Is there need for an augment function?
	// _Api.augment = function ( inst, name )
	// {
	// 	// Find src object in the structure from the name
	// 	var parts = name.split('.');
	
	// 	_Api.extend( inst, obj );
	// };
	
	
	//     [
	//       {
	//         name:      'data'                -- string   - Property name
	//         val:       function () {},       -- function - Api method (or undefined if just an object
	//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	//       },
	//       {
	//         name:     'row'
	//         val:       {},
	//         methodExt: [ ... ],
	//         propExt:   [
	//           {
	//             name:      'data'
	//             val:       function () {},
	//             methodExt: [ ... ],
	//             propExt:   [ ... ]
	//           },
	//           ...
	//         ]
	//       }
	//     ]
	
	_Api.register = _api_register = function ( name, val )
	{
		if ( $.isArray( name ) ) {
			for ( var j=0, jen=name.length ; j<jen ; j++ ) {
				_Api.register( name[j], val );
			}
			return;
		}
	
		var
			i, ien,
			heir = name.split('.'),
			struct = __apiStruct,
			key, method;
	
		var find = function ( src, name ) {
			for ( var i=0, ien=src.length ; i<ien ; i++ ) {
				if ( src[i].name === name ) {
					return src[i];
				}
			}
			return null;
		};
	
		for ( i=0, ien=heir.length ; i<ien ; i++ ) {
			method = heir[i].indexOf('()') !== -1;
			key = method ?
				heir[i].replace('()', '') :
				heir[i];
	
			var src = find( struct, key );
			if ( ! src ) {
				src = {
					name:      key,
					val:       {},
					methodExt: [],
					propExt:   [],
					type:      'object'
				};
				struct.push( src );
			}
	
			if ( i === ien-1 ) {
				src.val = val;
				src.type = typeof val === 'function' ?
					'function' :
					$.isPlainObject( val ) ?
						'object' :
						'other';
			}
			else {
				struct = method ?
					src.methodExt :
					src.propExt;
			}
		}
	};
	
	_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {
		_Api.register( pluralName, val );
	
		_Api.register( singularName, function () {
			var ret = val.apply( this, arguments );
	
			if ( ret === this ) {
				// Returned item is the API instance that was passed in, return it
				return this;
			}
			else if ( ret instanceof _Api ) {
				// New API instance returned, want the value from the first item
				// in the returned array for the singular result.
				return ret.length ?
					$.isArray( ret[0] ) ?
						new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'
						ret[0] :
					undefined;
			}
	
			// Non-API return - just fire it back
			return ret;
		} );
	};
	
	
	/**
	 * Selector for HTML tables. Apply the given selector to the give array of
	 * DataTables settings objects.
	 *
	 * @param {string|integer} [selector] jQuery selector string or integer
	 * @param  {array} Array of DataTables settings objects to be filtered
	 * @return {array}
	 * @ignore
	 */
	var __table_selector = function ( selector, a )
	{
		if ( $.isArray(selector) ) {
			return $.map( selector, function (item) {
				return __table_selector(item, a);
			} );
		}
	
		// Integer is used to pick out a table by index
		if ( typeof selector === 'number' ) {
			return [ a[ selector ] ];
		}
	
		// Perform a jQuery selector on the table nodes
		var nodes = $.map( a, function (el, i) {
			return el.nTable;
		} );
	
		return $(nodes)
			.filter( selector )
			.map( function (i) {
				// Need to translate back from the table node to the settings
				var idx = $.inArray( this, nodes );
				return a[ idx ];
			} )
			.toArray();
	};
	
	
	
	/**
	 * Context selector for the API's context (i.e. the tables the API instance
	 * refers to.
	 *
	 * @name    DataTable.Api#tables
	 * @param {string|integer} [selector] Selector to pick which tables the iterator
	 *   should operate on. If not given, all tables in the current context are
	 *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
	 *   select multiple tables or as an integer to select a single table.
	 * @returns {DataTable.Api} Returns a new API instance if a selector is given.
	 */
	_api_register( 'tables()', function ( selector ) {
		// A new instance is created if there was a selector specified
		return selector !== undefined && selector !== null ?
			new _Api( __table_selector( selector, this.context ) ) :
			this;
	} );
	
	
	_api_register( 'table()', function ( selector ) {
		var tables = this.tables( selector );
		var ctx = tables.context;
	
		// Truncate to the first matched table
		return ctx.length ?
			new _Api( ctx[0] ) :
			tables;
	} );
	
	
	_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTable;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().body()', 'table().body()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTBody;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().header()', 'table().header()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTHead;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTFoot;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().containers()', 'table().container()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTableWrapper;
		}, 1 );
	} );
	
	
	
	/**
	 * Redraw the tables in the current context.
	 */
	_api_register( 'draw()', function ( paging ) {
		return this.iterator( 'table', function ( settings ) {
			if ( paging === 'page' ) {
				_fnDraw( settings );
			}
			else {
				if ( typeof paging === 'string' ) {
					paging = paging === 'full-hold' ?
						false :
						true;
				}
	
				_fnReDraw( settings, paging===false );
			}
		} );
	} );
	
	
	
	/**
	 * Get the current page index.
	 *
	 * @return {integer} Current page index (zero based)
	 *//**
	 * Set the current page.
	 *
	 * Note that if you attempt to show a page which does not exist, DataTables will
	 * not throw an error, but rather reset the paging.
	 *
	 * @param {integer|string} action The paging action to take. This can be one of:
	 *  * `integer` - The page index to jump to
	 *  * `string` - An action to take:
	 *    * `first` - Jump to first page.
	 *    * `next` - Jump to the next page
	 *    * `previous` - Jump to previous page
	 *    * `last` - Jump to the last page.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page()', function ( action ) {
		if ( action === undefined ) {
			return this.page.info().page; // not an expensive call
		}
	
		// else, have an action to take on all tables
		return this.iterator( 'table', function ( settings ) {
			_fnPageChange( settings, action );
		} );
	} );
	
	
	/**
	 * Paging information for the first table in the current context.
	 *
	 * If you require paging information for another table, use the `table()` method
	 * with a suitable selector.
	 *
	 * @return {object} Object with the following properties set:
	 *  * `page` - Current page index (zero based - i.e. the first page is `0`)
	 *  * `pages` - Total number of pages
	 *  * `start` - Display index for the first record shown on the current page
	 *  * `end` - Display index for the last record shown on the current page
	 *  * `length` - Display length (number of records). Note that generally `start
	 *    + length = end`, but this is not always true, for example if there are
	 *    only 2 records to show on the final page, with a length of 10.
	 *  * `recordsTotal` - Full data set length
	 *  * `recordsDisplay` - Data set length once the current filtering criterion
	 *    are applied.
	 */
	_api_register( 'page.info()', function ( action ) {
		if ( this.context.length === 0 ) {
			return undefined;
		}
	
		var
			settings   = this.context[0],
			start      = settings._iDisplayStart,
			len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
			visRecords = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return {
			"page":           all ? 0 : Math.floor( start / len ),
			"pages":          all ? 1 : Math.ceil( visRecords / len ),
			"start":          start,
			"end":            settings.fnDisplayEnd(),
			"length":         len,
			"recordsTotal":   settings.fnRecordsTotal(),
			"recordsDisplay": visRecords,
			"serverSide":     _fnDataSource( settings ) === 'ssp'
		};
	} );
	
	
	/**
	 * Get the current page length.
	 *
	 * @return {integer} Current page length. Note `-1` indicates that all records
	 *   are to be shown.
	 *//**
	 * Set the current page length.
	 *
	 * @param {integer} Page length to set. Use `-1` to show all records.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page.len()', function ( len ) {
		// Note that we can't call this function 'length()' because `length`
		// is a Javascript property of functions which defines how many arguments
		// the function expects.
		if ( len === undefined ) {
			return this.context.length !== 0 ?
				this.context[0]._iDisplayLength :
				undefined;
		}
	
		// else, set the page length
		return this.iterator( 'table', function ( settings ) {
			_fnLengthChange( settings, len );
		} );
	} );
	
	
	
	var __reload = function ( settings, holdPosition, callback ) {
		// Use the draw event to trigger a callback
		if ( callback ) {
			var api = new _Api( settings );
	
			api.one( 'draw', function () {
				callback( api.ajax.json() );
			} );
		}
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			_fnReDraw( settings, holdPosition );
		}
		else {
			_fnProcessingDisplay( settings, true );
	
			// Cancel an existing request
			var xhr = settings.jqXHR;
			if ( xhr && xhr.readyState !== 4 ) {
				xhr.abort();
			}
	
			// Trigger xhr
			_fnBuildAjax( settings, [], function( json ) {
				_fnClearTable( settings );
	
				var data = _fnAjaxDataSrc( settings, json );
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					_fnAddData( settings, data[i] );
				}
	
				_fnReDraw( settings, holdPosition );
				_fnProcessingDisplay( settings, false );
			} );
		}
	};
	
	
	/**
	 * Get the JSON response from the last Ajax request that DataTables made to the
	 * server. Note that this returns the JSON from the first table in the current
	 * context.
	 *
	 * @return {object} JSON received from the server.
	 */
	_api_register( 'ajax.json()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].json;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Get the data submitted in the last Ajax request
	 */
	_api_register( 'ajax.params()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].oAjaxData;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Reload tables from the Ajax data source. Note that this function will
	 * automatically re-draw the table when the remote data has been loaded.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.reload()', function ( callback, resetPaging ) {
		return this.iterator( 'table', function (settings) {
			__reload( settings, resetPaging===false, callback );
		} );
	} );
	
	
	/**
	 * Get the current Ajax URL. Note that this returns the URL from the first
	 * table in the current context.
	 *
	 * @return {string} Current Ajax source URL
	 *//**
	 * Set the Ajax URL. Note that this will set the URL for all tables in the
	 * current context.
	 *
	 * @param {string} url URL to set.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url()', function ( url ) {
		var ctx = this.context;
	
		if ( url === undefined ) {
			// get
			if ( ctx.length === 0 ) {
				return undefined;
			}
			ctx = ctx[0];
	
			return ctx.ajax ?
				$.isPlainObject( ctx.ajax ) ?
					ctx.ajax.url :
					ctx.ajax :
				ctx.sAjaxSource;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( $.isPlainObject( settings.ajax ) ) {
				settings.ajax.url = url;
			}
			else {
				settings.ajax = url;
			}
			// No need to consider sAjaxSource here since DataTables gives priority
			// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any
			// value of `sAjaxSource` redundant.
		} );
	} );
	
	
	/**
	 * Load data from the newly set Ajax URL. Note that this method is only
	 * available when `ajax.url()` is used to set a URL. Additionally, this method
	 * has the same effect as calling `ajax.reload()` but is provided for
	 * convenience when setting a new URL. Like `ajax.reload()` it will
	 * automatically redraw the table once the remote data has been loaded.
	 *
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {
		// Same as a reload, but makes sense to present it for easy access after a
		// url change
		return this.iterator( 'table', function ( ctx ) {
			__reload( ctx, resetPaging===false, callback );
		} );
	} );
	
	
	
	
	var _selector_run = function ( type, selector, selectFn, settings, opts )
	{
		var
			out = [], res,
			a, i, ien, j, jen,
			selectorType = typeof selector;
	
		// Can't just check for isArray here, as an API or jQuery instance might be
		// given with their array like look
		if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {
			selector = [ selector ];
		}
	
		for ( i=0, ien=selector.length ; i<ien ; i++ ) {
			// Only split on simple strings - complex expressions will be jQuery selectors
			a = selector[i] && selector[i].split && ! selector[i].match(/[\[\(:]/) ?
				selector[i].split(',') :
				[ selector[i] ];
	
			for ( j=0, jen=a.length ; j<jen ; j++ ) {
				res = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );
	
				if ( res && res.length ) {
					out = out.concat( res );
				}
			}
		}
	
		// selector extensions
		var ext = _ext.selector[ type ];
		if ( ext.length ) {
			for ( i=0, ien=ext.length ; i<ien ; i++ ) {
				out = ext[i]( settings, opts, out );
			}
		}
	
		return _unique( out );
	};
	
	
	var _selector_opts = function ( opts )
	{
		if ( ! opts ) {
			opts = {};
		}
	
		// Backwards compatibility for 1.9- which used the terminology filter rather
		// than search
		if ( opts.filter && opts.search === undefined ) {
			opts.search = opts.filter;
		}
	
		return $.extend( {
			search: 'none',
			order: 'current',
			page: 'all'
		}, opts );
	};
	
	
	var _selector_first = function ( inst )
	{
		// Reduce the API instance to the first item found
		for ( var i=0, ien=inst.length ; i<ien ; i++ ) {
			if ( inst[i].length > 0 ) {
				// Assign the first element to the first item in the instance
				// and truncate the instance and context
				inst[0] = inst[i];
				inst[0].length = 1;
				inst.length = 1;
				inst.context = [ inst.context[i] ];
	
				return inst;
			}
		}
	
		// Not found - return an empty instance
		inst.length = 0;
		return inst;
	};
	
	
	var _selector_row_indexes = function ( settings, opts )
	{
		var
			i, ien, tmp, a=[],
			displayFiltered = settings.aiDisplay,
			displayMaster = settings.aiDisplayMaster;
	
		var
			search = opts.search,  // none, applied, removed
			order  = opts.order,   // applied, current, index (original - compatibility with 1.9)
			page   = opts.page;    // all, current
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			// In server-side processing mode, most options are irrelevant since
			// rows not shown don't exist and the index order is the applied order
			// Removed is a special case - for consistency just return an empty
			// array
			return search === 'removed' ?
				[] :
				_range( 0, displayMaster.length );
		}
		else if ( page == 'current' ) {
			// Current page implies that order=current and fitler=applied, since it is
			// fairly senseless otherwise, regardless of what order and search actually
			// are
			for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {
				a.push( displayFiltered[i] );
			}
		}
		else if ( order == 'current' || order == 'applied' ) {
			if ( search == 'none') {
				a = displayMaster.slice();
			}
			else if ( search == 'applied' ) {
				a = displayFiltered.slice();
			}
			else if ( search == 'removed' ) {
				// O(n+m) solution by creating a hash map
				var displayFilteredMap = {};
	
				for ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {
					displayFilteredMap[displayFiltered[i]] = null;
				}
	
				a = $.map( displayMaster, function (el) {
					return ! displayFilteredMap.hasOwnProperty(el) ?
						el :
						null;
				} );
			}
		}
		else if ( order == 'index' || order == 'original' ) {
			for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				if ( search == 'none' ) {
					a.push( i );
				}
				else { // applied | removed
					tmp = $.inArray( i, displayFiltered );
	
					if ((tmp === -1 && search == 'removed') ||
						(tmp >= 0   && search == 'applied') )
					{
						a.push( i );
					}
				}
			}
		}
	
		return a;
	};
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Rows
	 *
	 * {}          - no selector - use all available rows
	 * {integer}   - row aoData index
	 * {node}      - TR node
	 * {string}    - jQuery selector to apply to the TR elements
	 * {array}     - jQuery array of nodes, or simply an array of TR nodes
	 *
	 */
	var __row_selector = function ( settings, selector, opts )
	{
		var rows;
		var run = function ( sel ) {
			var selInt = _intVal( sel );
			var i, ien;
			var aoData = settings.aoData;
	
			// Short cut - selector is a number and no options provided (default is
			// all records, so no need to check if the index is in there, since it
			// must be - dev error if the index doesn't exist).
			if ( selInt !== null && ! opts ) {
				return [ selInt ];
			}
	
			if ( ! rows ) {
				rows = _selector_row_indexes( settings, opts );
			}
	
			if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {
				// Selector - integer
				return [ selInt ];
			}
			else if ( sel === null || sel === undefined || sel === '' ) {
				// Selector - none
				return rows;
			}
	
			// Selector - function
			if ( typeof sel === 'function' ) {
				return $.map( rows, function (idx) {
					var row = aoData[ idx ];
					return sel( idx, row._aData, row.nTr ) ? idx : null;
				} );
			}
	
			// Selector - node
			if ( sel.nodeName ) {
				var rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup
				var cellIdx = sel._DT_CellIndex;
	
				if ( rowIdx !== undefined ) {
					// Make sure that the row is actually still present in the table
					return aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?
						[ rowIdx ] :
						[];
				}
				else if ( cellIdx ) {
					return aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?
						[ cellIdx.row ] :
						[];
				}
				else {
					var host = $(sel).closest('*[data-dt-row]');
					return host.length ?
						[ host.data('dt-row') ] :
						[];
				}
			}
	
			// ID selector. Want to always be able to select rows by id, regardless
			// of if the tr element has been created or not, so can't rely upon
			// jQuery here - hence a custom implementation. This does not match
			// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
			// but to select it using a CSS selector engine (like Sizzle or
			// querySelect) it would need to need to be escaped for some characters.
			// DataTables simplifies this for row selectors since you can select
			// only a row. A # indicates an id any anything that follows is the id -
			// unescaped.
			if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {
				// get row index from id
				var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];
				if ( rowObj !== undefined ) {
					return [ rowObj.idx ];
				}
	
				// need to fall through to jQuery in case there is DOM id that
				// matches
			}
			
			// Get nodes in the order from the `rows` array with null values removed
			var nodes = _removeEmpty(
				_pluck_order( settings.aoData, rows, 'nTr' )
			);
	
			// Selector - jQuery selector string, array of nodes or jQuery object/
			// As jQuery's .filter() allows jQuery objects to be passed in filter,
			// it also allows arrays, so this will cope with all three options
			return $(nodes)
				.filter( sel )
				.map( function () {
					return this._DT_RowIndex;
				} )
				.toArray();
		};
	
		return _selector_run( 'row', selector, run, settings, opts );
	};
	
	
	_api_register( 'rows()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __row_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in __row_selector?
		inst.selector.rows = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_register( 'rows().nodes()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return settings.aoData[ row ].nTr || undefined;
		}, 1 );
	} );
	
	_api_register( 'rows().data()', function () {
		return this.iterator( true, 'rows', function ( settings, rows ) {
			return _pluck_order( settings.aoData, rows, '_aData' );
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {
		return this.iterator( 'row', function ( settings, row ) {
			var r = settings.aoData[ row ];
			return type === 'search' ? r._aFilterData : r._aSortData;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {
		return this.iterator( 'row', function ( settings, row ) {
			_fnInvalidate( settings, row, src );
		} );
	} );
	
	_api_registerPlural( 'rows().indexes()', 'row().index()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return row;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {
		var a = [];
		var context = this.context;
	
		// `iterator` will drop undefined values, but in this case we want them
		for ( var i=0, ien=context.length ; i<ien ; i++ ) {
			for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {
				var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );
				a.push( (hash === true ? '#' : '' )+ id );
			}
		}
	
		return new _Api( context, a );
	} );
	
	_api_registerPlural( 'rows().remove()', 'row().remove()', function () {
		var that = this;
	
		this.iterator( 'row', function ( settings, row, thatIdx ) {
			var data = settings.aoData;
			var rowData = data[ row ];
			var i, ien, j, jen;
			var loopRow, loopCells;
	
			data.splice( row, 1 );
	
			// Update the cached indexes
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				loopRow = data[i];
				loopCells = loopRow.anCells;
	
				// Rows
				if ( loopRow.nTr !== null ) {
					loopRow.nTr._DT_RowIndex = i;
				}
	
				// Cells
				if ( loopCells !== null ) {
					for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {
						loopCells[j]._DT_CellIndex.row = i;
					}
				}
			}
	
			// Delete from the display arrays
			_fnDeleteIndex( settings.aiDisplayMaster, row );
			_fnDeleteIndex( settings.aiDisplay, row );
			_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes
	
			// For server-side processing tables - subtract the deleted row from the count
			if ( settings._iRecordsDisplay > 0 ) {
				settings._iRecordsDisplay--;
			}
	
			// Check for an 'overflow' they case for displaying the table
			_fnLengthOverflow( settings );
	
			// Remove the row's ID reference if there is one
			var id = settings.rowIdFn( rowData._aData );
			if ( id !== undefined ) {
				delete settings.aIds[ id ];
			}
		} );
	
		this.iterator( 'table', function ( settings ) {
			for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				settings.aoData[i].idx = i;
			}
		} );
	
		return this;
	} );
	
	
	_api_register( 'rows.add()', function ( rows ) {
		var newRows = this.iterator( 'table', function ( settings ) {
				var row, i, ien;
				var out = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
						out.push( _fnAddTr( settings, row )[0] );
					}
					else {
						out.push( _fnAddData( settings, row ) );
					}
				}
	
				return out;
			}, 1 );
	
		// Return an Api.rows() extended instance, so rows().nodes() etc can be used
		var modRows = this.rows( -1 );
		modRows.pop();
		$.merge( modRows, newRows );
	
		return modRows;
	} );
	
	
	
	
	
	/**
	 *
	 */
	_api_register( 'row()', function ( selector, opts ) {
		return _selector_first( this.rows( selector, opts ) );
	} );
	
	
	_api_register( 'row().data()', function ( data ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// Get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._aData :
				undefined;
		}
	
		// Set
		var row = ctx[0].aoData[ this[0] ];
		row._aData = data;
	
		// If the DOM has an id, and the data source is an array
		if ( $.isArray( data ) && row.nTr && row.nTr.id ) {
			_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );
		}
	
		// Automatically invalidate
		_fnInvalidate( ctx[0], this[0], 'data' );
	
		return this;
	} );
	
	
	_api_register( 'row().node()', function () {
		var ctx = this.context;
	
		return ctx.length && this.length ?
			ctx[0].aoData[ this[0] ].nTr || null :
			null;
	} );
	
	
	_api_register( 'row.add()', function ( row ) {
		// Allow a jQuery object to be passed in - only a single row is added from
		// it though - the first element in the set
		if ( row instanceof $ && row.length ) {
			row = row[0];
		}
	
		var rows = this.iterator( 'table', function ( settings ) {
			if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
				return _fnAddTr( settings, row )[0];
			}
			return _fnAddData( settings, row );
		} );
	
		// Return an Api.rows() extended instance, with the newly added row selected
		return this.row( rows[0] );
	} );
	
	
	
	var __details_add = function ( ctx, row, data, klass )
	{
		// Convert to array of TR elements
		var rows = [];
		var addRow = function ( r, k ) {
			// Recursion to allow for arrays of jQuery objects
			if ( $.isArray( r ) || r instanceof $ ) {
				for ( var i=0, ien=r.length ; i<ien ; i++ ) {
					addRow( r[i], k );
				}
				return;
			}
	
			// If we get a TR element, then just add it directly - up to the dev
			// to add the correct number of columns etc
			if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {
				rows.push( r );
			}
			else {
				// Otherwise create a row with a wrapper
				var created = $('<tr><td/></tr>').addClass( k );
				$('td', created)
					.addClass( k )
					.html( r )
					[0].colSpan = _fnVisbleColumns( ctx );
	
				rows.push( created[0] );
			}
		};
	
		addRow( data, klass );
	
		if ( row._details ) {
			row._details.detach();
		}
	
		row._details = $(rows);
	
		// If the children were already shown, that state should be retained
		if ( row._detailsShow ) {
			row._details.insertAfter( row.nTr );
		}
	};
	
	
	var __details_remove = function ( api, idx )
	{
		var ctx = api.context;
	
		if ( ctx.length ) {
			var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];
	
			if ( row && row._details ) {
				row._details.remove();
	
				row._detailsShow = undefined;
				row._details = undefined;
			}
		}
	};
	
	
	var __details_display = function ( api, show ) {
		var ctx = api.context;
	
		if ( ctx.length && api.length ) {
			var row = ctx[0].aoData[ api[0] ];
	
			if ( row._details ) {
				row._detailsShow = show;
	
				if ( show ) {
					row._details.insertAfter( row.nTr );
				}
				else {
					row._details.detach();
				}
	
				__details_events( ctx[0] );
			}
		}
	};
	
	
	var __details_events = function ( settings )
	{
		var api = new _Api( settings );
		var namespace = '.dt.DT_details';
		var drawEvent = 'draw'+namespace;
		var colvisEvent = 'column-visibility'+namespace;
		var destroyEvent = 'destroy'+namespace;
		var data = settings.aoData;
	
		api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );
	
		if ( _pluck( data, '_details' ).length > 0 ) {
			// On each draw, insert the required elements into the document
			api.on( drawEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				api.rows( {page:'current'} ).eq(0).each( function (idx) {
					// Internal data grab
					var row = data[ idx ];
	
					if ( row._detailsShow ) {
						row._details.insertAfter( row.nTr );
					}
				} );
			} );
	
			// Column visibility change - update the colspan
			api.on( colvisEvent, function ( e, ctx, idx, vis ) {
				if ( settings !== ctx ) {
					return;
				}
	
				// Update the colspan for the details rows (note, only if it already has
				// a colspan)
				var row, visible = _fnVisbleColumns( ctx );
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					row = data[i];
	
					if ( row._details ) {
						row._details.children('td[colspan]').attr('colspan', visible );
					}
				}
			} );
	
			// Table destroyed - nuke any child rows
			api.on( destroyEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					if ( data[i]._details ) {
						__details_remove( api, i );
					}
				}
			} );
		}
	};
	
	// Strings for the method names to help minification
	var _emp = '';
	var _child_obj = _emp+'row().child';
	var _child_mth = _child_obj+'()';
	
	// data can be:
	//  tr
	//  string
	//  jQuery or array of any of the above
	_api_register( _child_mth, function ( data, klass ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._details :
				undefined;
		}
		else if ( data === true ) {
			// show
			this.child.show();
		}
		else if ( data === false ) {
			// remove
			__details_remove( this );
		}
		else if ( ctx.length && this.length ) {
			// set
			__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );
		}
	
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.show()',
		_child_mth+'.show()' // only when `child()` was called with parameters (without
	], function ( show ) {   // it returns an object and this method is not executed)
		__details_display( this, true );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.hide()',
		_child_mth+'.hide()' // only when `child()` was called with parameters (without
	], function () {         // it returns an object and this method is not executed)
		__details_display( this, false );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.remove()',
		_child_mth+'.remove()' // only when `child()` was called with parameters (without
	], function () {           // it returns an object and this method is not executed)
		__details_remove( this );
		return this;
	} );
	
	
	_api_register( _child_obj+'.isShown()', function () {
		var ctx = this.context;
	
		if ( ctx.length && this.length ) {
			// _detailsShown as false or undefined will fall through to return false
			return ctx[0].aoData[ this[0] ]._detailsShow || false;
		}
		return false;
	} );
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Columns
	 *
	 * {integer}           - column index (>=0 count from left, <0 count from right)
	 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
	 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
	 * "{string}:name"     - column name
	 * "{string}"          - jQuery selector on column header nodes
	 *
	 */
	
	// can be an array of these items, comma separated list, or an array of comma
	// separated lists
	
	var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;
	
	
	// r1 and r2 are redundant - but it means that the parameters match for the
	// iterator callback in columns().data()
	var __columnData = function ( settings, column, r1, r2, rows ) {
		var a = [];
		for ( var row=0, ien=rows.length ; row<ien ; row++ ) {
			a.push( _fnGetCellData( settings, rows[row], column ) );
		}
		return a;
	};
	
	
	var __column_selector = function ( settings, selector, opts )
	{
		var
			columns = settings.aoColumns,
			names = _pluck( columns, 'sName' ),
			nodes = _pluck( columns, 'nTh' );
	
		var run = function ( s ) {
			var selInt = _intVal( s );
	
			// Selector - all
			if ( s === '' ) {
				return _range( columns.length );
			}
	
			// Selector - index
			if ( selInt !== null ) {
				return [ selInt >= 0 ?
					selInt : // Count from left
					columns.length + selInt // Count from right (+ because its a negative value)
				];
			}
	
			// Selector = function
			if ( typeof s === 'function' ) {
				var rows = _selector_row_indexes( settings, opts );
	
				return $.map( columns, function (col, idx) {
					return s(
							idx,
							__columnData( settings, idx, 0, 0, rows ),
							nodes[ idx ]
						) ? idx : null;
				} );
			}
	
			// jQuery or string selector
			var match = typeof s === 'string' ?
				s.match( __re_column_selector ) :
				'';
	
			if ( match ) {
				switch( match[2] ) {
					case 'visIdx':
					case 'visible':
						var idx = parseInt( match[1], 10 );
						// Visible index given, convert to column index
						if ( idx < 0 ) {
							// Counting from the right
							var visColumns = $.map( columns, function (col,i) {
								return col.bVisible ? i : null;
							} );
							return [ visColumns[ visColumns.length + idx ] ];
						}
						// Counting from the left
						return [ _fnVisibleToColumnIndex( settings, idx ) ];
	
					case 'name':
						// match by name. `names` is column index complete and in order
						return $.map( names, function (name, i) {
							return name === match[1] ? i : null;
						} );
	
					default:
						return [];
				}
			}
	
			// Cell in the table body
			if ( s.nodeName && s._DT_CellIndex ) {
				return [ s._DT_CellIndex.column ];
			}
	
			// jQuery selector on the TH elements for the columns
			var jqResult = $( nodes )
				.filter( s )
				.map( function () {
					return $.inArray( this, nodes ); // `nodes` is column index complete and in order
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise a node which might have a `dt-column` data attribute, or be
			// a child or such an element
			var host = $(s).closest('*[data-dt-column]');
			return host.length ?
				[ host.data('dt-column') ] :
				[];
		};
	
		return _selector_run( 'column', selector, run, settings, opts );
	};
	
	
	var __setColumnVis = function ( settings, column, vis ) {
		var
			cols = settings.aoColumns,
			col  = cols[ column ],
			data = settings.aoData,
			row, cells, i, ien, tr;
	
		// Get
		if ( vis === undefined ) {
			return col.bVisible;
		}
	
		// Set
		// No change
		if ( col.bVisible === vis ) {
			return;
		}
	
		if ( vis ) {
			// Insert column
			// Need to decide if we should use appendChild or insertBefore
			var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );
	
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				tr = data[i].nTr;
				cells = data[i].anCells;
	
				if ( tr ) {
					// insertBefore can act like appendChild if 2nd arg is null
					tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );
				}
			}
		}
		else {
			// Remove column
			$( _pluck( settings.aoData, 'anCells', column ) ).detach();
		}
	
		// Common actions
		col.bVisible = vis;
	};
	
	
	_api_register( 'columns()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __column_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in _row_selector?
		inst.selector.cols = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTh;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTf;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().data()', 'column().data()', function () {
		return this.iterator( 'column-rows', __columnData, 1 );
	} );
	
	_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].mData;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows,
				type === 'search' ? '_aFilterData' : '_aSortData', column
			);
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows, 'anCells', column ) ;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {
		var that = this;
		var ret = this.iterator( 'column', function ( settings, column ) {
			if ( vis === undefined ) {
				return settings.aoColumns[ column ].bVisible;
			} // else
			__setColumnVis( settings, column, vis );
		} );
	
		// Group the column visibility changes
		if ( vis !== undefined ) {
			this.iterator( 'table', function ( settings ) {
				// Redraw the header after changes
				_fnDrawHead( settings, settings.aoHeader );
				_fnDrawHead( settings, settings.aoFooter );
		
				// Update colspan for no records display. Child rows and extensions will use their own
				// listeners to do this - only need to update the empty table item here
				if ( ! settings.aiDisplay.length ) {
					$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));
				}
		
				_fnSaveState( settings );
	
				// Second loop once the first is done for events
				that.iterator( 'column', function ( settings, column ) {
					_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );
				} );
	
				if ( calc === undefined || calc ) {
					that.columns.adjust();
				}
			});
		}
	
		return ret;
	} );
	
	_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {
		return this.iterator( 'column', function ( settings, column ) {
			return type === 'visible' ?
				_fnColumnIndexToVisible( settings, column ) :
				column;
		}, 1 );
	} );
	
	_api_register( 'columns.adjust()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnAdjustColumnSizing( settings );
		}, 1 );
	} );
	
	_api_register( 'column.index()', function ( type, idx ) {
		if ( this.context.length !== 0 ) {
			var ctx = this.context[0];
	
			if ( type === 'fromVisible' || type === 'toData' ) {
				return _fnVisibleToColumnIndex( ctx, idx );
			}
			else if ( type === 'fromData' || type === 'toVisible' ) {
				return _fnColumnIndexToVisible( ctx, idx );
			}
		}
	} );
	
	_api_register( 'column()', function ( selector, opts ) {
		return _selector_first( this.columns( selector, opts ) );
	} );
	
	
	
	var __cell_selector = function ( settings, selector, opts )
	{
		var data = settings.aoData;
		var rows = _selector_row_indexes( settings, opts );
		var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );
		var allCells = $( [].concat.apply([], cells) );
		var row;
		var columns = settings.aoColumns.length;
		var a, i, ien, j, o, host;
	
		var run = function ( s ) {
			var fnSelector = typeof s === 'function';
	
			if ( s === null || s === undefined || fnSelector ) {
				// All cells and function selectors
				a = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					for ( j=0 ; j<columns ; j++ ) {
						o = {
							row: row,
							column: j
						};
	
						if ( fnSelector ) {
							// Selector - function
							host = data[ row ];
	
							if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {
								a.push( o );
							}
						}
						else {
							// Selector - all
							a.push( o );
						}
					}
				}
	
				return a;
			}
			
			// Selector - index
			if ( $.isPlainObject( s ) ) {
				// Valid cell index and its in the array of selectable rows
				return s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?
					[s] :
					[];
			}
	
			// Selector - jQuery filtered cells
			var jqResult = allCells
				.filter( s )
				.map( function (i, el) {
					return { // use a new object, in case someone changes the values
						row:    el._DT_CellIndex.row,
						column: el._DT_CellIndex.column
	 				};
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise the selector is a node, and there is one last option - the
			// element might be a child of an element which has dt-row and dt-column
			// data attributes
			host = $(s).closest('*[data-dt-row]');
			return host.length ?
				[ {
					row: host.data('dt-row'),
					column: host.data('dt-column')
				} ] :
				[];
		};
	
		return _selector_run( 'cell', selector, run, settings, opts );
	};
	
	
	
	
	_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {
		// Argument shifting
		if ( $.isPlainObject( rowSelector ) ) {
			// Indexes
			if ( rowSelector.row === undefined ) {
				// Selector options in first parameter
				opts = rowSelector;
				rowSelector = null;
			}
			else {
				// Cell index objects in first parameter
				opts = columnSelector;
				columnSelector = null;
			}
		}
		if ( $.isPlainObject( columnSelector ) ) {
			opts = columnSelector;
			columnSelector = null;
		}
	
		// Cell selector
		if ( columnSelector === null || columnSelector === undefined ) {
			return this.iterator( 'table', function ( settings ) {
				return __cell_selector( settings, rowSelector, _selector_opts( opts ) );
			} );
		}
	
		// The default built in options need to apply to row and columns
		var internalOpts = opts ? {
			page: opts.page,
			order: opts.order,
			search: opts.search
		} : {};
	
		// Row + column selector
		var columns = this.columns( columnSelector, internalOpts );
		var rows = this.rows( rowSelector, internalOpts );
		var i, ien, j, jen;
	
		var cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {
			var a = [];
	
			for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {
				for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {
					a.push( {
						row:    rows[idx][i],
						column: columns[idx][j]
					} );
				}
			}
	
			return a;
		}, 1 );
	
		// There is currently only one extension which uses a cell selector extension
		// It is a _major_ performance drag to run this if it isn't needed, so this is
		// an extension specific check at the moment
		var cells = opts && opts.selected ?
			this.cells( cellsNoOpts, opts ) :
			cellsNoOpts;
	
		$.extend( cells.selector, {
			cols: columnSelector,
			rows: rowSelector,
			opts: opts
		} );
	
		return cells;
	} );
	
	
	_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			var data = settings.aoData[ row ];
	
			return data && data.anCells ?
				data.anCells[ column ] :
				undefined;
		}, 1 );
	} );
	
	
	_api_register( 'cells().data()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {
		type = type === 'search' ? '_aFilterData' : '_aSortData';
	
		return this.iterator( 'cell', function ( settings, row, column ) {
			return settings.aoData[ row ][ type ][ column ];
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column, type );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return {
				row: row,
				column: column,
				columnVisible: _fnColumnIndexToVisible( settings, column )
			};
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			_fnInvalidate( settings, row, src, column );
		} );
	} );
	
	
	
	_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {
		return _selector_first( this.cells( rowSelector, columnSelector, opts ) );
	} );
	
	
	_api_register( 'cell().data()', function ( data ) {
		var ctx = this.context;
		var cell = this[0];
	
		if ( data === undefined ) {
			// Get
			return ctx.length && cell.length ?
				_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :
				undefined;
		}
	
		// Set
		_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );
		_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );
	
		return this;
	} );
	
	
	
	/**
	 * Get current ordering (sorting) that has been applied to the table.
	 *
	 * @returns {array} 2D array containing the sorting information for the first
	 *   table in the current context. Each element in the parent array represents
	 *   a column being sorted upon (i.e. multi-sorting with two columns would have
	 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
	 *   the column index that the sorting condition applies to, the second is the
	 *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
	 *   index of the sorting order from the `column.sorting` initialisation array.
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {integer} order Column index to sort upon.
	 * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 1D array of sorting information to be applied.
	 * @param {array} [...] Optional additional sorting conditions
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 2D array of sorting information to be applied.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order()', function ( order, dir ) {
		var ctx = this.context;
	
		if ( order === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].aaSorting :
				undefined;
		}
	
		// set
		if ( typeof order === 'number' ) {
			// Simple column / direction passed in
			order = [ [ order, dir ] ];
		}
		else if ( order.length && ! $.isArray( order[0] ) ) {
			// Arguments passed in (list of 1D arrays)
			order = Array.prototype.slice.call( arguments );
		}
		// otherwise a 2D array was passed in
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSorting = order.slice();
		} );
	} );
	
	
	/**
	 * Attach a sort listener to an element for a given column
	 *
	 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
	 *   listener to. This can take the form of a single DOM node, a jQuery
	 *   collection of nodes or a jQuery selector which will identify the node(s).
	 * @param {integer} column the column that a click on this node will sort on
	 * @param {function} [callback] callback function when sort is run
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order.listener()', function ( node, column, callback ) {
		return this.iterator( 'table', function ( settings ) {
			_fnSortAttachListener( settings, node, column, callback );
		} );
	} );
	
	
	_api_register( 'order.fixed()', function ( set ) {
		if ( ! set ) {
			var ctx = this.context;
			var fixed = ctx.length ?
				ctx[0].aaSortingFixed :
				undefined;
	
			return $.isArray( fixed ) ?
				{ pre: fixed } :
				fixed;
		}
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSortingFixed = $.extend( true, {}, set );
		} );
	} );
	
	
	// Order by the selected column(s)
	_api_register( [
		'columns().order()',
		'column().order()'
	], function ( dir ) {
		var that = this;
	
		return this.iterator( 'table', function ( settings, i ) {
			var sort = [];
	
			$.each( that[i], function (j, col) {
				sort.push( [ col, dir ] );
			} );
	
			settings.aaSorting = sort;
		} );
	} );
	
	
	
	_api_register( 'search()', function ( input, regex, smart, caseInsen ) {
		var ctx = this.context;
	
		if ( input === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].oPreviousSearch.sSearch :
				undefined;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( ! settings.oFeatures.bFilter ) {
				return;
			}
	
			_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {
				"sSearch": input+"",
				"bRegex":  regex === null ? false : regex,
				"bSmart":  smart === null ? true  : smart,
				"bCaseInsensitive": caseInsen === null ? true : caseInsen
			} ), 1 );
		} );
	} );
	
	
	_api_registerPlural(
		'columns().search()',
		'column().search()',
		function ( input, regex, smart, caseInsen ) {
			return this.iterator( 'column', function ( settings, column ) {
				var preSearch = settings.aoPreSearchCols;
	
				if ( input === undefined ) {
					// get
					return preSearch[ column ].sSearch;
				}
	
				// set
				if ( ! settings.oFeatures.bFilter ) {
					return;
				}
	
				$.extend( preSearch[ column ], {
					"sSearch": input+"",
					"bRegex":  regex === null ? false : regex,
					"bSmart":  smart === null ? true  : smart,
					"bCaseInsensitive": caseInsen === null ? true : caseInsen
				} );
	
				_fnFilterComplete( settings, settings.oPreviousSearch, 1 );
			} );
		}
	);
	
	/*
	 * State API methods
	 */
	
	_api_register( 'state()', function () {
		return this.context.length ?
			this.context[0].oSavedState :
			null;
	} );
	
	
	_api_register( 'state.clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			// Save an empty object
			settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );
		} );
	} );
	
	
	_api_register( 'state.loaded()', function () {
		return this.context.length ?
			this.context[0].oLoadedState :
			null;
	} );
	
	
	_api_register( 'state.save()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnSaveState( settings );
		} );
	} );
	
	
	
	/**
	 * Provide a common method for plug-ins to check the version of DataTables being
	 * used, in order to ensure compatibility.
	 *
	 *  @param {string} version Version string to check for, in the format "X.Y.Z".
	 *    Note that the formats "X" and "X.Y" are also acceptable.
	 *  @returns {boolean} true if this version of DataTables is greater or equal to
	 *    the required version, or false if this version of DataTales is not
	 *    suitable
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
	 */
	DataTable.versionCheck = DataTable.fnVersionCheck = function( version )
	{
		var aThis = DataTable.version.split('.');
		var aThat = version.split('.');
		var iThis, iThat;
	
		for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {
			iThis = parseInt( aThis[i], 10 ) || 0;
			iThat = parseInt( aThat[i], 10 ) || 0;
	
			// Parts are the same, keep comparing
			if (iThis === iThat) {
				continue;
			}
	
			// Parts are different, return immediately
			return iThis > iThat;
		}
	
		return true;
	};
	
	
	/**
	 * Check if a `<table>` node is a DataTable table already or not.
	 *
	 *  @param {node|jquery|string} table Table node, jQuery object or jQuery
	 *      selector for the table to test. Note that if more than more than one
	 *      table is passed on, only the first will be checked
	 *  @returns {boolean} true the table given is a DataTable, or false otherwise
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
	 *      $('#example').dataTable();
	 *    }
	 */
	DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )
	{
		var t = $(table).get(0);
		var is = false;
	
		if ( table instanceof DataTable.Api ) {
			return true;
		}
	
		$.each( DataTable.settings, function (i, o) {
			var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;
			var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;
	
			if ( o.nTable === t || head === t || foot === t ) {
				is = true;
			}
		} );
	
		return is;
	};
	
	
	/**
	 * Get all DataTable tables that have been initialised - optionally you can
	 * select to get only currently visible tables.
	 *
	 *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
	 *    or visible tables only.
	 *  @returns {array} Array of `table` nodes (not DataTable instances) which are
	 *    DataTables
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    $.each( $.fn.dataTable.tables(true), function () {
	 *      $(table).DataTable().columns.adjust();
	 *    } );
	 */
	DataTable.tables = DataTable.fnTables = function ( visible )
	{
		var api = false;
	
		if ( $.isPlainObject( visible ) ) {
			api = visible.api;
			visible = visible.visible;
		}
	
		var a = $.map( DataTable.settings, function (o) {
			if ( !visible || (visible && $(o.nTable).is(':visible')) ) {
				return o.nTable;
			}
		} );
	
		return api ?
			new _Api( a ) :
			a;
	};
	
	
	/**
	 * Convert from camel case parameters to Hungarian notation. This is made public
	 * for the extensions to provide the same ability as DataTables core to accept
	 * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
	 * parameters.
	 *
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 */
	DataTable.camelToHungarian = _fnCamelToHungarian;
	
	
	
	/**
	 *
	 */
	_api_register( '$()', function ( selector, opts ) {
		var
			rows   = this.rows( opts ).nodes(), // Get all rows
			jqRows = $(rows);
	
		return $( [].concat(
			jqRows.filter( selector ).toArray(),
			jqRows.find( selector ).toArray()
		) );
	} );
	
	
	// jQuery functions to operate on the tables
	$.each( [ 'on', 'one', 'off' ], function (i, key) {
		_api_register( key+'()', function ( /* event, handler */ ) {
			var args = Array.prototype.slice.call(arguments);
	
			// Add the `dt` namespace automatically if it isn't already present
			args[0] = $.map( args[0].split( /\s/ ), function ( e ) {
				return ! e.match(/\.dt\b/) ?
					e+'.dt' :
					e;
				} ).join( ' ' );
	
			var inst = $( this.tables().nodes() );
			inst[key].apply( inst, args );
			return this;
		} );
	} );
	
	
	_api_register( 'clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnClearTable( settings );
		} );
	} );
	
	
	_api_register( 'settings()', function () {
		return new _Api( this.context, this.context );
	} );
	
	
	_api_register( 'init()', function () {
		var ctx = this.context;
		return ctx.length ? ctx[0].oInit : null;
	} );
	
	
	_api_register( 'data()', function () {
		return this.iterator( 'table', function ( settings ) {
			return _pluck( settings.aoData, '_aData' );
		} ).flatten();
	} );
	
	
	_api_register( 'destroy()', function ( remove ) {
		remove = remove || false;
	
		return this.iterator( 'table', function ( settings ) {
			var orig      = settings.nTableWrapper.parentNode;
			var classes   = settings.oClasses;
			var table     = settings.nTable;
			var tbody     = settings.nTBody;
			var thead     = settings.nTHead;
			var tfoot     = settings.nTFoot;
			var jqTable   = $(table);
			var jqTbody   = $(tbody);
			var jqWrapper = $(settings.nTableWrapper);
			var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );
			var i, ien;
	
			// Flag to note that the table is currently being destroyed - no action
			// should be taken
			settings.bDestroying = true;
	
			// Fire off the destroy callbacks for plug-ins etc
			_fnCallbackFire( settings, "aoDestroyCallback", "destroy", [settings] );
	
			// If not being removed from the document, make all columns visible
			if ( ! remove ) {
				new _Api( settings ).columns().visible( true );
			}
	
			// Blitz all `DT` namespaced events (these are internal events, the
			// lowercase, `dt` events are user subscribed and they are responsible
			// for removing them
			jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');
			$(window).off('.DT-'+settings.sInstance);
	
			// When scrolling we had to break the table up - restore it
			if ( table != thead.parentNode ) {
				jqTable.children('thead').detach();
				jqTable.append( thead );
			}
	
			if ( tfoot && table != tfoot.parentNode ) {
				jqTable.children('tfoot').detach();
				jqTable.append( tfoot );
			}
	
			settings.aaSorting = [];
			settings.aaSortingFixed = [];
			_fnSortingClasses( settings );
	
			$( rows ).removeClass( settings.asStripeClasses.join(' ') );
	
			$('th, td', thead).removeClass( classes.sSortable+' '+
				classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone
			);
	
			// Add the TR elements back into the table in their original order
			jqTbody.children().detach();
			jqTbody.append( rows );
	
			// Remove the DataTables generated nodes, events and classes
			var removedMethod = remove ? 'remove' : 'detach';
			jqTable[ removedMethod ]();
			jqWrapper[ removedMethod ]();
	
			// If we need to reattach the table to the document
			if ( ! remove && orig ) {
				// insertBefore acts like appendChild if !arg[1]
				orig.insertBefore( table, settings.nTableReinsertBefore );
	
				// Restore the width of the original table - was read from the style property,
				// so we can restore directly to that
				jqTable
					.css( 'width', settings.sDestroyWidth )
					.removeClass( classes.sTable );
	
				// If the were originally stripe classes - then we add them back here.
				// Note this is not fool proof (for example if not all rows had stripe
				// classes - but it's a good effort without getting carried away
				ien = settings.asDestroyStripes.length;
	
				if ( ien ) {
					jqTbody.children().each( function (i) {
						$(this).addClass( settings.asDestroyStripes[i % ien] );
					} );
				}
			}
	
			/* Remove the settings object from the settings array */
			var idx = $.inArray( settings, DataTable.settings );
			if ( idx !== -1 ) {
				DataTable.settings.splice( idx, 1 );
			}
		} );
	} );
	
	
	// Add the `every()` method for rows, columns and cells in a compact form
	$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {
		_api_register( type+'s().every()', function ( fn ) {
			var opts = this.selector.opts;
			var api = this;
	
			return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {
				// Rows and columns:
				//  arg1 - index
				//  arg2 - table counter
				//  arg3 - loop counter
				//  arg4 - undefined
				// Cells:
				//  arg1 - row index
				//  arg2 - column index
				//  arg3 - table counter
				//  arg4 - loop counter
				fn.call(
					api[ type ](
						arg1,
						type==='cell' ? arg2 : opts,
						type==='cell' ? opts : undefined
					),
					arg1, arg2, arg3, arg4
				);
			} );
		} );
	} );
	
	
	// i18n method for extensions to be able to use the language object from the
	// DataTable
	_api_register( 'i18n()', function ( token, def, plural ) {
		var ctx = this.context[0];
		var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );
	
		if ( resolved === undefined ) {
			resolved = def;
		}
	
		if ( plural !== undefined && $.isPlainObject( resolved ) ) {
			resolved = resolved[ plural ] !== undefined ?
				resolved[ plural ] :
				resolved._;
		}
	
		return resolved.replace( '%d', plural ); // nb: plural might be undefined,
	} );
	/**
	 * Version string for plug-ins to check compatibility. Allowed format is
	 * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
	 * only for non-release builds. See http://semver.org/ for more information.
	 *  @member
	 *  @type string
	 *  @default Version number
	 */
	DataTable.version = "1.10.21";

	/**
	 * Private data store, containing all of the settings objects that are
	 * created for the tables on a given page.
	 *
	 * Note that the `DataTable.settings` object is aliased to
	 * `jQuery.fn.dataTableExt` through which it may be accessed and
	 * manipulated, or `jQuery.fn.dataTable.settings`.
	 *  @member
	 *  @type array
	 *  @default []
	 *  @private
	 */
	DataTable.settings = [];

	/**
	 * Object models container, for the various models that DataTables has
	 * available to it. These models define the objects that are used to hold
	 * the active state and configuration of the table.
	 *  @namespace
	 */
	DataTable.models = {};
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * search information for the global filter and individual column filters.
	 *  @namespace
	 */
	DataTable.models.oSearch = {
		/**
		 * Flag to indicate if the filtering should be case insensitive or not
		 *  @type boolean
		 *  @default true
		 */
		"bCaseInsensitive": true,
	
		/**
		 * Applied search term
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sSearch": "",
	
		/**
		 * Flag to indicate if the search term should be interpreted as a
		 * regular expression (true) or not (false) and therefore and special
		 * regex characters escaped.
		 *  @type boolean
		 *  @default false
		 */
		"bRegex": false,
	
		/**
		 * Flag to indicate if DataTables is to use its smart filtering or not.
		 *  @type boolean
		 *  @default true
		 */
		"bSmart": true
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * each individual row. This is the object format used for the settings
	 * aoData array.
	 *  @namespace
	 */
	DataTable.models.oRow = {
		/**
		 * TR element for the row
		 *  @type node
		 *  @default null
		 */
		"nTr": null,
	
		/**
		 * Array of TD elements for each row. This is null until the row has been
		 * created.
		 *  @type array nodes
		 *  @default []
		 */
		"anCells": null,
	
		/**
		 * Data object from the original data source for the row. This is either
		 * an array if using the traditional form of DataTables, or an object if
		 * using mData options. The exact type will depend on the passed in
		 * data from the data source, or will be an array if using DOM a data
		 * source.
		 *  @type array|object
		 *  @default []
		 */
		"_aData": [],
	
		/**
		 * Sorting data cache - this array is ostensibly the same length as the
		 * number of columns (although each index is generated only as it is
		 * needed), and holds the data that is used for sorting each column in the
		 * row. We do this cache generation at the start of the sort in order that
		 * the formatting of the sort data need be done only once for each cell
		 * per sort. This array should not be read from or written to by anything
		 * other than the master sorting methods.
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aSortData": null,
	
		/**
		 * Per cell filtering data cache. As per the sort data cache, used to
		 * increase the performance of the filtering in DataTables
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aFilterData": null,
	
		/**
		 * Filtering data cache. This is the same as the cell filtering cache, but
		 * in this case a string rather than an array. This is easily computed with
		 * a join on `_aFilterData`, but is provided as a cache so the join isn't
		 * needed on every search (memory traded for performance)
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_sFilterRow": null,
	
		/**
		 * Cache of the class name that DataTables has applied to the row, so we
		 * can quickly look at this variable rather than needing to do a DOM check
		 * on className for the nTr property.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *  @private
		 */
		"_sRowStripe": "",
	
		/**
		 * Denote if the original data source was from the DOM, or the data source
		 * object. This is used for invalidating data, so DataTables can
		 * automatically read data from the original source, unless uninstructed
		 * otherwise.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"src": null,
	
		/**
		 * Index in the aoData array. This saves an indexOf lookup when we have the
		 * object, but want to know the index
		 *  @type integer
		 *  @default -1
		 *  @private
		 */
		"idx": -1
	};
	
	
	/**
	 * Template object for the column information object in DataTables. This object
	 * is held in the settings aoColumns array and contains all the information that
	 * DataTables needs about each individual column.
	 *
	 * Note that this object is related to {@link DataTable.defaults.column}
	 * but this one is the internal data store for DataTables's cache of columns.
	 * It should NOT be manipulated outside of DataTables. Any configuration should
	 * be done through the initialisation options.
	 *  @namespace
	 */
	DataTable.models.oColumn = {
		/**
		 * Column index. This could be worked out on-the-fly with $.inArray, but it
		 * is faster to just hold it as a variable
		 *  @type integer
		 *  @default null
		 */
		"idx": null,
	
		/**
		 * A list of the columns that sorting should occur on when this column
		 * is sorted. That this property is an array allows multi-column sorting
		 * to be defined for a column (for example first name / last name columns
		 * would benefit from this). The values are integers pointing to the
		 * columns to be sorted on (typically it will be a single integer pointing
		 * at itself, but that doesn't need to be the case).
		 *  @type array
		 */
		"aDataSort": null,
	
		/**
		 * Define the sorting directions that are applied to the column, in sequence
		 * as the column is repeatedly sorted upon - i.e. the first value is used
		 * as the sorting direction when the column if first sorted (clicked on).
		 * Sort it again (click again) and it will move on to the next index.
		 * Repeat until loop.
		 *  @type array
		 */
		"asSorting": null,
	
		/**
		 * Flag to indicate if the column is searchable, and thus should be included
		 * in the filtering or not.
		 *  @type boolean
		 */
		"bSearchable": null,
	
		/**
		 * Flag to indicate if the column is sortable or not.
		 *  @type boolean
		 */
		"bSortable": null,
	
		/**
		 * Flag to indicate if the column is currently visible in the table or not
		 *  @type boolean
		 */
		"bVisible": null,
	
		/**
		 * Store for manual type assignment using the `column.type` option. This
		 * is held in store so we can manipulate the column's `sType` property.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"_sManualType": null,
	
		/**
		 * Flag to indicate if HTML5 data attributes should be used as the data
		 * source for filtering or sorting. True is either are.
		 *  @type boolean
		 *  @default false
		 *  @private
		 */
		"_bAttrSrc": false,
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} nTd The TD node that has been created
		 *  @param {*} sData The Data for the cell
		 *  @param {array|object} oData The data for the whole row
		 *  @param {int} iRow The row index for the aoData data store
		 *  @default null
		 */
		"fnCreatedCell": null,
	
		/**
		 * Function to get data from a cell in a column. You should <b>never</b>
		 * access data directly through _aData internally in DataTables - always use
		 * the method attached to this property. It allows mData to function as
		 * required. This function is automatically assigned by the column
		 * initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {string} sSpecific The specific data type you want to get -
		 *    'display', 'type' 'filter' 'sort'
		 *  @returns {*} The data for the cell from the given row's data
		 *  @default null
		 */
		"fnGetData": null,
	
		/**
		 * Function to set data for a cell in the column. You should <b>never</b>
		 * set the data directly to _aData internally in DataTables - always use
		 * this method. It allows mData to function as required. This function
		 * is automatically assigned by the column initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {*} sValue Value to set
		 *  @default null
		 */
		"fnSetData": null,
	
		/**
		 * Property to read the value for the cells in the column from the data
		 * source array / object. If null, then the default content is used, if a
		 * function is given then the return from the function is used.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mData": null,
	
		/**
		 * Partner property to mData which is used (only when defined) to get
		 * the data - i.e. it is basically the same as mData, but without the
		 * 'set' option, and also the data fed to it is the result from mData.
		 * This is the rendering method to match the data method of mData.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mRender": null,
	
		/**
		 * Unique header TH/TD element for this column - this is what the sorting
		 * listener is attached to (if sorting is enabled.)
		 *  @type node
		 *  @default null
		 */
		"nTh": null,
	
		/**
		 * Unique footer TH/TD element for this column (if there is one). Not used
		 * in DataTables as such, but can be used for plug-ins to reference the
		 * footer for each column.
		 *  @type node
		 *  @default null
		 */
		"nTf": null,
	
		/**
		 * The class to apply to all TD elements in the table's TBODY for the column
		 *  @type string
		 *  @default null
		 */
		"sClass": null,
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 *  @type string
		 */
		"sContentPadding": null,
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because mData
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 */
		"sDefaultContent": null,
	
		/**
		 * Name for the column, allowing reference to the column by name as well as
		 * by index (needs a lookup to work by name).
		 *  @type string
		 */
		"sName": null,
	
		/**
		 * Custom sorting data type - defines which of the available plug-ins in
		 * afnSortData the custom sorting will use - if any is defined.
		 *  @type string
		 *  @default std
		 */
		"sSortDataType": 'std',
	
		/**
		 * Class to be applied to the header element when sorting on this column
		 *  @type string
		 *  @default null
		 */
		"sSortingClass": null,
	
		/**
		 * Class to be applied to the header element when sorting on this column -
		 * when jQuery UI theming is used.
		 *  @type string
		 *  @default null
		 */
		"sSortingClassJUI": null,
	
		/**
		 * Title of the column - what is seen in the TH element (nTh).
		 *  @type string
		 */
		"sTitle": null,
	
		/**
		 * Column sorting and filtering type
		 *  @type string
		 *  @default null
		 */
		"sType": null,
	
		/**
		 * Width of the column
		 *  @type string
		 *  @default null
		 */
		"sWidth": null,
	
		/**
		 * Width of the column when it was first "encountered"
		 *  @type string
		 *  @default null
		 */
		"sWidthOrig": null
	};
	
	
	/*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would at around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit.
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */
	
	/**
	 * Initialisation options that can be given to DataTables at initialisation
	 * time.
	 *  @namespace
	 */
	DataTable.defaults = {
		/**
		 * An array of data to use for the table, passed in at initialisation which
		 * will be used in preference to any data which is already in the DOM. This is
		 * particularly useful for constructing tables purely in Javascript, for
		 * example with a custom Ajax call.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.data
		 *
		 *  @example
		 *    // Using a 2D array data source
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using an array of objects as a data source (`data`)
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"aaData": null,
	
	
		/**
		 * If ordering is enabled, then DataTables will perform a first pass sort on
		 * initialisation. You can define which column(s) the sort is performed
		 * upon, and the sorting direction, with this variable. The `sorting` array
		 * should contain an array for each column to be sorted initially containing
		 * the column's index and a direction string ('asc' or 'desc').
		 *  @type array
		 *  @default [[0,'asc']]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.order
		 *
		 *  @example
		 *    // Sort by 3rd column first, and then 4th column
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
		 *
		 *    // No initial sorting
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": []
		 *      } );
		 *    } );
		 */
		"aaSorting": [[0,'asc']],
	
	
		/**
		 * This parameter is basically identical to the `sorting` parameter, but
		 * cannot be overridden by user interaction with the table. What this means
		 * is that you could have a column (visible or hidden) which the sorting
		 * will always be forced on first - any sorting after that (from the user)
		 * will then be performed as required. This can be useful for grouping rows
		 * together.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.orderFixed
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderFixed": [[0,'asc']]
		 *      } );
		 *    } )
		 */
		"aaSortingFixed": [],
	
	
		/**
		 * DataTables can be instructed to load data to display in the table from a
		 * Ajax source. This option defines how that Ajax call is made and where to.
		 *
		 * The `ajax` property has three different modes of operation, depending on
		 * how it is defined. These are:
		 *
		 * * `string` - Set the URL from where the data should be loaded from.
		 * * `object` - Define properties for `jQuery.ajax`.
		 * * `function` - Custom data get function
		 *
		 * `string`
		 * --------
		 *
		 * As a string, the `ajax` property simply defines the URL from which
		 * DataTables will load data.
		 *
		 * `object`
		 * --------
		 *
		 * As an object, the parameters in the object are passed to
		 * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
		 * of the Ajax request. DataTables has a number of default parameters which
		 * you can override using this option. Please refer to the jQuery
		 * documentation for a full description of the options available, although
		 * the following parameters provide additional options in DataTables or
		 * require special consideration:
		 *
		 * * `data` - As with jQuery, `data` can be provided as an object, but it
		 *   can also be used as a function to manipulate the data DataTables sends
		 *   to the server. The function takes a single parameter, an object of
		 *   parameters with the values that DataTables has readied for sending. An
		 *   object may be returned which will be merged into the DataTables
		 *   defaults, or you can add the items to the object that was passed in and
		 *   not return anything from the function. This supersedes `fnServerParams`
		 *   from DataTables 1.9-.
		 *
		 * * `dataSrc` - By default DataTables will look for the property `data` (or
		 *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
		 *   from an Ajax source or for server-side processing - this parameter
		 *   allows that property to be changed. You can use Javascript dotted
		 *   object notation to get a data source for multiple levels of nesting, or
		 *   it my be used as a function. As a function it takes a single parameter,
		 *   the JSON returned from the server, which can be manipulated as
		 *   required, with the returned value being that used by DataTables as the
		 *   data source for the table. This supersedes `sAjaxDataProp` from
		 *   DataTables 1.9-.
		 *
		 * * `success` - Should not be overridden it is used internally in
		 *   DataTables. To manipulate / transform the data returned by the server
		 *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
		 *
		 * `function`
		 * ----------
		 *
		 * As a function, making the Ajax call is left up to yourself allowing
		 * complete control of the Ajax request. Indeed, if desired, a method other
		 * than Ajax could be used to obtain the required data, such as Web storage
		 * or an AIR database.
		 *
		 * The function is given four parameters and no return is required. The
		 * parameters are:
		 *
		 * 1. _object_ - Data to send to the server
		 * 2. _function_ - Callback function that must be executed when the required
		 *    data has been obtained. That data should be passed into the callback
		 *    as the only parameter
		 * 3. _object_ - DataTables settings object for the table
		 *
		 * Note that this supersedes `fnServerData` from DataTables 1.9-.
		 *
		 *  @type string|object|function
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.ajax
		 *  @since 1.10.0
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax.
		 *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).
		 *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to change
		 *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to read data
		 *   // from a plain array rather than an array in an object
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Manipulate the data returned from the server - add a link to data
		 *   // (note this can, should, be done using `render` for the column - this
		 *   // is just a simple example of how the data can be manipulated).
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Add data to the request
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Send request as POST
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get the data from localStorage (could interface with a form for
		 *   // adding, editing and removing rows).
		 *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
		 */
		"ajax": null,
	
	
		/**
		 * This parameter allows you to readily specify the entries in the length drop
		 * down menu that DataTables shows when pagination is enabled. It can be
		 * either a 1D array of options which will be used for both the displayed
		 * option and the value, or a 2D array which will use the array in the first
		 * position as the value, and the array in the second position as the
		 * displayed options (useful for language strings such as 'All').
		 *
		 * Note that the `pageLength` property will be automatically set to the
		 * first value given in this array, unless `pageLength` is also provided.
		 *  @type array
		 *  @default [ 10, 25, 50, 100 ]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.lengthMenu
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
		 */
		"aLengthMenu": [ 10, 25, 50, 100 ],
	
	
		/**
		 * The `columns` option in the initialisation parameter allows you to define
		 * details about the way individual columns behave. For a full list of
		 * column options that can be set, please see
		 * {@link DataTable.defaults.column}. Note that if you use `columns` to
		 * define your columns, you must have an entry in the array for every single
		 * column that you have in your table (these can be null if you don't which
		 * to specify any options).
		 *  @member
		 *
		 *  @name DataTable.defaults.column
		 */
		"aoColumns": null,
	
		/**
		 * Very similar to `columns`, `columnDefs` allows you to target a specific
		 * column, multiple columns, or all columns, using the `targets` property of
		 * each object in the array. This allows great flexibility when creating
		 * tables, as the `columnDefs` arrays can be of any length, targeting the
		 * columns you specifically want. `columnDefs` may use any of the column
		 * options available: {@link DataTable.defaults.column}, but it _must_
		 * have `targets` defined in each object in the array. Values in the `targets`
		 * array may be:
		 *   <ul>
		 *     <li>a string - class name will be matched on the TH for the column</li>
		 *     <li>0 or a positive integer - column index counting from the left</li>
		 *     <li>a negative integer - column index counting from the right</li>
		 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
		 *   </ul>
		 *  @member
		 *
		 *  @name DataTable.defaults.columnDefs
		 */
		"aoColumnDefs": null,
	
	
		/**
		 * Basically the same as `search`, this parameter defines the individual column
		 * filtering state at initialisation time. The array must be of the same size
		 * as the number of columns, and each element be an object with the parameters
		 * `search` and `escapeRegex` (the latter is optional). 'null' is also
		 * accepted and the default will be used.
		 *  @type array
		 *  @default []
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.searchCols
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
		 */
		"aoSearchCols": [],
	
	
		/**
		 * An array of CSS classes that should be applied to displayed rows. This
		 * array may be of any length, and DataTables will apply each class
		 * sequentially, looping when required.
		 *  @type array
		 *  @default null <i>Will take the values determined by the `oClasses.stripe*`
		 *    options</i>
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.stripeClasses
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
		 */
		"asStripeClasses": null,
	
	
		/**
		 * Enable or disable automatic column width calculation. This can be disabled
		 * as an optimisation (it takes some time to calculate the widths) if the
		 * tables widths are passed in using `columns`.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.autoWidth
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
		 */
		"bAutoWidth": true,
	
	
		/**
		 * Deferred rendering can provide DataTables with a huge speed boost when you
		 * are using an Ajax or JS data source for the table. This option, when set to
		 * true, will cause DataTables to defer the creation of the table elements for
		 * each row until they are needed for a draw - saving a significant amount of
		 * time.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.deferRender
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajax": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
		 */
		"bDeferRender": false,
	
	
		/**
		 * Replace a DataTable which matches the given selector and replace it with
		 * one which has the properties of the new initialisation object passed. If no
		 * table matches the selector, then the new DataTable will be constructed as
		 * per normal.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.destroy
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
		 */
		"bDestroy": false,
	
	
		/**
		 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
		 * that it allows the end user to input multiple words (space separated) and
		 * will match a row containing those words, even if not in the order that was
		 * specified (this allow matching across multiple columns). Note that if you
		 * wish to use filtering in DataTables this must remain 'true' - to remove the
		 * default filtering input box and retain filtering abilities, please use
		 * {@link DataTable.defaults.dom}.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.searching
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "searching": false
		 *      } );
		 *    } );
		 */
		"bFilter": true,
	
	
		/**
		 * Enable or disable the table information display. This shows information
		 * about the data that is currently visible on the page, including information
		 * about filtered data if that action is being performed.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.info
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
		 */
		"bInfo": true,
	
	
		/**
		 * Allows the end user to select the size of a formatted page from a select
		 * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.lengthChange
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
		 */
		"bLengthChange": true,
	
	
		/**
		 * Enable or disable pagination.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.paging
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paging": false
		 *      } );
		 *    } );
		 */
		"bPaginate": true,
	
	
		/**
		 * Enable or disable the display of a 'processing' indicator when the table is
		 * being processed (e.g. a sort). This is particularly useful for tables with
		 * large amounts of data where it can take a noticeable amount of time to sort
		 * the entries.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.processing
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
		 */
		"bProcessing": false,
	
	
		/**
		 * Retrieve the DataTables object for the given selector. Note that if the
		 * table has already been initialised, this parameter will cause DataTables
		 * to simply return the object that has already been set up - it will not take
		 * account of any changes you might have made to the initialisation object
		 * passed to DataTables (setting this parameter to true is an acknowledgement
		 * that you understand this). `destroy` can be used to reinitialise a table if
		 * you need.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.retrieve
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
		 *
		 *    function initTable ()
		 *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
		 *
		 *    function tableActions ()
		 *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
		 */
		"bRetrieve": false,
	
	
		/**
		 * When vertical (y) scrolling is enabled, DataTables will force the height of
		 * the table's viewport to the given height at all times (useful for layout).
		 * However, this can look odd when filtering data down to a small data set,
		 * and the footer is left "floating" further down. This parameter (when
		 * enabled) will cause DataTables to collapse the table's viewport down when
		 * the result set will fit within the given Y height.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollCollapse
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"bScrollCollapse": false,
	
	
		/**
		 * Configure DataTables to use server-side processing. Note that the
		 * `ajax` parameter must also be given in order to give DataTables a
		 * source to obtain the required data for each draw.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverSide
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
		 */
		"bServerSide": false,
	
	
		/**
		 * Enable or disable sorting of columns. Sorting of individual columns can be
		 * disabled by the `sortable` option for each column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.ordering
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "ordering": false
		 *      } );
		 *    } );
		 */
		"bSort": true,
	
	
		/**
		 * Enable or display DataTables' ability to sort multiple columns at the
		 * same time (activated by shift-click by the user).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderMulti
		 *
		 *  @example
		 *    // Disable multiple column sorting ability
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderMulti": false
		 *      } );
		 *    } );
		 */
		"bSortMulti": true,
	
	
		/**
		 * Allows control over whether DataTables should use the top (true) unique
		 * cell that is found for a single column, or the bottom (false - default).
		 * This is useful when using complex headers.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderCellsTop
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderCellsTop": true
		 *      } );
		 *    } );
		 */
		"bSortCellsTop": false,
	
	
		/**
		 * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
		 * `sorting\_3` to the columns which are currently being sorted on. This is
		 * presented as a feature switch as it can increase processing time (while
		 * classes are removed and added) so for large data sets you might want to
		 * turn this off.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.orderClasses
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderClasses": false
		 *      } );
		 *    } );
		 */
		"bSortClasses": true,
	
	
		/**
		 * Enable or disable state saving. When enabled HTML5 `localStorage` will be
		 * used to save table display information such as pagination information,
		 * display length, filtering and sorting. As such when the end user reloads
		 * the page the display display will match what thy had previously set up.
		 *
		 * Due to the use of `localStorage` the default state saving is not supported
		 * in IE6 or 7. If state saving is required in those browsers, use
		 * `stateSaveCallback` to provide a storage solution such as cookies.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.stateSave
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
		 */
		"bStateSave": false,
	
	
		/**
		 * This function is called when a TR element is created (and all TD child
		 * elements have been inserted), or registered if using a DOM source, allowing
		 * manipulation of the TR element (adding classes etc).
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} dataIndex The index of this row in the internal aoData array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.createdRow
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnCreatedRow": null,
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify any aspect you want about the created DOM.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.drawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "drawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnDrawCallback": null,
	
	
		/**
		 * Identical to fnHeaderCallback() but for the table footer this function
		 * allows you to modify the table footer on every 'draw' event.
		 *  @type function
		 *  @param {node} foot "TR" element for the footer
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.footerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( tfoot, data, start, end, display ) {
		 *          tfoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
		 */
		"fnFooterCallback": null,
	
	
		/**
		 * When rendering large numbers in the information element for the table
		 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
		 * to have a comma separator for the 'thousands' units (e.g. 1 million is
		 * rendered as "1,000,000") to help readability for the end user. This
		 * function will override the default method DataTables uses.
		 *  @type function
		 *  @member
		 *  @param {int} toFormat number to be formatted
		 *  @returns {string} formatted string for DataTables to show the number
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.formatNumber
		 *
		 *  @example
		 *    // Format a number using a single quote for the separator (note that
		 *    // this can also be done with the language.thousands option)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          return toFormat.toString().replace(
		 *            /\B(?=(\d{3})+(?!\d))/g, "'"
		 *          );
		 *        };
		 *      } );
		 *    } );
		 */
		"fnFormatNumber": function ( toFormat ) {
			return toFormat.toString().replace(
				/\B(?=(\d{3})+(?!\d))/g,
				this.oLanguage.sThousands
			);
		},
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify the header row. This can be used to calculate and
		 * display useful information about the table.
		 *  @type function
		 *  @param {node} head "TR" element for the header
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.headerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
		 */
		"fnHeaderCallback": null,
	
	
		/**
		 * The information element can be used to convey information about the current
		 * state of the table. Although the internationalisation options presented by
		 * DataTables are quite capable of dealing with most customisations, there may
		 * be times where you wish to customise the string further. This callback
		 * allows you to do exactly that.
		 *  @type function
		 *  @param {object} oSettings DataTables settings object
		 *  @param {int} start Starting position in data for the draw
		 *  @param {int} end End position in data for the draw
		 *  @param {int} max Total number of rows in the table (regardless of
		 *    filtering)
		 *  @param {int} total Total number of rows in the data set, after filtering
		 *  @param {string} pre The string that DataTables has formatted using it's
		 *    own rules
		 *  @returns {string} The string to be displayed in the information element.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.infoCallback
		 *
		 *  @example
		 *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, max, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
		 */
		"fnInfoCallback": null,
	
	
		/**
		 * Called when the table has been initialised. Normally DataTables will
		 * initialise sequentially and there will be no need for this function,
		 * however, this does not hold true when using external language information
		 * since that is obtained using an async XHR call.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} json The JSON object request from the server - only
		 *    present if client-side Ajax sourced data is used
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.initComplete
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
		 */
		"fnInitComplete": null,
	
	
		/**
		 * Called at the very start of each table draw and can be used to cancel the
		 * draw by returning false, any other return (including undefined) results in
		 * the full draw occurring).
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @returns {boolean} False will cancel the draw, anything else (including no
		 *    return) will allow it to complete.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.preDrawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnPreDrawCallback": null,
	
	
		/**
		 * This function allows you to 'post process' each row after it have been
		 * generated for each table draw, but before it is rendered on screen. This
		 * function might be used for setting the row class name etc.
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} displayIndex The display index for the current table draw
		 *  @param {int} displayIndexFull The index of the data in the full list of
		 *    rows (after filtering)
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.rowCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnRowCallback": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * This parameter allows you to override the default function which obtains
		 * the data from the server so something more suitable for your application.
		 * For example you could use POST data, or pull information from a Gears or
		 * AIR database.
		 *  @type function
		 *  @member
		 *  @param {string} source HTTP source to obtain the data from (`ajax`)
		 *  @param {array} data A key/value pair object containing the data to send
		 *    to the server
		 *  @param {function} callback to be called on completion of the data get
		 *    process that will draw the data on the page.
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverData
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerData": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 *  It is often useful to send extra data to the server when making an Ajax
		 * request - for example custom filtering information, and this callback
		 * function makes it trivial to send extra information to the server. The
		 * passed in parameter is the data set that has been constructed by
		 * DataTables, and you can add to this or modify it as you require.
		 *  @type function
		 *  @param {array} data Data array (array of objects which are name/value
		 *    pairs) that has been constructed by DataTables and will be sent to the
		 *    server. In the case of Ajax sourced data with server-side processing
		 *    this will be an empty array, for server-side processing there will be a
		 *    significant number of parameters!
		 *  @returns {undefined} Ensure that you modify the data array passed in,
		 *    as this is passed by reference.
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverParams
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerParams": null,
	
	
		/**
		 * Load the table state. With this function you can define from where, and how, the
		 * state of a table is loaded. By default DataTables will load from `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} callback Callback that can be executed when done. It
		 *    should be passed the loaded state object.
		 *  @return {object} The DataTables state object to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings, callback) {
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              callback( json );
		 *            }
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadCallback": function ( settings ) {
			try {
				return JSON.parse(
					(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
						'DataTables_'+settings.sInstance+'_'+location.pathname
					)
				);
			} catch (e) {
				return {};
			}
		},
	
	
		/**
		 * Callback which allows modification of the saved state prior to loading that state.
		 * This callback is called when the table is loading state from the stored data, but
		 * prior to the settings object being modified by the saved state. Note that for
		 * plug-in authors, you should use the `stateLoadParams` event to load parameters for
		 * a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that is to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never loaded
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Disallow state loading by returning false
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadParams": null,
	
	
		/**
		 * Callback that is called when the state has been loaded from the state saving method
		 * and the DataTables settings object has been modified as a result of the loaded state.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that was loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoaded
		 *
		 *  @example
		 *    // Show an alert with the filtering value that was saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoaded": null,
	
	
		/**
		 * Save the table state. This function allows you to define where and how the state
		 * information for the table is stored By default DataTables will use `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveCallback": function ( settings, data ) {
			try {
				(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
					'DataTables_'+settings.sInstance+'_'+location.pathname,
					JSON.stringify( data )
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the state to be saved. Called when the table
		 * has changed state a new state save is required. This method allows modification of
		 * the state saving object prior to actually doing the save, including addition or
		 * other state properties or modification. Note that for plug-in authors, you should
		 * use the `stateSaveParams` event to save parameters for a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveParams": null,
	
	
		/**
		 * Duration for which the saved state information is considered valid. After this period
		 * has elapsed the state will be returned to the default.
		 * Value is given in seconds.
		 *  @type int
		 *  @default 7200 <i>(2 hours)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.stateDuration
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
		 */
		"iStateDuration": 7200,
	
	
		/**
		 * When enabled DataTables will not make a request to the server for the first
		 * page draw - rather it will use the data already on the page (no sorting etc
		 * will be applied to it), thus saving on an XHR at load time. `deferLoading`
		 * is used to indicate that deferred loading is required, but it is also used
		 * to tell DataTables how many records there are in the full table (allowing
		 * the information element and pagination to be displayed correctly). In the case
		 * where a filtering is applied to the table on initial load, this can be
		 * indicated by giving the parameter as an array, where the first element is
		 * the number of records available after filtering and the second element is the
		 * number of records without filtering (allowing the table information element
		 * to be shown correctly).
		 *  @type int | array
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.deferLoading
		 *
		 *  @example
		 *    // 57 records available in the table, no filtering applied
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // 57 records after filtering, 100 without filtering (an initial filter applied)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
		 */
		"iDeferLoading": null,
	
	
		/**
		 * Number of rows to display on a single page when using pagination. If
		 * feature enabled (`lengthChange`) then the end user will be able to override
		 * this to a custom setting using a pop-up menu.
		 *  @type int
		 *  @default 10
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pageLength
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pageLength": 50
		 *      } );
		 *    } )
		 */
		"iDisplayLength": 10,
	
	
		/**
		 * Define the starting point for data display when using DataTables with
		 * pagination. Note that this parameter is the number of records, rather than
		 * the page number, so if you have 10 records per page and want to start on
		 * the third page, it should be "20".
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayStart
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
		 */
		"iDisplayStart": 0,
	
	
		/**
		 * By default DataTables allows keyboard navigation of the table (sorting, paging,
		 * and filtering) by adding a `tabindex` attribute to the required elements. This
		 * allows you to tab through the controls and press the enter key to activate them.
		 * The tabindex is default 0, meaning that the tab follows the flow of the document.
		 * You can overrule this using this parameter if you wish. Use a value of -1 to
		 * disable built-in keyboard navigation.
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.tabIndex
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
		 */
		"iTabIndex": 0,
	
	
		/**
		 * Classes that DataTables assigns to the various components and features
		 * that it adds to the HTML table. This allows classes to be configured
		 * during initialisation in addition to through the static
		 * {@link DataTable.ext.oStdClasses} object).
		 *  @namespace
		 *  @name DataTable.defaults.classes
		 */
		"oClasses": {},
	
	
		/**
		 * All strings that DataTables uses in the user interface that it creates
		 * are defined in this object, allowing you to modified them individually or
		 * completely replace them all as required.
		 *  @namespace
		 *  @name DataTable.defaults.language
		 */
		"oLanguage": {
			/**
			 * Strings that are used for WAI-ARIA labels and controls only (these are not
			 * actually visible on the page, but will be read by screenreaders, and thus
			 * must be internationalised as well).
			 *  @namespace
			 *  @name DataTable.defaults.language.aria
			 */
			"oAria": {
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted ascending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortAscending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortAscending": ": activate to sort column ascending",
	
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted descending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortDescending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortDescending": ": activate to sort column descending"
			},
	
			/**
			 * Pagination string used by DataTables for the built-in pagination
			 * control types.
			 *  @namespace
			 *  @name DataTable.defaults.language.paginate
			 */
			"oPaginate": {
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the first page.
				 *  @type string
				 *  @default First
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.first
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sFirst": "First",
	
	
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the last page.
				 *  @type string
				 *  @default Last
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.last
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sLast": "Last",
	
	
				/**
				 * Text to use for the 'next' pagination button (to take the user to the
				 * next page).
				 *  @type string
				 *  @default Next
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.next
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sNext": "Next",
	
	
				/**
				 * Text to use for the 'previous' pagination button (to take the user to
				 * the previous page).
				 *  @type string
				 *  @default Previous
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.previous
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sPrevious": "Previous"
			},
	
			/**
			 * This string is shown in preference to `zeroRecords` when the table is
			 * empty of data (regardless of filtering). Note that this is an optional
			 * parameter - if it is not given, the value of `zeroRecords` will be used
			 * instead (either the default or given value).
			 *  @type string
			 *  @default No data available in table
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.emptyTable
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sEmptyTable": "No data available in table",
	
	
			/**
			 * This string gives information to the end user about the information
			 * that is current on display on the page. The following tokens can be
			 * used in the string and will be dynamically replaced as the table
			 * display updates. This tokens can be placed anywhere in the string, or
			 * removed as needed by the language requires:
			 *
			 * * `\_START\_` - Display index of the first record on the current page
			 * * `\_END\_` - Display index of the last record on the current page
			 * * `\_TOTAL\_` - Number of records in the table after filtering
			 * * `\_MAX\_` - Number of records in the table without filtering
			 * * `\_PAGE\_` - Current page number
			 * * `\_PAGES\_` - Total number of pages of data in the table
			 *
			 *  @type string
			 *  @default Showing _START_ to _END_ of _TOTAL_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.info
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Showing page _PAGE_ of _PAGES_"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
	
	
			/**
			 * Display information string for when the table is empty. Typically the
			 * format of this string should match `info`.
			 *  @type string
			 *  @default Showing 0 to 0 of 0 entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoEmpty
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoEmpty": "Showing 0 to 0 of 0 entries",
	
	
			/**
			 * When a user filters the information in a table, this string is appended
			 * to the information (`info`) to give an idea of how strong the filtering
			 * is. The variable _MAX_ is dynamically updated.
			 *  @type string
			 *  @default (filtered from _MAX_ total entries)
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoFiltered
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoFiltered": "(filtered from _MAX_ total entries)",
	
	
			/**
			 * If can be useful to append extra information to the info string at times,
			 * and this variable does exactly that. This information will be appended to
			 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
			 * being used) at all times.
			 *  @type string
			 *  @default <i>Empty string</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoPostFix
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoPostFix": "",
	
	
			/**
			 * This decimal place operator is a little different from the other
			 * language options since DataTables doesn't output floating point
			 * numbers, so it won't ever use this for display of a number. Rather,
			 * what this parameter does is modify the sort methods of the table so
			 * that numbers which are in a format which has a character other than
			 * a period (`.`) as a decimal place will be sorted numerically.
			 *
			 * Note that numbers with different decimal places cannot be shown in
			 * the same table and still be sortable, the table must be consistent.
			 * However, multiple different tables on the page can use different
			 * decimal place characters.
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.decimal
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "decimal": ","
			 *          "thousands": "."
			 *        }
			 *      } );
			 *    } );
			 */
			"sDecimal": "",
	
	
			/**
			 * DataTables has a build in number formatter (`formatNumber`) which is
			 * used to format large numbers that are used in the table information.
			 * By default a comma is used, but this can be trivially changed to any
			 * character you wish with this parameter.
			 *  @type string
			 *  @default ,
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.thousands
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "thousands": "'"
			 *        }
			 *      } );
			 *    } );
			 */
			"sThousands": ",",
	
	
			/**
			 * Detail the action that will be taken when the drop down menu for the
			 * pagination length option is changed. The '_MENU_' variable is replaced
			 * with a default select list of 10, 25, 50 and 100, and can be replaced
			 * with a custom select box if required.
			 *  @type string
			 *  @default Show _MENU_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.lengthMenu
			 *
			 *  @example
			 *    // Language change only
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Language and options change
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
			 */
			"sLengthMenu": "Show _MENU_ entries",
	
	
			/**
			 * When using Ajax sourced data and during the first draw when DataTables is
			 * gathering the data, this message is shown in an empty row in the table to
			 * indicate to the end user the the data is being loaded. Note that this
			 * parameter is not used when loading data by server-side processing, just
			 * Ajax sourced data with client-side processing.
			 *  @type string
			 *  @default Loading...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.loadingRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
			 */
			"sLoadingRecords": "Loading...",
	
	
			/**
			 * Text which is displayed when the table is processing a user action
			 * (usually a sort command or similar).
			 *  @type string
			 *  @default Processing...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.processing
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
			 */
			"sProcessing": "Processing...",
	
	
			/**
			 * Details the actions that will be taken when the user types into the
			 * filtering input text box. The variable "_INPUT_", if used in the string,
			 * is replaced with the HTML text box for the filtering input allowing
			 * control over where it appears in the string. If "_INPUT_" is not given
			 * then the input box is appended to the string automatically.
			 *  @type string
			 *  @default Search:
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.search
			 *
			 *  @example
			 *    // Input text box will be appended at the end automatically
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Specify where the filter should appear
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sSearch": "Search:",
	
	
			/**
			 * Assign a `placeholder` attribute to the search `input` element
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.searchPlaceholder
			 */
			"sSearchPlaceholder": "",
	
	
			/**
			 * All of the language information can be stored in a file on the
			 * server-side, which DataTables will look up if this parameter is passed.
			 * It must store the URL of the language file, which is in a JSON format,
			 * and the object has the same properties as the oLanguage object in the
			 * initialiser object (i.e. the above parameters). Please refer to one of
			 * the example language files to see how this works in action.
			 *  @type string
			 *  @default <i>Empty string - i.e. disabled</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.url
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
			 */
			"sUrl": "",
	
	
			/**
			 * Text shown inside the table records when the is no information to be
			 * displayed after filtering. `emptyTable` is shown when there is simply no
			 * information in the table at all (regardless of filtering).
			 *  @type string
			 *  @default No matching records found
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.zeroRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
			 */
			"sZeroRecords": "No matching records found"
		},
	
	
		/**
		 * This parameter allows you to have define the global filtering state at
		 * initialisation time. As an object the `search` parameter must be
		 * defined, but all other parameters are optional. When `regex` is true,
		 * the search string will be treated as a regular expression, when false
		 * (default) it will be treated as a straight string. When `smart`
		 * DataTables will use it's smart filtering methods (to word match at
		 * any point in the data), when false this will not be done.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.search
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
		 */
		"oSearch": $.extend( {}, DataTable.models.oSearch ),
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * By default DataTables will look for the property `data` (or `aaData` for
		 * compatibility with DataTables 1.9-) when obtaining data from an Ajax
		 * source or for server-side processing - this parameter allows that
		 * property to be changed. You can use Javascript dotted object notation to
		 * get a data source for multiple levels of nesting.
		 *  @type string
		 *  @default data
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxDataProp
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxDataProp": "data",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * You can instruct DataTables to load data from an external
		 * source using this parameter (use aData if you want to pass data in you
		 * already have). Simply provide a url a JSON object can be obtained from.
		 *  @type string
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxSource
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxSource": null,
	
	
		/**
		 * This initialisation variable allows you to specify exactly where in the
		 * DOM you want DataTables to inject the various controls it adds to the page
		 * (for example you might want the pagination controls at the top of the
		 * table). DIV elements (with or without a custom class) can also be added to
		 * aid styling. The follow syntax is used:
		 *   <ul>
		 *     <li>The following options are allowed:
		 *       <ul>
		 *         <li>'l' - Length changing</li>
		 *         <li>'f' - Filtering input</li>
		 *         <li>'t' - The table!</li>
		 *         <li>'i' - Information</li>
		 *         <li>'p' - Pagination</li>
		 *         <li>'r' - pRocessing</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following constants are allowed:
		 *       <ul>
		 *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
		 *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following syntax is expected:
		 *       <ul>
		 *         <li>'&lt;' and '&gt;' - div elements</li>
		 *         <li>'&lt;"class" and '&gt;' - div with a class</li>
		 *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
		 *       </ul>
		 *     </li>
		 *     <li>Examples:
		 *       <ul>
		 *         <li>'&lt;"wrapper"flipt&gt;'</li>
		 *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
		 *       </ul>
		 *     </li>
		 *   </ul>
		 *  @type string
		 *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>
		 *    <"H"lfr>t<"F"ip> <i>(when `jQueryUI` is true)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.dom
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
		 */
		"sDom": "lfrtip",
	
	
		/**
		 * Search delay option. This will throttle full table searches that use the
		 * DataTables provided search input element (it does not effect calls to
		 * `dt-api search()`, providing a delay before the search is made.
		 *  @type integer
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.searchDelay
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchDelay": 200
		 *      } );
		 *    } )
		 */
		"searchDelay": null,
	
	
		/**
		 * DataTables features six different built-in options for the buttons to
		 * display for pagination control:
		 *
		 * * `numbers` - Page number buttons only
		 * * `simple` - 'Previous' and 'Next' buttons only
		 * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
		 * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
		 * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
		 * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
		 *  
		 * Further methods can be added using {@link DataTable.ext.oPagination}.
		 *  @type string
		 *  @default simple_numbers
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pagingType
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pagingType": "full_numbers"
		 *      } );
		 *    } )
		 */
		"sPaginationType": "simple_numbers",
	
	
		/**
		 * Enable horizontal scrolling. When a table is too wide to fit into a
		 * certain layout, or you have a large number of columns in the table, you
		 * can enable x-scrolling to show the table in a viewport, which can be
		 * scrolled. This property can be `true` which will allow the table to
		 * scroll horizontally when needed, or any CSS unit, or a number (in which
		 * case it will be treated as a pixel measurement). Setting as simply `true`
		 * is recommended.
		 *  @type boolean|string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollX
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": true,
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"sScrollX": "",
	
	
		/**
		 * This property can be used to force a DataTable to use more width than it
		 * might otherwise do when x-scrolling is enabled. For example if you have a
		 * table which requires to be well spaced, this parameter is useful for
		 * "over-sizing" the table, and thus forcing scrolling. This property can by
		 * any CSS unit, or a number (in which case it will be treated as a pixel
		 * measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollXInner
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
		 */
		"sScrollXInner": "",
	
	
		/**
		 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
		 * to the given height, and enable scrolling for any data which overflows the
		 * current viewport. This can be used as an alternative to paging to display
		 * a lot of data in a small area (although paging and scrolling can both be
		 * enabled at the same time). This property can be any CSS unit, or a number
		 * (in which case it will be treated as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollY
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"sScrollY": "",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * Set the HTTP method that is used to make the Ajax call for server-side
		 * processing or Ajax sourced data.
		 *  @type string
		 *  @default GET
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverMethod
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sServerMethod": "GET",
	
	
		/**
		 * DataTables makes use of renderers when displaying HTML elements for
		 * a table. These renderers can be added or modified by plug-ins to
		 * generate suitable mark-up for a site. For example the Bootstrap
		 * integration plug-in for DataTables uses a paging button renderer to
		 * display pagination buttons in the mark-up required by Bootstrap.
		 *
		 * For further information about the renderers available see
		 * DataTable.ext.renderer
		 *  @type string|object
		 *  @default null
		 *
		 *  @name DataTable.defaults.renderer
		 *
		 */
		"renderer": null,
	
	
		/**
		 * Set the data property name that DataTables should use to get a row's id
		 * to set as the `id` property in the node.
		 *  @type string
		 *  @default DT_RowId
		 *
		 *  @name DataTable.defaults.rowId
		 */
		"rowId": "DT_RowId"
	};
	
	_fnHungarianMap( DataTable.defaults );
	
	
	
	/*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */
	
	/**
	 * Column options that can be given to DataTables at initialisation time.
	 *  @namespace
	 */
	DataTable.defaults.column = {
		/**
		 * Define which column(s) an order will occur on for this column. This
		 * allows a column's ordering to take multiple columns into account when
		 * doing a sort or use the data from a different column. For example first
		 * name / last name columns make sense to do a multi-column sort over the
		 * two columns.
		 *  @type array|int
		 *  @default null <i>Takes the value of the column index automatically</i>
		 *
		 *  @name DataTable.defaults.column.orderData
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderData": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "orderData": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "orderData": 2, "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderData": [ 0, 1 ] },
		 *          { "orderData": [ 1, 0 ] },
		 *          { "orderData": 2 },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"aDataSort": null,
		"iDataSort": -1,
	
	
		/**
		 * You can control the default ordering direction, and even alter the
		 * behaviour of the sort handler (i.e. only allow ascending ordering etc)
		 * using this parameter.
		 *  @type array
		 *  @default [ 'asc', 'desc' ]
		 *
		 *  @name DataTable.defaults.column.orderSequence
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderSequence": [ "asc" ], "targets": [ 1 ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "orderSequence": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "orderSequence": [ "asc" ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ] },
		 *          { "orderSequence": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"asSorting": [ 'asc', 'desc' ],
	
	
		/**
		 * Enable or disable filtering on the data in this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.searchable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSearchable": true,
	
	
		/**
		 * Enable or disable ordering on this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.orderable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSortable": true,
	
	
		/**
		 * Enable or disable the display of this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.visible
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bVisible": true,
	
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} td The TD node that has been created
		 *  @param {*} cellData The Data for the cell
		 *  @param {array|object} rowData The data for the whole row
		 *  @param {int} row The row index for the aoData data store
		 *  @param {int} col The column index for aoColumns
		 *
		 *  @name DataTable.defaults.column.createdCell
		 *  @dtopt Columns
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
		 */
		"fnCreatedCell": null,
	
	
		/**
		 * This parameter has been replaced by `data` in DataTables to ensure naming
		 * consistency. `dataProp` can still be used, as there is backwards
		 * compatibility in DataTables for this option, but it is strongly
		 * recommended that you use `data` in preference to `dataProp`.
		 *  @name DataTable.defaults.column.dataProp
		 */
	
	
		/**
		 * This property can be used to read data from any data source property,
		 * including deeply nested objects / properties. `data` can be given in a
		 * number of different ways which effect its behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object. Note that
		 *      function notation is recommended for use in `render` rather than
		 *      `data` as it is much simpler to use as a renderer.
		 * * `null` - use the original data source for the row rather than plucking
		 *   data directly from it. This action has effects on two other
		 *   initialisation options:
		 *    * `defaultContent` - When null is given as the `data` option and
		 *      `defaultContent` is specified for the column, the value defined by
		 *      `defaultContent` will be used for the cell.
		 *    * `render` - When null is used for the `data` option and the `render`
		 *      option is specified for the column, the whole data source for the
		 *      row is used for the renderer.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * `{array|object}` The data source for the row
		 *      * `{string}` The type call data requested - this will be 'set' when
		 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
		 *        when gathering data. Note that when `undefined` is given for the
		 *        type DataTables expects to get the raw data for the object back<
		 *      * `{*}` Data to set when the second parameter is 'set'.
		 *    * Return:
		 *      * The return value from the function is not required when 'set' is
		 *        the type of call, but otherwise the return is what will be used
		 *        for the data requested.
		 *
		 * Note that `data` is a getter and setter option. If you just require
		 * formatting of data for output, you will likely want to use `render` which
		 * is simply a getter and thus simpler to use.
		 *
		 * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
		 * name change reflects the flexibility of this property and is consistent
		 * with the naming of mRender. If 'mDataProp' is given, then it will still
		 * be used by DataTables, as it automatically maps the old name to the new
		 * if required.
		 *
		 *  @type string|int|function|null
		 *  @default null <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.data
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Read table data from objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Read information from deeply nested objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "details.0" },
		 *          { "data": "details.1" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `data` as a function to provide different information for
		 *    // sorting, filtering and display. In this case, currency (price)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using default content
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using array notation - outputting a list from an array
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 */
		"mData": null,
	
	
		/**
		 * This property is the rendering partner to `data` and it is suggested that
		 * when you want to manipulate data for display (including filtering,
		 * sorting etc) without altering the underlying data for the table, use this
		 * property. `render` can be considered to be the the read only companion to
		 * `data` which is read / write (then as such more complex). Like `data`
		 * this option can be given in a number of different ways to effect its
		 * behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object.
		 * * `object` - use different data for the different data types requested by
		 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
		 *   of the object is the data type the property refers to and the value can
		 *   defined using an integer, string or function using the same rules as
		 *   `render` normally does. Note that an `_` option _must_ be specified.
		 *   This is the default value to use if you haven't specified a value for
		 *   the data type requested by DataTables.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * {array|object} The data source for the row (based on `data`)
		 *      * {string} The type call data requested - this will be 'filter',
		 *        'display', 'type' or 'sort'.
		 *      * {array|object} The full data source for the row (not based on
		 *        `data`)
		 *    * Return:
		 *      * The return value from the function is what will be used for the
		 *        data requested.
		 *
		 *  @type string|int|function|object|null
		 *  @default null Use the data source value.
		 *
		 *  @name DataTable.defaults.column.render
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Create a comma separated list from an array of objects
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Execute a function to obtain data
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // As an object, extracting different data for the different types
		 *    // This would be used with a data source such as:
		 *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
		 *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`
		 *    // (which has both forms) is used for filtering for if a user inputs either format, while
		 *    // the formatted phone number is the one that is shown in the table.
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Use as a function to create a link from the data source
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 */
		"mRender": null,
	
	
		/**
		 * Change the cell type created for the column - either TD cells or TH cells. This
		 * can be useful as TH cells have semantic meaning in the table body, allowing them
		 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
		 *  @type string
		 *  @default td
		 *
		 *  @name DataTable.defaults.column.cellType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Make the first column use TH cells
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
		 */
		"sCellType": "td",
	
	
		/**
		 * Class to give to each cell in this column.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.class
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sClass": "",
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 * Generally you shouldn't need this!
		 *  @type string
		 *  @default <i>Empty string<i>
		 *
		 *  @name DataTable.defaults.column.contentPadding
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sContentPadding": "",
	
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because `data`
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 *
		 *  @name DataTable.defaults.column.defaultContent
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sDefaultContent": null,
	
	
		/**
		 * This parameter is only used in DataTables' server-side processing. It can
		 * be exceptionally useful to know what columns are being displayed on the
		 * client side, and to map these to database fields. When defined, the names
		 * also allow DataTables to reorder information from the server if it comes
		 * back in an unexpected order (i.e. if you switch your columns around on the
		 * client-side, your server-side code does not also need updating).
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.name
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sName": "",
	
	
		/**
		 * Defines a data source type for the ordering which can be used to read
		 * real-time information from the table (updating the internally cached
		 * version) prior to ordering. This allows ordering to occur on user
		 * editable elements such as form inputs.
		 *  @type string
		 *  @default std
		 *
		 *  @name DataTable.defaults.column.orderDataType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "orderDataType": "dom-select", "targets": [ 4 ] },
		 *          { "orderDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "orderDataType": "dom-text" },
		 *          { "orderDataType": "dom-text", "type": "numeric" },
		 *          { "orderDataType": "dom-select" },
		 *          { "orderDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sSortDataType": "std",
	
	
		/**
		 * The title of this column.
		 *  @type string
		 *  @default null <i>Derived from the 'TH' value for this column in the
		 *    original HTML table.</i>
		 *
		 *  @name DataTable.defaults.column.title
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sTitle": null,
	
	
		/**
		 * The type allows you to specify how the data for this column will be
		 * ordered. Four types (string, numeric, date and html (which will strip
		 * HTML tags before ordering)) are currently available. Note that only date
		 * formats understood by Javascript's Date() object will be accepted as type
		 * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
		 * 'numeric', 'date' or 'html' (by default). Further types can be adding
		 * through plug-ins.
		 *  @type string
		 *  @default null <i>Auto-detected from raw data</i>
		 *
		 *  @name DataTable.defaults.column.type
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sType": null,
	
	
		/**
		 * Defining the width of the column, this parameter may take any CSS value
		 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
		 * been given a specific width through this interface ensuring that the table
		 * remains readable.
		 *  @type string
		 *  @default null <i>Automatic</i>
		 *
		 *  @name DataTable.defaults.column.width
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sWidth": null
	};
	
	_fnHungarianMap( DataTable.defaults.column );
	
	
	
	/**
	 * DataTables settings object - this holds all the information needed for a
	 * given table, including configuration, data and current application of the
	 * table options. DataTables does not have a single instance for each DataTable
	 * with the settings attached to that instance, but rather instances of the
	 * DataTable "class" are created on-the-fly as needed (typically by a
	 * $().dataTable() call) and the settings object is then applied to that
	 * instance.
	 *
	 * Note that this object is related to {@link DataTable.defaults} but this
	 * one is the internal data store for DataTables's cache of columns. It should
	 * NOT be manipulated outside of DataTables. Any configuration should be done
	 * through the initialisation options.
	 *  @namespace
	 *  @todo Really should attach the settings object to individual instances so we
	 *    don't need to create new instances on each $().dataTable() call (if the
	 *    table already exists). It would also save passing oSettings around and
	 *    into every single function. However, this is a very significant
	 *    architecture change for DataTables and will almost certainly break
	 *    backwards compatibility with older installations. This is something that
	 *    will be done in 2.0.
	 */
	DataTable.models.oSettings = {
		/**
		 * Primary features of DataTables and their enablement state.
		 *  @namespace
		 */
		"oFeatures": {
	
			/**
			 * Flag to say if DataTables should automatically try to calculate the
			 * optimum table and columns widths (true) or not (false).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoWidth": null,
	
			/**
			 * Delay the creation of TR and TD elements until they are actually
			 * needed by a driven page draw. This can give a significant speed
			 * increase for Ajax source and Javascript source data, but makes no
			 * difference at all fro DOM and server-side processing tables.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bDeferRender": null,
	
			/**
			 * Enable filtering on the table or not. Note that if this is disabled
			 * then there is no filtering at all on the table, including fnFilter.
			 * To just remove the filtering input use sDom and remove the 'f' option.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bFilter": null,
	
			/**
			 * Table information element (the 'Showing x of y records' div) enable
			 * flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfo": null,
	
			/**
			 * Present a user control allowing the end user to change the page size
			 * when pagination is enabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bLengthChange": null,
	
			/**
			 * Pagination enabled or not. Note that if this is disabled then length
			 * changing must also be disabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bPaginate": null,
	
			/**
			 * Processing indicator enable flag whenever DataTables is enacting a
			 * user request - typically an Ajax request for server-side processing.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bProcessing": null,
	
			/**
			 * Server-side processing enabled flag - when enabled DataTables will
			 * get all data from the server for every draw - there is no filtering,
			 * sorting or paging done on the client-side.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bServerSide": null,
	
			/**
			 * Sorting enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSort": null,
	
			/**
			 * Multi-column sorting
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortMulti": null,
	
			/**
			 * Apply a class to the columns which are being sorted to provide a
			 * visual highlight or not. This can slow things down when enabled since
			 * there is a lot of DOM interaction.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortClasses": null,
	
			/**
			 * State saving enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bStateSave": null
		},
	
	
		/**
		 * Scrolling settings for a table.
		 *  @namespace
		 */
		"oScroll": {
			/**
			 * When the table is shorter in height than sScrollY, collapse the
			 * table container down to the height of the table (when true).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bCollapse": null,
	
			/**
			 * Width of the scrollbar for the web-browser's platform. Calculated
			 * during table initialisation.
			 *  @type int
			 *  @default 0
			 */
			"iBarWidth": 0,
	
			/**
			 * Viewport width for horizontal scrolling. Horizontal scrolling is
			 * disabled if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sX": null,
	
			/**
			 * Width to expand the table to when using x-scrolling. Typically you
			 * should not need to use this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 *  @deprecated
			 */
			"sXInner": null,
	
			/**
			 * Viewport height for vertical scrolling. Vertical scrolling is disabled
			 * if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sY": null
		},
	
		/**
		 * Language information for the table.
		 *  @namespace
		 *  @extends DataTable.defaults.oLanguage
		 */
		"oLanguage": {
			/**
			 * Information callback function. See
			 * {@link DataTable.defaults.fnInfoCallback}
			 *  @type function
			 *  @default null
			 */
			"fnInfoCallback": null
		},
	
		/**
		 * Browser support parameters
		 *  @namespace
		 */
		"oBrowser": {
			/**
			 * Indicate if the browser incorrectly calculates width:100% inside a
			 * scrolling element (IE6/7)
			 *  @type boolean
			 *  @default false
			 */
			"bScrollOversize": false,
	
			/**
			 * Determine if the vertical scrollbar is on the right or left of the
			 * scrolling container - needed for rtl language layout, although not
			 * all browsers move the scrollbar (Safari).
			 *  @type boolean
			 *  @default false
			 */
			"bScrollbarLeft": false,
	
			/**
			 * Flag for if `getBoundingClientRect` is fully supported or not
			 *  @type boolean
			 *  @default false
			 */
			"bBounding": false,
	
			/**
			 * Browser scrollbar width
			 *  @type integer
			 *  @default 0
			 */
			"barWidth": 0
		},
	
	
		"ajax": null,
	
	
		/**
		 * Array referencing the nodes which are used for the features. The
		 * parameters of this object match what is allowed by sDom - i.e.
		 *   <ul>
		 *     <li>'l' - Length changing</li>
		 *     <li>'f' - Filtering input</li>
		 *     <li>'t' - The table!</li>
		 *     <li>'i' - Information</li>
		 *     <li>'p' - Pagination</li>
		 *     <li>'r' - pRocessing</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aanFeatures": [],
	
		/**
		 * Store data information - see {@link DataTable.models.oRow} for detailed
		 * information.
		 *  @type array
		 *  @default []
		 */
		"aoData": [],
	
		/**
		 * Array of indexes which are in the current display (after filtering etc)
		 *  @type array
		 *  @default []
		 */
		"aiDisplay": [],
	
		/**
		 * Array of indexes for display - no filtering
		 *  @type array
		 *  @default []
		 */
		"aiDisplayMaster": [],
	
		/**
		 * Map of row ids to data indexes
		 *  @type object
		 *  @default {}
		 */
		"aIds": {},
	
		/**
		 * Store information about each column that is in use
		 *  @type array
		 *  @default []
		 */
		"aoColumns": [],
	
		/**
		 * Store information about the table's header
		 *  @type array
		 *  @default []
		 */
		"aoHeader": [],
	
		/**
		 * Store information about the table's footer
		 *  @type array
		 *  @default []
		 */
		"aoFooter": [],
	
		/**
		 * Store the applied global search information in case we want to force a
		 * research or compare the old search to a new one.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 */
		"oPreviousSearch": {},
	
		/**
		 * Store the applied search for each column - see
		 * {@link DataTable.models.oSearch} for the format that is used for the
		 * filtering information for each column.
		 *  @type array
		 *  @default []
		 */
		"aoPreSearchCols": [],
	
		/**
		 * Sorting that is applied to the table. Note that the inner arrays are
		 * used in the following manner:
		 * <ul>
		 *   <li>Index 0 - column number</li>
		 *   <li>Index 1 - current sorting direction</li>
		 * </ul>
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @todo These inner arrays should really be objects
		 */
		"aaSorting": null,
	
		/**
		 * Sorting that is always applied to the table (i.e. prefixed in front of
		 * aaSorting).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aaSortingFixed": [],
	
		/**
		 * Classes to use for the striping of a table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"asStripeClasses": null,
	
		/**
		 * If restoring a table - we should restore its striping classes as well
		 *  @type array
		 *  @default []
		 */
		"asDestroyStripes": [],
	
		/**
		 * If restoring a table - we should restore its width
		 *  @type int
		 *  @default 0
		 */
		"sDestroyWidth": 0,
	
		/**
		 * Callback functions array for every time a row is inserted (i.e. on a draw).
		 *  @type array
		 *  @default []
		 */
		"aoRowCallback": [],
	
		/**
		 * Callback functions for the header on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoHeaderCallback": [],
	
		/**
		 * Callback function for the footer on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoFooterCallback": [],
	
		/**
		 * Array of callback functions for draw callback functions
		 *  @type array
		 *  @default []
		 */
		"aoDrawCallback": [],
	
		/**
		 * Array of callback functions for row created function
		 *  @type array
		 *  @default []
		 */
		"aoRowCreatedCallback": [],
	
		/**
		 * Callback functions for just before the table is redrawn. A return of
		 * false will be used to cancel the draw.
		 *  @type array
		 *  @default []
		 */
		"aoPreDrawCallback": [],
	
		/**
		 * Callback functions for when the table has been initialised.
		 *  @type array
		 *  @default []
		 */
		"aoInitComplete": [],
	
	
		/**
		 * Callbacks for modifying the settings to be stored for state saving, prior to
		 * saving state.
		 *  @type array
		 *  @default []
		 */
		"aoStateSaveParams": [],
	
		/**
		 * Callbacks for modifying the settings that have been stored for state saving
		 * prior to using the stored values to restore the state.
		 *  @type array
		 *  @default []
		 */
		"aoStateLoadParams": [],
	
		/**
		 * Callbacks for operating on the settings object once the saved state has been
		 * loaded
		 *  @type array
		 *  @default []
		 */
		"aoStateLoaded": [],
	
		/**
		 * Cache the table ID for quick access
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sTableId": "",
	
		/**
		 * The TABLE node for the main table
		 *  @type node
		 *  @default null
		 */
		"nTable": null,
	
		/**
		 * Permanent ref to the thead element
		 *  @type node
		 *  @default null
		 */
		"nTHead": null,
	
		/**
		 * Permanent ref to the tfoot element - if it exists
		 *  @type node
		 *  @default null
		 */
		"nTFoot": null,
	
		/**
		 * Permanent ref to the tbody element
		 *  @type node
		 *  @default null
		 */
		"nTBody": null,
	
		/**
		 * Cache the wrapper node (contains all DataTables controlled elements)
		 *  @type node
		 *  @default null
		 */
		"nTableWrapper": null,
	
		/**
		 * Indicate if when using server-side processing the loading of data
		 * should be deferred until the second draw.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 *  @default false
		 */
		"bDeferLoading": false,
	
		/**
		 * Indicate if all required information has been read in
		 *  @type boolean
		 *  @default false
		 */
		"bInitialised": false,
	
		/**
		 * Information about open rows. Each object in the array has the parameters
		 * 'nTr' and 'nParent'
		 *  @type array
		 *  @default []
		 */
		"aoOpenRows": [],
	
		/**
		 * Dictate the positioning of DataTables' control elements - see
		 * {@link DataTable.model.oInit.sDom}.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sDom": null,
	
		/**
		 * Search delay (in mS)
		 *  @type integer
		 *  @default null
		 */
		"searchDelay": null,
	
		/**
		 * Which type of pagination should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default two_button
		 */
		"sPaginationType": "two_button",
	
		/**
		 * The state duration (for `stateSave`) in seconds.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type int
		 *  @default 0
		 */
		"iStateDuration": 0,
	
		/**
		 * Array of callback functions for state saving. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the JSON string to save that has been thus far created. Returns
		 *       a JSON string to be inserted into a json object
		 *       (i.e. '"param": [ 0, 1, 2]')</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateSave": [],
	
		/**
		 * Array of callback functions for state loading. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the object stored. May return false to cancel state loading</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateLoad": [],
	
		/**
		 * State that was saved. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oSavedState": null,
	
		/**
		 * State that was loaded. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oLoadedState": null,
	
		/**
		 * Source url for AJAX data for the table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sAjaxSource": null,
	
		/**
		 * Property from a given object from which to read the table data from. This
		 * can be an empty string (when not server-side processing), in which case
		 * it is  assumed an an array is given directly.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sAjaxDataProp": null,
	
		/**
		 * Note if draw should be blocked while getting data
		 *  @type boolean
		 *  @default true
		 */
		"bAjaxDataGet": true,
	
		/**
		 * The last jQuery XHR object that was used for server-side data gathering.
		 * This can be used for working with the XHR information in one of the
		 * callbacks
		 *  @type object
		 *  @default null
		 */
		"jqXHR": null,
	
		/**
		 * JSON returned from the server in the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"json": undefined,
	
		/**
		 * Data submitted as part of the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"oAjaxData": undefined,
	
		/**
		 * Function to get the server-side data.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnServerData": null,
	
		/**
		 * Functions which are called prior to sending an Ajax request so extra
		 * parameters can easily be sent to the server
		 *  @type array
		 *  @default []
		 */
		"aoServerParams": [],
	
		/**
		 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
		 * required).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sServerMethod": null,
	
		/**
		 * Format numbers for display.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnFormatNumber": null,
	
		/**
		 * List of options that can be used for the user selectable length menu.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aLengthMenu": null,
	
		/**
		 * Counter for the draws that the table does. Also used as a tracker for
		 * server-side processing
		 *  @type int
		 *  @default 0
		 */
		"iDraw": 0,
	
		/**
		 * Indicate if a redraw is being done - useful for Ajax
		 *  @type boolean
		 *  @default false
		 */
		"bDrawing": false,
	
		/**
		 * Draw index (iDraw) of the last error when parsing the returned data
		 *  @type int
		 *  @default -1
		 */
		"iDrawError": -1,
	
		/**
		 * Paging display length
		 *  @type int
		 *  @default 10
		 */
		"_iDisplayLength": 10,
	
		/**
		 * Paging start point - aiDisplay index
		 *  @type int
		 *  @default 0
		 */
		"_iDisplayStart": 0,
	
		/**
		 * Server-side processing - number of records in the result set
		 * (i.e. before filtering), Use fnRecordsTotal rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type int
		 *  @default 0
		 *  @private
		 */
		"_iRecordsTotal": 0,
	
		/**
		 * Server-side processing - number of records in the current display set
		 * (i.e. after filtering). Use fnRecordsDisplay rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type boolean
		 *  @default 0
		 *  @private
		 */
		"_iRecordsDisplay": 0,
	
		/**
		 * The classes to use for the table
		 *  @type object
		 *  @default {}
		 */
		"oClasses": {},
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if filtering has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bFiltered": false,
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if sorting has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bSorted": false,
	
		/**
		 * Indicate that if multiple rows are in the header and there is more than
		 * one unique cell per column, if the top one (true) or bottom one (false)
		 * should be used for sorting / title by DataTables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bSortCellsTop": null,
	
		/**
		 * Initialisation object that is used for the table
		 *  @type object
		 *  @default null
		 */
		"oInit": null,
	
		/**
		 * Destroy callback functions - for plug-ins to attach themselves to the
		 * destroy so they can clean up markup and events.
		 *  @type array
		 *  @default []
		 */
		"aoDestroyCallback": [],
	
	
		/**
		 * Get the number of records in the current record set, before filtering
		 *  @type function
		 */
		"fnRecordsTotal": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsTotal * 1 :
				this.aiDisplayMaster.length;
		},
	
		/**
		 * Get the number of records in the current record set, after filtering
		 *  @type function
		 */
		"fnRecordsDisplay": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsDisplay * 1 :
				this.aiDisplay.length;
		},
	
		/**
		 * Get the display end point - aiDisplay index
		 *  @type function
		 */
		"fnDisplayEnd": function ()
		{
			var
				len      = this._iDisplayLength,
				start    = this._iDisplayStart,
				calc     = start + len,
				records  = this.aiDisplay.length,
				features = this.oFeatures,
				paginate = features.bPaginate;
	
			if ( features.bServerSide ) {
				return paginate === false || len === -1 ?
					start + records :
					Math.min( start+len, this._iRecordsDisplay );
			}
			else {
				return ! paginate || calc>records || len===-1 ?
					records :
					calc;
			}
		},
	
		/**
		 * The DataTables object for this table
		 *  @type object
		 *  @default null
		 */
		"oInstance": null,
	
		/**
		 * Unique identifier for each instance of the DataTables object. If there
		 * is an ID on the table node, then it takes that value, otherwise an
		 * incrementing internal counter is used.
		 *  @type string
		 *  @default null
		 */
		"sInstance": null,
	
		/**
		 * tabindex attribute value that is added to DataTables control elements, allowing
		 * keyboard navigation of the table and its controls.
		 */
		"iTabIndex": 0,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollHead": null,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollFoot": null,
	
		/**
		 * Last applied sort
		 *  @type array
		 *  @default []
		 */
		"aLastSort": [],
	
		/**
		 * Stored plug-in instances
		 *  @type object
		 *  @default {}
		 */
		"oPlugins": {},
	
		/**
		 * Function used to get a row's id from the row's data
		 *  @type function
		 *  @default null
		 */
		"rowIdFn": null,
	
		/**
		 * Data location where to store a row's id
		 *  @type string
		 *  @default null
		 */
		"rowId": null
	};

	/**
	 * Extension object for DataTables that is used to provide all extension
	 * options.
	 *
	 * Note that the `DataTable.ext` object is available through
	 * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
	 * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
	 *  @namespace
	 *  @extends DataTable.models.ext
	 */
	
	
	/**
	 * DataTables extensions
	 * 
	 * This namespace acts as a collection area for plug-ins that can be used to
	 * extend DataTables capabilities. Indeed many of the build in methods
	 * use this method to provide their own capabilities (sorting methods for
	 * example).
	 *
	 * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy
	 * reasons
	 *
	 *  @namespace
	 */
	DataTable.ext = _ext = {
		/**
		 * Buttons. For use with the Buttons extension for DataTables. This is
		 * defined here so other extensions can define buttons regardless of load
		 * order. It is _not_ used by DataTables core.
		 *
		 *  @type object
		 *  @default {}
		 */
		buttons: {},
	
	
		/**
		 * Element class names
		 *
		 *  @type object
		 *  @default {}
		 */
		classes: {},
	
	
		/**
		 * DataTables build type (expanded by the download builder)
		 *
		 *  @type string
		 */
		builder: "-source-",
	
	
		/**
		 * Error reporting.
		 * 
		 * How should DataTables report an error. Can take the value 'alert',
		 * 'throw', 'none' or a function.
		 *
		 *  @type string|function
		 *  @default alert
		 */
		errMode: "alert",
	
	
		/**
		 * Feature plug-ins.
		 * 
		 * This is an array of objects which describe the feature plug-ins that are
		 * available to DataTables. These feature plug-ins are then available for
		 * use through the `dom` initialisation option.
		 * 
		 * Each feature plug-in is described by an object which must have the
		 * following properties:
		 * 
		 * * `fnInit` - function that is used to initialise the plug-in,
		 * * `cFeature` - a character so the feature can be enabled by the `dom`
		 *   instillation option. This is case sensitive.
		 *
		 * The `fnInit` function has the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 *
		 * And the following return is expected:
		 * 
		 * * {node|null} The element which contains your feature. Note that the
		 *   return may also be void if your plug-in does not require to inject any
		 *   DOM elements into DataTables control (`dom`) - for example this might
		 *   be useful when developing a plug-in which allows table control via
		 *   keyboard entry
		 *
		 *  @type array
		 *
		 *  @example
		 *    $.fn.dataTable.ext.features.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T"
		 *    } );
		 */
		feature: [],
	
	
		/**
		 * Row searching.
		 * 
		 * This method of searching is complimentary to the default type based
		 * searching, and a lot more comprehensive as it allows you complete control
		 * over the searching logic. Each element in this array is a function
		 * (parameters described below) that is called for every row in the table,
		 * and your logic decides if it should be included in the searching data set
		 * or not.
		 *
		 * Searching functions have the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{array|object}` Data for the row to be processed (same as the
		 *    original format that was passed in as the data source, or an array
		 *    from a DOM data source
		 * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
		 *    can be useful to retrieve the `TR` element if you need DOM interaction.
		 *
		 * And the following return is expected:
		 *
		 * * {boolean} Include the row in the searched result set (true) or not
		 *   (false)
		 *
		 * Note that as with the main search ability in DataTables, technically this
		 * is "filtering", since it is subtractive. However, for consistency in
		 * naming we call it searching here.
		 *
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // The following example shows custom search being applied to the
		 *    // fourth column (i.e. the data[3] index) based on two input values
		 *    // from the end-user, matching the data in a certain range.
		 *    $.fn.dataTable.ext.search.push(
		 *      function( settings, data, dataIndex ) {
		 *        var min = document.getElementById('min').value * 1;
		 *        var max = document.getElementById('max').value * 1;
		 *        var version = data[3] == "-" ? 0 : data[3]*1;
		 *
		 *        if ( min == "" && max == "" ) {
		 *          return true;
		 *        }
		 *        else if ( min == "" && version < max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && "" == max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && version < max ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
		 *    );
		 */
		search: [],
	
	
		/**
		 * Selector extensions
		 *
		 * The `selector` option can be used to extend the options available for the
		 * selector modifier options (`selector-modifier` object data type) that
		 * each of the three built in selector types offer (row, column and cell +
		 * their plural counterparts). For example the Select extension uses this
		 * mechanism to provide an option to select only rows, columns and cells
		 * that have been marked as selected by the end user (`{selected: true}`),
		 * which can be used in conjunction with the existing built in selector
		 * options.
		 *
		 * Each property is an array to which functions can be pushed. The functions
		 * take three attributes:
		 *
		 * * Settings object for the host table
		 * * Options object (`selector-modifier` object type)
		 * * Array of selected item indexes
		 *
		 * The return is an array of the resulting item indexes after the custom
		 * selector has been applied.
		 *
		 *  @type object
		 */
		selector: {
			cell: [],
			column: [],
			row: []
		},
	
	
		/**
		 * Internal functions, exposed for used in plug-ins.
		 * 
		 * Please note that you should not need to use the internal methods for
		 * anything other than a plug-in (and even then, try to avoid if possible).
		 * The internal function may change between releases.
		 *
		 *  @type object
		 *  @default {}
		 */
		internal: {},
	
	
		/**
		 * Legacy configuration options. Enable and disable legacy options that
		 * are available in DataTables.
		 *
		 *  @type object
		 */
		legacy: {
			/**
			 * Enable / disable DataTables 1.9 compatible server-side processing
			 * requests
			 *
			 *  @type boolean
			 *  @default null
			 */
			ajax: null
		},
	
	
		/**
		 * Pagination plug-in methods.
		 * 
		 * Each entry in this object is a function and defines which buttons should
		 * be shown by the pagination rendering method that is used for the table:
		 * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
		 * buttons are displayed in the document, while the functions here tell it
		 * what buttons to display. This is done by returning an array of button
		 * descriptions (what each button will do).
		 *
		 * Pagination types (the four built in options and any additional plug-in
		 * options defined here) can be used through the `paginationType`
		 * initialisation parameter.
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{int} page` The current page index
		 * 2. `{int} pages` The number of pages in the table
		 *
		 * Each function is expected to return an array where each element of the
		 * array can be one of:
		 *
		 * * `first` - Jump to first page when activated
		 * * `last` - Jump to last page when activated
		 * * `previous` - Show previous page when activated
		 * * `next` - Show next page when activated
		 * * `{int}` - Show page of the index given
		 * * `{array}` - A nested array containing the above elements to add a
		 *   containing 'DIV' element (might be useful for styling).
		 *
		 * Note that DataTables v1.9- used this object slightly differently whereby
		 * an object with two functions would be defined for each plug-in. That
		 * ability is still supported by DataTables 1.10+ to provide backwards
		 * compatibility, but this option of use is now decremented and no longer
		 * documented in DataTables 1.10+.
		 *
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Show previous, next and current page buttons only
		 *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
		 *      return [ 'previous', page, 'next' ];
		 *    };
		 */
		pager: {},
	
	
		renderer: {
			pageButton: {},
			header: {}
		},
	
	
		/**
		 * Ordering plug-ins - custom data source
		 * 
		 * The extension options for ordering of data available here is complimentary
		 * to the default type based ordering that DataTables typically uses. It
		 * allows much greater control over the the data that is being used to
		 * order a column, but is necessarily therefore more complex.
		 * 
		 * This type of ordering is useful if you want to do ordering based on data
		 * live from the DOM (for example the contents of an 'input' element) rather
		 * than just the static string that DataTables knows of.
		 * 
		 * The way these plug-ins work is that you create an array of the values you
		 * wish to be ordering for the column in question and then return that
		 * array. The data in the array much be in the index order of the rows in
		 * the table (not the currently ordering order!). Which order data gathering
		 * function is run here depends on the `dt-init columns.orderDataType`
		 * parameter that is used for the column (if any).
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{int}` Target column index
		 *
		 * Each function is expected to return an array:
		 *
		 * * `{array}` Data for the column to be ordering upon
		 *
		 *  @type array
		 *
		 *  @example
		 *    // Ordering using `input` node values
		 *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
		 *    {
		 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
		 *        return $('input', td).val();
		 *      } );
		 *    }
		 */
		order: {},
	
	
		/**
		 * Type based plug-ins.
		 *
		 * Each column in DataTables has a type assigned to it, either by automatic
		 * detection or by direct assignment using the `type` option for the column.
		 * The type of a column will effect how it is ordering and search (plug-ins
		 * can also make use of the column type if required).
		 *
		 * @namespace
		 */
		type: {
			/**
			 * Type detection functions.
			 *
			 * The functions defined in this object are used to automatically detect
			 * a column's type, making initialisation of DataTables super easy, even
			 * when complex data is in the table.
			 *
			 * The functions defined take two parameters:
			 *
		     *  1. `{*}` Data from the column cell to be analysed
		     *  2. `{settings}` DataTables settings object. This can be used to
		     *     perform context specific type detection - for example detection
		     *     based on language settings such as using a comma for a decimal
		     *     place. Generally speaking the options from the settings will not
		     *     be required
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Data type detected, or null if unknown (and thus
			 *   pass it on to the other type detection functions.
			 *
			 *  @type array
			 *
			 *  @example
			 *    // Currency type detection plug-in:
			 *    $.fn.dataTable.ext.type.detect.push(
			 *      function ( data, settings ) {
			 *        // Check the numeric part
			 *        if ( ! data.substring(1).match(/[0-9]/) ) {
			 *          return null;
			 *        }
			 *
			 *        // Check prefixed by currency
			 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
			 *          return 'currency';
			 *        }
			 *        return null;
			 *      }
			 *    );
			 */
			detect: [],
	
	
			/**
			 * Type based search formatting.
			 *
			 * The type based searching functions can be used to pre-format the
			 * data to be search on. For example, it can be used to strip HTML
			 * tags or to de-format telephone numbers for numeric only searching.
			 *
			 * Note that is a search is not defined for a column of a given type,
			 * no search formatting will be performed.
			 * 
			 * Pre-processing of searching data plug-ins - When you assign the sType
			 * for a column (or have it automatically detected for you by DataTables
			 * or a type detection plug-in), you will typically be using this for
			 * custom sorting, but it can also be used to provide custom searching
			 * by allowing you to pre-processing the data and returning the data in
			 * the format that should be searched upon. This is done by adding
			 * functions this object with a parameter name which matches the sType
			 * for that target column. This is the corollary of <i>afnSortData</i>
			 * for searching data.
			 *
			 * The functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for searching
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Formatted string that will be used for the searching.
			 *
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
			 *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
			 *    }
			 */
			search: {},
	
	
			/**
			 * Type based ordering.
			 *
			 * The column type tells DataTables what ordering to apply to the table
			 * when a column is sorted upon. The order for each type that is defined,
			 * is defined by the functions available in this object.
			 *
			 * Each ordering option can be described by three properties added to
			 * this object:
			 *
			 * * `{type}-pre` - Pre-formatting function
			 * * `{type}-asc` - Ascending order function
			 * * `{type}-desc` - Descending order function
			 *
			 * All three can be used together, only `{type}-pre` or only
			 * `{type}-asc` and `{type}-desc` together. It is generally recommended
			 * that only `{type}-pre` is used, as this provides the optimal
			 * implementation in terms of speed, although the others are provided
			 * for compatibility with existing Javascript sort functions.
			 *
			 * `{type}-pre`: Functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for ordering
			 *
			 * And return:
			 *
			 * * `{*}` Data to be sorted upon
			 *
			 * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
			 * functions, taking two parameters:
			 *
		     *  1. `{*}` Data to compare to the second parameter
		     *  2. `{*}` Data to compare to the first parameter
			 *
			 * And returning:
			 *
			 * * `{*}` Ordering match: <0 if first parameter should be sorted lower
			 *   than the second parameter, ===0 if the two parameters are equal and
			 *   >0 if the first parameter should be sorted height than the second
			 *   parameter.
			 * 
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    // Numeric ordering of formatted numbers with a pre-formatter
			 *    $.extend( $.fn.dataTable.ext.type.order, {
			 *      "string-pre": function(x) {
			 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
			 *        return parseFloat( a );
			 *      }
			 *    } );
			 *
			 *  @example
			 *    // Case-sensitive string ordering, with no pre-formatting method
			 *    $.extend( $.fn.dataTable.ext.order, {
			 *      "string-case-asc": function(x,y) {
			 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			 *      },
			 *      "string-case-desc": function(x,y) {
			 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
			 *      }
			 *    } );
			 */
			order: {}
		},
	
		/**
		 * Unique DataTables instance counter
		 *
		 * @type int
		 * @private
		 */
		_unique: 0,
	
	
		//
		// Depreciated
		// The following properties are retained for backwards compatiblity only.
		// The should not be used in new projects and will be removed in a future
		// version
		//
	
		/**
		 * Version check function.
		 *  @type function
		 *  @depreciated Since 1.10
		 */
		fnVersionCheck: DataTable.fnVersionCheck,
	
	
		/**
		 * Index for what 'this' index API functions should use
		 *  @type int
		 *  @deprecated Since v1.10
		 */
		iApiIndex: 0,
	
	
		/**
		 * jQuery UI class container
		 *  @type object
		 *  @deprecated Since v1.10
		 */
		oJUIClasses: {},
	
	
		/**
		 * Software version
		 *  @type string
		 *  @deprecated Since v1.10
		 */
		sVersion: DataTable.version
	};
	
	
	//
	// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
	//
	$.extend( _ext, {
		afnFiltering: _ext.search,
		aTypes:       _ext.type.detect,
		ofnSearch:    _ext.type.search,
		oSort:        _ext.type.order,
		afnSortData:  _ext.order,
		aoFeatures:   _ext.feature,
		oApi:         _ext.internal,
		oStdClasses:  _ext.classes,
		oPagination:  _ext.pager
	} );
	
	
	$.extend( DataTable.ext.classes, {
		"sTable": "dataTable",
		"sNoFooter": "no-footer",
	
		/* Paging buttons */
		"sPageButton": "paginate_button",
		"sPageButtonActive": "current",
		"sPageButtonDisabled": "disabled",
	
		/* Striping classes */
		"sStripeOdd": "odd",
		"sStripeEven": "even",
	
		/* Empty row */
		"sRowEmpty": "dataTables_empty",
	
		/* Features */
		"sWrapper": "dataTables_wrapper",
		"sFilter": "dataTables_filter",
		"sInfo": "dataTables_info",
		"sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
		"sLength": "dataTables_length",
		"sProcessing": "dataTables_processing",
	
		/* Sorting */
		"sSortAsc": "sorting_asc",
		"sSortDesc": "sorting_desc",
		"sSortable": "sorting", /* Sortable in both directions */
		"sSortableAsc": "sorting_asc_disabled",
		"sSortableDesc": "sorting_desc_disabled",
		"sSortableNone": "sorting_disabled",
		"sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
	
		/* Filtering */
		"sFilterInput": "",
	
		/* Page length */
		"sLengthSelect": "",
	
		/* Scrolling */
		"sScrollWrapper": "dataTables_scroll",
		"sScrollHead": "dataTables_scrollHead",
		"sScrollHeadInner": "dataTables_scrollHeadInner",
		"sScrollBody": "dataTables_scrollBody",
		"sScrollFoot": "dataTables_scrollFoot",
		"sScrollFootInner": "dataTables_scrollFootInner",
	
		/* Misc */
		"sHeaderTH": "",
		"sFooterTH": "",
	
		// Deprecated
		"sSortJUIAsc": "",
		"sSortJUIDesc": "",
		"sSortJUI": "",
		"sSortJUIAscAllowed": "",
		"sSortJUIDescAllowed": "",
		"sSortJUIWrapper": "",
		"sSortIcon": "",
		"sJUIHeader": "",
		"sJUIFooter": ""
	} );
	
	
	var extPagination = DataTable.ext.pager;
	
	function _numbers ( page, pages ) {
		var
			numbers = [],
			buttons = extPagination.numbers_length,
			half = Math.floor( buttons / 2 ),
			i = 1;
	
		if ( pages <= buttons ) {
			numbers = _range( 0, pages );
		}
		else if ( page <= half ) {
			numbers = _range( 0, buttons-2 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
		}
		else if ( page >= pages - 1 - half ) {
			numbers = _range( pages-(buttons-2), pages );
			numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6
			numbers.splice( 0, 0, 0 );
		}
		else {
			numbers = _range( page-half+2, page+half-1 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
			numbers.splice( 0, 0, 'ellipsis' );
			numbers.splice( 0, 0, 0 );
		}
	
		numbers.DT_el = 'span';
		return numbers;
	}
	
	
	$.extend( extPagination, {
		simple: function ( page, pages ) {
			return [ 'previous', 'next' ];
		},
	
		full: function ( page, pages ) {
			return [  'first', 'previous', 'next', 'last' ];
		},
	
		numbers: function ( page, pages ) {
			return [ _numbers(page, pages) ];
		},
	
		simple_numbers: function ( page, pages ) {
			return [ 'previous', _numbers(page, pages), 'next' ];
		},
	
		full_numbers: function ( page, pages ) {
			return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];
		},
		
		first_last_numbers: function (page, pages) {
	 		return ['first', _numbers(page, pages), 'last'];
	 	},
	
		// For testing and plug-ins to use
		_numbers: _numbers,
	
		// Number of number buttons (including ellipsis) to show. _Must be odd!_
		numbers_length: 7
	} );
	
	
	$.extend( true, DataTable.ext.renderer, {
		pageButton: {
			_: function ( settings, host, idx, buttons, page, pages ) {
				var classes = settings.oClasses;
				var lang = settings.oLanguage.oPaginate;
				var aria = settings.oLanguage.oAria.paginate || {};
				var btnDisplay, btnClass, counter=0;
	
				var attach = function( container, buttons ) {
					var i, ien, node, button, tabIndex;
					var disabledClass = classes.sPageButtonDisabled;
					var clickHandler = function ( e ) {
						_fnPageChange( settings, e.data.action, true );
					};
	
					for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
						button = buttons[i];
	
						if ( $.isArray( button ) ) {
							var inner = $( '<'+(button.DT_el || 'div')+'/>' )
								.appendTo( container );
							attach( inner, button );
						}
						else {
							btnDisplay = null;
							btnClass = button;
							tabIndex = settings.iTabIndex;
	
							switch ( button ) {
								case 'ellipsis':
									container.append('<span class="ellipsis">&#x2026;</span>');
									break;
	
								case 'first':
									btnDisplay = lang.sFirst;
	
									if ( page === 0 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								case 'previous':
									btnDisplay = lang.sPrevious;
	
									if ( page === 0 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								case 'next':
									btnDisplay = lang.sNext;
	
									if ( pages === 0 || page === pages-1 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								case 'last':
									btnDisplay = lang.sLast;
	
									if ( page === pages-1 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								default:
									btnDisplay = button + 1;
									btnClass = page === button ?
										classes.sPageButtonActive : '';
									break;
							}
	
							if ( btnDisplay !== null ) {
								node = $('<a>', {
										'class': classes.sPageButton+' '+btnClass,
										'aria-controls': settings.sTableId,
										'aria-label': aria[ button ],
										'data-dt-idx': counter,
										'tabindex': tabIndex,
										'id': idx === 0 && typeof button === 'string' ?
											settings.sTableId +'_'+ button :
											null
									} )
									.html( btnDisplay )
									.appendTo( container );
	
								_fnBindAction(
									node, {action: button}, clickHandler
								);
	
								counter++;
							}
						}
					}
				};
	
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame. Try / catch the error. Not good for
				// accessibility, but neither are frames.
				var activeEl;
	
				try {
					// Because this approach is destroying and recreating the paging
					// elements, focus is lost on the select button which is bad for
					// accessibility. So we want to restore focus once the draw has
					// completed
					activeEl = $(host).find(document.activeElement).data('dt-idx');
				}
				catch (e) {}
	
				attach( $(host).empty(), buttons );
	
				if ( activeEl !== undefined ) {
					$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');
				}
			}
		}
	} );
	
	
	
	// Built in type detection. See model.ext.aTypes for information about
	// what is required from this methods.
	$.extend( DataTable.ext.type.detect, [
		// Plain numbers - first since V8 detects some plain numbers as dates
		// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal ) ? 'num'+decimal : null;
		},
	
		// Dates (only those recognised by the browser's Date.parse)
		function ( d, settings )
		{
			// V8 tries _very_ hard to make a string passed into `Date.parse()`
			// valid, so we need to use a regex to restrict date formats. Use a
			// plug-in for anything other than ISO8601 style strings
			if ( d && !(d instanceof Date) && ! _re_date.test(d) ) {
				return null;
			}
			var parsed = Date.parse(d);
			return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
		},
	
		// Formatted numbers
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;
		},
	
		// HTML numeric
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;
		},
	
		// HTML numeric, formatted
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;
		},
	
		// HTML (this is strict checking - there must be html)
		function ( d, settings )
		{
			return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
				'html' : null;
		}
	] );
	
	
	
	// Filter formatting functions. See model.ext.ofnSearch for information about
	// what is required from these methods.
	// 
	// Note that additional search methods are added for the html numbers and
	// html formatted numbers by `_addNumericSort()` when we know what the decimal
	// place is
	
	
	$.extend( DataTable.ext.type.search, {
		html: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data
						.replace( _re_new_lines, " " )
						.replace( _re_html, "" ) :
					'';
		},
	
		string: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data.replace( _re_new_lines, " " ) :
					data;
		}
	} );
	
	
	
	var __numericReplace = function ( d, decimalPlace, re1, re2 ) {
		if ( d !== 0 && (!d || d === '-') ) {
			return -Infinity;
		}
	
		// If a decimal place other than `.` is used, it needs to be given to the
		// function so we can detect it and replace with a `.` which is the only
		// decimal place Javascript recognises - it is not locale aware.
		if ( decimalPlace ) {
			d = _numToDecimal( d, decimalPlace );
		}
	
		if ( d.replace ) {
			if ( re1 ) {
				d = d.replace( re1, '' );
			}
	
			if ( re2 ) {
				d = d.replace( re2, '' );
			}
		}
	
		return d * 1;
	};
	
	
	// Add the numeric 'deformatting' functions for sorting and search. This is done
	// in a function to provide an easy ability for the language options to add
	// additional methods if a non-period decimal place is used.
	function _addNumericSort ( decimalPlace ) {
		$.each(
			{
				// Plain numbers
				"num": function ( d ) {
					return __numericReplace( d, decimalPlace );
				},
	
				// Formatted numbers
				"num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_formatted_numeric );
				},
	
				// HTML numeric
				"html-num": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html );
				},
	
				// HTML numeric, formatted
				"html-num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );
				}
			},
			function ( key, fn ) {
				// Add the ordering method
				_ext.type.order[ key+decimalPlace+'-pre' ] = fn;
	
				// For HTML types add a search formatter that will strip the HTML
				if ( key.match(/^html\-/) ) {
					_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;
				}
			}
		);
	}
	
	
	// Default sort methods
	$.extend( _ext.type.order, {
		// Dates
		"date-pre": function ( d ) {
			var ts = Date.parse( d );
			return isNaN(ts) ? -Infinity : ts;
		},
	
		// html
		"html-pre": function ( a ) {
			return _empty(a) ?
				'' :
				a.replace ?
					a.replace( /<.*?>/g, "" ).toLowerCase() :
					a+'';
		},
	
		// string
		"string-pre": function ( a ) {
			// This is a little complex, but faster than always calling toString,
			// http://jsperf.com/tostring-v-check
			return _empty(a) ?
				'' :
				typeof a === 'string' ?
					a.toLowerCase() :
					! a.toString ?
						'' :
						a.toString();
		},
	
		// string-asc and -desc are retained only for compatibility with the old
		// sort methods
		"string-asc": function ( x, y ) {
			return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		},
	
		"string-desc": function ( x, y ) {
			return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		}
	} );
	
	
	// Numeric sorting types - order doesn't matter here
	_addNumericSort( '' );
	
	
	$.extend( true, DataTable.ext.renderer, {
		header: {
			_: function ( settings, cell, column, classes ) {
				// No additional mark-up required
				// Attach a sort listener to update on sort - note that using the
				// `DT` namespace will allow the event to be removed automatically
				// on destroy, while the `dt` namespaced event is the one we are
				// listening for
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) { // need to check this this is the host
						return;               // table, not a nested one
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass(
							column.sSortingClass +' '+
							classes.sSortAsc +' '+
							classes.sSortDesc
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
				} );
			},
	
			jqueryui: function ( settings, cell, column, classes ) {
				$('<div/>')
					.addClass( classes.sSortJUIWrapper )
					.append( cell.contents() )
					.append( $('<span/>')
						.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )
					)
					.appendTo( cell );
	
				// Attach a sort listener to update on sort
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) {
						return;
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass( classes.sSortAsc +" "+classes.sSortDesc )
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
	
					cell
						.find( 'span.'+classes.sSortIcon )
						.removeClass(
							classes.sSortJUIAsc +" "+
							classes.sSortJUIDesc +" "+
							classes.sSortJUI +" "+
							classes.sSortJUIAscAllowed +" "+
							classes.sSortJUIDescAllowed
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortJUIDesc :
								column.sSortingClassJUI
						);
				} );
			}
		}
	} );
	
	/*
	 * Public helper functions. These aren't used internally by DataTables, or
	 * called by any of the options passed into DataTables, but they can be used
	 * externally by developers working with DataTables. They are helper functions
	 * to make working with DataTables a little bit easier.
	 */
	
	var __htmlEscapeEntities = function ( d ) {
		return typeof d === 'string' ?
			d
				.replace(/&/g, '&amp;')
				.replace(/</g, '&lt;')
				.replace(/>/g, '&gt;')
				.replace(/"/g, '&quot;') :
			d;
	};
	
	/**
	 * Helpers for `columns.render`.
	 *
	 * The options defined here can be used with the `columns.render` initialisation
	 * option to provide a display renderer. The following functions are defined:
	 *
	 * * `number` - Will format numeric data (defined by `columns.data`) for
	 *   display, retaining the original unformatted data for sorting and filtering.
	 *   It takes 5 parameters:
	 *   * `string` - Thousands grouping separator
	 *   * `string` - Decimal point indicator
	 *   * `integer` - Number of decimal points to show
	 *   * `string` (optional) - Prefix.
	 *   * `string` (optional) - Postfix (/suffix).
	 * * `text` - Escape HTML to help prevent XSS attacks. It has no optional
	 *   parameters.
	 *
	 * @example
	 *   // Column definition using the number renderer
	 *   {
	 *     data: "salary",
	 *     render: $.fn.dataTable.render.number( '\'', '.', 0, '$' )
	 *   }
	 *
	 * @namespace
	 */
	DataTable.render = {
		number: function ( thousands, decimal, precision, prefix, postfix ) {
			return {
				display: function ( d ) {
					if ( typeof d !== 'number' && typeof d !== 'string' ) {
						return d;
					}
	
					var negative = d < 0 ? '-' : '';
					var flo = parseFloat( d );
	
					// If NaN then there isn't much formatting that we can do - just
					// return immediately, escaping any HTML (this was supposed to
					// be a number after all)
					if ( isNaN( flo ) ) {
						return __htmlEscapeEntities( d );
					}
	
					flo = flo.toFixed( precision );
					d = Math.abs( flo );
	
					var intPart = parseInt( d, 10 );
					var floatPart = precision ?
						decimal+(d - intPart).toFixed( precision ).substring( 2 ):
						'';
	
					return negative + (prefix||'') +
						intPart.toString().replace(
							/\B(?=(\d{3})+(?!\d))/g, thousands
						) +
						floatPart +
						(postfix||'');
				}
			};
		},
	
		text: function () {
			return {
				display: __htmlEscapeEntities,
				filter: __htmlEscapeEntities
			};
		}
	};
	
	
	/*
	 * This is really a good bit rubbish this method of exposing the internal methods
	 * publicly... - To be fixed in 2.0 using methods on the prototype
	 */
	
	
	/**
	 * Create a wrapper function for exporting an internal functions to an external API.
	 *  @param {string} fn API function name
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#internal
	 */
	function _fnExternApiFunc (fn)
	{
		return function() {
			var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(
				Array.prototype.slice.call(arguments)
			);
			return DataTable.ext.internal[fn].apply( this, args );
		};
	}
	
	
	/**
	 * Reference to internal functions for use by plug-in developers. Note that
	 * these methods are references to internal functions and are considered to be
	 * private. If you use these methods, be aware that they are liable to change
	 * between versions.
	 *  @namespace
	 */
	$.extend( DataTable.ext.internal, {
		_fnExternApiFunc: _fnExternApiFunc,
		_fnBuildAjax: _fnBuildAjax,
		_fnAjaxUpdate: _fnAjaxUpdate,
		_fnAjaxParameters: _fnAjaxParameters,
		_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
		_fnAjaxDataSrc: _fnAjaxDataSrc,
		_fnAddColumn: _fnAddColumn,
		_fnColumnOptions: _fnColumnOptions,
		_fnAdjustColumnSizing: _fnAdjustColumnSizing,
		_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
		_fnColumnIndexToVisible: _fnColumnIndexToVisible,
		_fnVisbleColumns: _fnVisbleColumns,
		_fnGetColumns: _fnGetColumns,
		_fnColumnTypes: _fnColumnTypes,
		_fnApplyColumnDefs: _fnApplyColumnDefs,
		_fnHungarianMap: _fnHungarianMap,
		_fnCamelToHungarian: _fnCamelToHungarian,
		_fnLanguageCompat: _fnLanguageCompat,
		_fnBrowserDetect: _fnBrowserDetect,
		_fnAddData: _fnAddData,
		_fnAddTr: _fnAddTr,
		_fnNodeToDataIndex: _fnNodeToDataIndex,
		_fnNodeToColumnIndex: _fnNodeToColumnIndex,
		_fnGetCellData: _fnGetCellData,
		_fnSetCellData: _fnSetCellData,
		_fnSplitObjNotation: _fnSplitObjNotation,
		_fnGetObjectDataFn: _fnGetObjectDataFn,
		_fnSetObjectDataFn: _fnSetObjectDataFn,
		_fnGetDataMaster: _fnGetDataMaster,
		_fnClearTable: _fnClearTable,
		_fnDeleteIndex: _fnDeleteIndex,
		_fnInvalidate: _fnInvalidate,
		_fnGetRowElements: _fnGetRowElements,
		_fnCreateTr: _fnCreateTr,
		_fnBuildHead: _fnBuildHead,
		_fnDrawHead: _fnDrawHead,
		_fnDraw: _fnDraw,
		_fnReDraw: _fnReDraw,
		_fnAddOptionsHtml: _fnAddOptionsHtml,
		_fnDetectHeader: _fnDetectHeader,
		_fnGetUniqueThs: _fnGetUniqueThs,
		_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
		_fnFilterComplete: _fnFilterComplete,
		_fnFilterCustom: _fnFilterCustom,
		_fnFilterColumn: _fnFilterColumn,
		_fnFilter: _fnFilter,
		_fnFilterCreateSearch: _fnFilterCreateSearch,
		_fnEscapeRegex: _fnEscapeRegex,
		_fnFilterData: _fnFilterData,
		_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
		_fnUpdateInfo: _fnUpdateInfo,
		_fnInfoMacros: _fnInfoMacros,
		_fnInitialise: _fnInitialise,
		_fnInitComplete: _fnInitComplete,
		_fnLengthChange: _fnLengthChange,
		_fnFeatureHtmlLength: _fnFeatureHtmlLength,
		_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
		_fnPageChange: _fnPageChange,
		_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
		_fnProcessingDisplay: _fnProcessingDisplay,
		_fnFeatureHtmlTable: _fnFeatureHtmlTable,
		_fnScrollDraw: _fnScrollDraw,
		_fnApplyToChildren: _fnApplyToChildren,
		_fnCalculateColumnWidths: _fnCalculateColumnWidths,
		_fnThrottle: _fnThrottle,
		_fnConvertToWidth: _fnConvertToWidth,
		_fnGetWidestNode: _fnGetWidestNode,
		_fnGetMaxLenString: _fnGetMaxLenString,
		_fnStringToCss: _fnStringToCss,
		_fnSortFlatten: _fnSortFlatten,
		_fnSort: _fnSort,
		_fnSortAria: _fnSortAria,
		_fnSortListener: _fnSortListener,
		_fnSortAttachListener: _fnSortAttachListener,
		_fnSortingClasses: _fnSortingClasses,
		_fnSortData: _fnSortData,
		_fnSaveState: _fnSaveState,
		_fnLoadState: _fnLoadState,
		_fnSettingsFromNode: _fnSettingsFromNode,
		_fnLog: _fnLog,
		_fnMap: _fnMap,
		_fnBindAction: _fnBindAction,
		_fnCallbackReg: _fnCallbackReg,
		_fnCallbackFire: _fnCallbackFire,
		_fnLengthOverflow: _fnLengthOverflow,
		_fnRenderer: _fnRenderer,
		_fnDataSource: _fnDataSource,
		_fnRowAttributes: _fnRowAttributes,
		_fnExtend: _fnExtend,
		_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant
		                                // in 1.10, so this dead-end function is
		                                // added to prevent errors
	} );
	

	// jQuery access
	$.fn.dataTable = DataTable;

	// Provide access to the host jQuery object (circular reference)
	DataTable.$ = $;

	// Legacy aliases
	$.fn.dataTableSettings = DataTable.settings;
	$.fn.dataTableExt = DataTable.ext;

	// With a capital `D` we return a DataTables API instance rather than a
	// jQuery object
	$.fn.DataTable = function ( opts ) {
		return $(this).dataTable( opts ).api();
	};

	// All properties that are available to $.fn.dataTable should also be
	// available on $.fn.DataTable
	$.each( DataTable, function ( prop, val ) {
		$.fn.DataTable[ prop ] = val;
	} );


	// Information about events fired by DataTables - for documentation.
	/**
	 * Draw event, fired whenever the table is redrawn on the page, at the same
	 * point as fnDrawCallback. This may be useful for binding events or
	 * performing calculations when the table is altered at all.
	 *  @name DataTable#draw.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Search event, fired when the searching applied to the table (using the
	 * built-in global search, or column filters) is altered.
	 *  @name DataTable#search.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page change event, fired when the paging of the table is altered.
	 *  @name DataTable#page.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Order event, fired when the ordering applied to the table is altered.
	 *  @name DataTable#order.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * DataTables initialisation complete event, fired when the table is fully
	 * drawn, including Ajax data loaded, if Ajax data is required.
	 *  @name DataTable#init.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The JSON object request from the server - only
	 *    present if client-side Ajax sourced data is used</li></ol>
	 */

	/**
	 * State save event, fired when the table has changed state a new state save
	 * is required. This event allows modification of the state saving object
	 * prior to actually doing the save, including addition or other state
	 * properties (for plug-ins) or modification of a DataTables core property.
	 *  @name DataTable#stateSaveParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The state information to be saved
	 */

	/**
	 * State load event, fired when the table is loading state from the stored
	 * data, but prior to the settings object being modified by the saved state
	 * - allowing modification of the saved state is required or loading of
	 * state for a plug-in.
	 *  @name DataTable#stateLoadParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * State loaded event, fired when state has been loaded from stored data and
	 * the settings object has been modified by the loaded data.
	 *  @name DataTable#stateLoaded.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * Processing event, fired when DataTables is doing some kind of processing
	 * (be it, order, search or anything else). It can be used to indicate to
	 * the end user that there is something happening, or that something has
	 * finished.
	 *  @name DataTable#processing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {boolean} bShow Flag for if DataTables is doing processing or not
	 */

	/**
	 * Ajax (XHR) event, fired whenever an Ajax request is completed from a
	 * request to made to the server for new data. This event is called before
	 * DataTables processed the returned data, so it can also be used to pre-
	 * process the data returned from the server, if needed.
	 *
	 * Note that this trigger is called in `fnServerData`, if you override
	 * `fnServerData` and which to use this event, you need to trigger it in you
	 * success function.
	 *  @name DataTable#xhr.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {object} json JSON returned from the server
	 *
	 *  @example
	 *     // Use a custom property returned from the server in another DOM element
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       $('#status').html( json.status );
	 *     } );
	 *
	 *  @example
	 *     // Pre-process the data returned from the server
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {
	 *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;
	 *       }
	 *       // Note no return - manipulate the data directly in the JSON object.
	 *     } );
	 */

	/**
	 * Destroy event, fired when the DataTable is destroyed by calling fnDestroy
	 * or passing the bDestroy:true parameter in the initialisation object. This
	 * can be used to remove bound events, added DOM nodes, etc.
	 *  @name DataTable#destroy.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page length change event, fired when number of records to show on each
	 * page (the length) is changed.
	 *  @name DataTable#length.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {integer} len New length
	 */

	/**
	 * Column sizing has changed.
	 *  @name DataTable#column-sizing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Column visibility has changed.
	 *  @name DataTable#column-visibility.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {int} column Column index
	 *  @param {bool} vis `false` if column now hidden, or `true` if visible
	 */

	return $.fn.dataTable;
}));


/***/ }),

/***/ "./src/modules/cookie/index.ts":
/*!*************************************!*\
  !*** ./src/modules/cookie/index.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * 浏览器操作cookie
 */
exports.__esModule = true;
exports["default"] = {
    /**
     * 获取cookie
     * @param name cookie名称
     */
    get: function (name) {
        var xarr = document.cookie.match(new RegExp("(^| )" + name + "=([^;]*)(;|$)"));
        if (xarr != null)
            return decodeURIComponent(xarr[2]);
        return null;
    },
    /**
     * 设置cookie
     * @param key cookie名称
     * @param value cookie的值
     * @param expiredays 过期时间（天）
     * @param domain cookie的domain
     */
    set: function (key, value, expiredays, domain) {
        var cookiestr = key + "=" + escape(value);
        if (expiredays != undefined) {
            var exdate = new Date();
            exdate.setDate(exdate.getDate() + expiredays);
            cookiestr += ";expires=" + exdate.toUTCString();
        }
        if (domain != undefined) {
            cookiestr += ";domain=" + domain;
        }
        cookiestr += ';path=/';
        document.cookie = cookiestr;
    },
    /**
     * 删除cookie
     * @param key cookie名称
     * @param domain cookie的domain
     */
    del: function (key, domain) {
        var exdate = new Date((new Date).getTime() - 1);
        if (domain) {
            document.cookie = key + '=;path=/;expires=' + exdate.toUTCString() + ';domain=' + domain;
        }
        else {
            document.cookie = key + '=;path=/;expires=' + exdate.toUTCString();
        }
    }
};


/***/ }),

/***/ "./src/modules/newzxg/web.ts":
/*!***********************************!*\
  !*** ./src/modules/newzxg/web.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * 新版自选股接口
 *
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var user_1 = __importDefault(__webpack_require__(/*! ../user */ "./src/modules/user/index.ts"));
var cookie_1 = __importDefault(__webpack_require__(/*! ../cookie */ "./src/modules/cookie/index.ts"));
var apiurl = '//myfavor.eastmoney.com/v4/'; //正式环境
var appkey = 'd41d8cd98f00b204e9800998ecf8427e';
var fingerprint = cookie_1["default"].get('qgqp_b_id') || '';
if (user_1["default"].get() == null) {
    apiurl += 'anonymwebouter/';
}
else {
    apiurl += 'webouter/';
}
exports["default"] = {
    /**
     * 获取自选股接口通用参数
     */
    getParams: function () {
        return __awaiter(this, void 0, void 0, function () {
            var fp;
            return __generator(this, function (_a) {
                if (user_1["default"].get() == null) {
                    fp = fingerprint;
                    return [2 /*return*/, "appkey=" + appkey + "&bid=" + fp];
                }
                else {
                    return [2 /*return*/, "appkey=" + appkey];
                }
                return [2 /*return*/];
            });
        });
    },
    /**
     * 获取默认分组股票，检测是否加了自选
     * @param {*} code 股票代码 0.300059
     */
    defaultGroupList: function (code) {
        if (code === void 0) { code = ''; }
        return __awaiter(this, void 0, void 0, function () {
            var params;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getParams()];
                    case 1:
                        params = _a.sent();
                        code = code.replace('.', '$');
                        return [2 /*return*/, $.ajax({
                                url: apiurl + "gsaandcheck?" + params + "&cb=?",
                                type: 'GET',
                                dataType: 'jsonp',
                                data: {
                                    sc: code
                                }
                            })
                                .then(function (json) {
                                if (json.state == 0 && json.data && json.data.stkstarlist instanceof Array) {
                                    return {
                                        re: true,
                                        result: {
                                            check: json.data.check,
                                            list: json.data.stkstarlist.map(function (v) {
                                                return v.security.substring(0, v.security.lastIndexOf('$')).replace('$', '.');
                                            })
                                        }
                                    };
                                }
                                else {
                                    return {
                                        re: true,
                                        result: {
                                            check: false,
                                            list: []
                                        }
                                    };
                                }
                            })];
                }
            });
        });
    },
    /**
     * 加自选到默认分组
     * @param {*} code 股票代码
     */
    addDefaultStock: function (code) {
        return __awaiter(this, void 0, void 0, function () {
            var params;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getParams()];
                    case 1:
                        params = _a.sent();
                        code = code.replace('.', '$');
                        return [2 /*return*/, $.ajax({
                                url: apiurl + "asz?" + params + "&cb=?",
                                type: 'GET',
                                dataType: 'jsonp',
                                data: {
                                    sc: code
                                }
                            }).then(function (back) {
                                if (back.state == 0) {
                                    return {
                                        re: true
                                    };
                                }
                                else {
                                    return {
                                        re: false,
                                        message: back.message
                                    };
                                }
                            })];
                }
            });
        });
    },
    /**
     * 删除默认分组的自选
     * @param {*} code 股票代码
     */
    deleteDefaultStock: function (code) {
        return __awaiter(this, void 0, void 0, function () {
            var params;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getParams()];
                    case 1:
                        params = _a.sent();
                        code = code.replace('.', '$');
                        return [2 /*return*/, $.ajax({
                                url: apiurl + "dsz?" + params + "&cb=?",
                                type: 'GET',
                                dataType: 'jsonp',
                                data: {
                                    sc: code
                                }
                            }).then(function (back) {
                                if (back.state == 0) {
                                    return {
                                        re: true
                                    };
                                }
                                else {
                                    return {
                                        re: false,
                                        message: back.message
                                    };
                                }
                            })];
                }
            });
        });
    }
};


/***/ }),

/***/ "./src/modules/quotedelay/index.ts":
/*!*****************************************!*\
  !*** ./src/modules/quotedelay/index.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * 行情延迟参数
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
// wbp2u=UID|用户组织类型|通行证类型|用户交易类型|终端名称（app包名）
// 参数说明：
// 1. 用户UID：登陆用户必须传该数据，未登录则留空
// 2. 用户组织类型是数字：0表示未知（默认），1表示个人用户，2表示机构用户
// 3. 通行证类型是数字：0表示未知（默认），1表示通行证手机号在中国大陆地区，2表示通行证手机号在中国大陆以外地区（包括中国港澳台），3表示通行证没有手机号
// 4. 用户交易类型是数字：0表示未知（默认），1表示非交易用户，2表示交易用户（未登录的交易用户，该数据也必须填2）
// 5. 终端名称（app包名）是字符串：网站填web，wap站填wap，天天基金填ttjj，哈富分享页填hafoo.share，app填包名，其他终端的参数内容可以咨询服务端开发人员
// 注意事项：
// 1. 服务端实现时应当支持后续新参数扩展，每次新增参数都会在结尾用|分隔后新增
var cookie_1 = __importDefault(__webpack_require__(/*! ../cookie */ "./src/modules/cookie/index.ts"));
var delayparams = 'UID|0|MOBILE|0|web';
if (cookie_1["default"].get('uidal')) {
    delayparams = delayparams.replace('UID', cookie_1["default"].get('uidal').substring(0, 16));
}
else {
    delayparams = delayparams.replace('UID', '');
}
if (cookie_1["default"].get('mtp') != null) {
    if (cookie_1["default"].get('mtp') == '0') {
        delayparams = delayparams.replace('MOBILE', '3');
    }
    else {
        delayparams = delayparams.replace('MOBILE', cookie_1["default"].get('mtp'));
    }
}
else {
    delayparams = delayparams.replace('MOBILE', '0');
}
module.exports = delayparams;


/***/ }),

/***/ "./src/modules/user/index.ts":
/*!***********************************!*\
  !*** ./src/modules/user/index.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * 用户信息
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var cookie_1 = __importDefault(__webpack_require__(/*! ../cookie */ "./src/modules/cookie/index.ts"));
var thisuser = undefined;
/**
 * 用户
 */
var user = {
    /**
     * 获取用户信息
     */
    get: function () {
        if (thisuser != undefined)
            return thisuser;
        if (cookie_1["default"].get('ut') && cookie_1["default"].get('ct') && cookie_1["default"].get('uidal')) {
            thisuser = {
                id: cookie_1["default"].get('uidal').substring(0, 16),
                nick: cookie_1["default"].get('uidal').substring(16)
            };
        }
        else {
            thisuser = null;
        }
        return thisuser;
    },
    /**
     * 退出登录
     * @param  {function} 退出之后回调
     */
    logOut: function (callback) {
        var date = new Date();
        document.cookie = "pi=;path=/;domain=eastmoney.com;expires=" + date.toUTCString();
        document.cookie = "ct=;path=/;domain=eastmoney.com;expires=" + date.toUTCString();
        document.cookie = "ut=;path=/;domain=eastmoney.com;expires=" + date.toUTCString();
        document.cookie = "uidal=;path=/;domain=eastmoney.com;expires=" + date.toUTCString();
        if (callback) {
            callback();
        }
    },
    isLogin: function () {
        if (this.get()) {
            return true;
        }
        else {
            return false;
        }
    },
    /**
     * 跳转登录页面
     */
    goLoginPage: function () {
        self.location.href = "https://passport2.eastmoney.com/pub/login?backurl=" + encodeURIComponent(self.location.href);
    }
};
exports["default"] = user;


/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ })

/******/ });
//# sourceMappingURL=gridlist.js.map